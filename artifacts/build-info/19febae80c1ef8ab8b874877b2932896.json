{
	"id": "19febae80c1ef8ab8b874877b2932896",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"viaIR": true,
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"BlockchainHealthRecords.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.26;\r\n\r\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\r\n\r\ncontract BlockchainHealthRecords is AccessControl {\r\n    bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\");\r\n    bytes32 public constant PATIENT_ROLE = keccak256(\"PATIENT_ROLE\");\r\n    bytes32 public constant DOCTOR_ROLE = keccak256(\"DOCTOR_ROLE\");\r\n\r\n    struct PatientRecord {\r\n        uint256 patientId;\r\n        address owner;\r\n        string ipfsHash; // Off-chain storage (IPFS/Arweave)\r\n        address[] authorizedDoctors;\r\n        uint256 timestamp;\r\n    }\r\n\r\n    mapping(uint256 => PatientRecord) public patientRecords;\r\n    mapping(uint256 => bytes32) private emergencyPins;\r\n\r\n    uint256 public nextPatientId;\r\n\r\n    event PatientRecordAdded(uint256 patientId, address indexed owner, string ipfsHash);\r\n    event PatientRecordUpdated(uint256 patientId, string newIpfsHash);\r\n    event AccessGranted(uint256 patientId, address indexed doctor);\r\n    event EmergencyPinSet(uint256 patientId);\r\n\r\n    constructor() {\r\n        _grantRole(ADMIN_ROLE, msg.sender);\r\n        _setRoleAdmin(PATIENT_ROLE, ADMIN_ROLE);\r\n        _setRoleAdmin(DOCTOR_ROLE, ADMIN_ROLE);\r\n    }\r\n\r\n    modifier onlyPatient(uint256 _patientId) {\r\n        require(msg.sender == patientRecords[_patientId].owner, \"Not the record owner.\");\r\n        _;\r\n    }\r\n\r\n    function addPatientRecord(string memory _ipfsHash) public {\r\n        require(hasRole(PATIENT_ROLE, msg.sender), \"Not a registered patient.\");\r\n        \r\n        uint256 patientId = nextPatientId;\r\n        patientRecords[patientId] = PatientRecord({\r\n            patientId: patientId,\r\n            owner: msg.sender,\r\n            ipfsHash: _ipfsHash,\r\n            authorizedDoctors: new address [](0),\r\n            timestamp: block.timestamp\r\n        });\r\n\r\n        nextPatientId++;\r\n\r\n        emit PatientRecordAdded(patientId, msg.sender, _ipfsHash);\r\n    }\r\n\r\n    function updatePatientRecord(uint256 _patientId, string memory _newIpfsHash) public onlyPatient(_patientId) {\r\n        require(_patientId < nextPatientId, \"Patient record does not exist.\");\r\n\r\n        patientRecords[_patientId].ipfsHash = _newIpfsHash;\r\n        patientRecords[_patientId].timestamp = block.timestamp;\r\n\r\n        emit PatientRecordUpdated(_patientId, _newIpfsHash);\r\n    }\r\n\r\n    function grantAccess(uint256 _patientId, address _doctor) public onlyPatient(_patientId) {\r\n        require(_patientId < nextPatientId, \"Patient record does not exist.\");\r\n        require(hasRole(DOCTOR_ROLE, _doctor), \"Not a registered doctor.\");\r\n\r\n        for (uint256 i = 0; i < patientRecords[_patientId].authorizedDoctors.length; i++) {\r\n            require(patientRecords[_patientId].authorizedDoctors[i] != _doctor, \"Already authorized.\");\r\n        }\r\n\r\n        patientRecords[_patientId].authorizedDoctors.push(_doctor);\r\n        emit AccessGranted(_patientId, _doctor);\r\n    }\r\n\r\n    function getPatientRecord(uint256 _patientId) public view returns (string memory) {\r\n        require(\r\n            msg.sender == patientRecords[_patientId].owner || isAuthorized(_patientId, msg.sender),\r\n            \"Not authorized.\"\r\n        );\r\n        return patientRecords[_patientId].ipfsHash;\r\n    }\r\n\r\n    function isAuthorized(uint256 _patientId, address _caller) internal view returns (bool) {\r\n        for (uint256 i = 0; i < patientRecords[_patientId].authorizedDoctors.length; i++) {\r\n            if (patientRecords[_patientId].authorizedDoctors[i] == _caller) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function setEmergencyPin(uint256 _patientId, string memory _pin) public onlyPatient(_patientId) {\r\n        require(_patientId < nextPatientId, \"Patient record does not exist.\");\r\n        emergencyPins[_patientId] = keccak256(abi.encodePacked(_pin));\r\n        emit EmergencyPinSet(_patientId);\r\n    }\r\n\r\n    function emergencyAccess(uint256 _patientId, string memory _pin) public view returns (string memory) {\r\n        require(_patientId < nextPatientId, \"Patient record does not exist.\");\r\n        require(keccak256(abi.encodePacked(_pin)) == emergencyPins[_patientId], \"Incorrect PIN.\");\r\n        return patientRecords[_patientId].ipfsHash;\r\n    }\r\n\r\n    function assignRole(address _account, bytes32 _role) public {\r\n        require(hasRole(ADMIN_ROLE, msg.sender), \"Not an admin.\");\r\n        grantRole(_role, _account);\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC-165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"BlockchainHealthRecords.sol": {
				"BlockchainHealthRecords": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "patientId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "doctor",
									"type": "address"
								}
							],
							"name": "AccessGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "patientId",
									"type": "uint256"
								}
							],
							"name": "EmergencyPinSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "patientId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "ipfsHash",
									"type": "string"
								}
							],
							"name": "PatientRecordAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "patientId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "newIpfsHash",
									"type": "string"
								}
							],
							"name": "PatientRecordUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DOCTOR_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PATIENT_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_ipfsHash",
									"type": "string"
								}
							],
							"name": "addPatientRecord",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "_role",
									"type": "bytes32"
								}
							],
							"name": "assignRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_patientId",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "_pin",
									"type": "string"
								}
							],
							"name": "emergencyAccess",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_patientId",
									"type": "uint256"
								}
							],
							"name": "getPatientRecord",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_patientId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_doctor",
									"type": "address"
								}
							],
							"name": "grantAccess",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nextPatientId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "patientRecords",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "patientId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "ipfsHash",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_patientId",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "_pin",
									"type": "string"
								}
							],
							"name": "setEmergencyPin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_patientId",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "_newIpfsHash",
									"type": "string"
								}
							],
							"name": "updatePatientRecord",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n  mstore(0x40, 0x80)\n  jumpi(tag_2, callvalue)\n    /* \"BlockchainHealthRecords.sol\":1068:1102  _grantRole(ADMIN_ROLE, msg.sender) */\n  tag_4\n    /* \"BlockchainHealthRecords.sol\":1091:1101  msg.sender */\n  caller\n    /* \"BlockchainHealthRecords.sol\":1068:1102  _grantRole(ADMIN_ROLE, msg.sender) */\n  tag_1\n  jump\t// in\ntag_4:\n  pop\n    /* \"BlockchainHealthRecords.sol\":286:311  keccak256(\"PATIENT_ROLE\") */\n  0x72606200fac42b7dc86b75901d61ecfab2a4a1a6eded478b97a428094891abed\n  0x00\n    /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n  dup2\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n  0x01269c68c28a67305f4a2d47532888d6c961251cfcb06c9cdb6066d32b24b321\n    /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n  dup1\n  sload\n  0x00\n  dup1\n  mload\n  0x20\n  data_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n  swap2\n  dup3\n  swap1\n  sstore\n    /* \"BlockchainHealthRecords.sol\":217:240  keccak256(\"ADMIN_ROLE\") */\n  swap1\n  swap3\n    /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n  swap1\n  swap2\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5886:5938  RoleAdminChanged(role, previousAdminRole, adminRole) */\n  0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff\n  swap1\n  dup1\n  log4\n    /* \"BlockchainHealthRecords.sol\":356:380  keccak256(\"DOCTOR_ROLE\") */\n  0x0af1dac7dea2fd7f7738119cec7df099dfad49aa9d2e7d17ba6b60f63ae7411f\n  0x00\n    /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n  dup2\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n  0xdf1cb6f79b8687a60e91aced08290a53cb47a179b80c0c7c836d1c923c9a5648\n    /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n  dup1\n  sload\n  0x00\n  dup1\n  mload\n  0x20\n  data_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n  swap2\n  dup3\n  swap1\n  sstore\n    /* \"BlockchainHealthRecords.sol\":217:240  keccak256(\"ADMIN_ROLE\") */\n  swap1\n  swap3\n    /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n  swap1\n  swap2\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":5886:5938  RoleAdminChanged(role, previousAdminRole, adminRole) */\n  0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff\n  swap1\n  dup1\n  log4\n    /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n  mload(0x40)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  return\ntag_2:\n  0x00\n  dup1\n  revert\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_1:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n  dup2\n  and\n  0x00\n  swap1\n  dup2\n  mstore\n  0x00\n  dup1\n  mload\n  0x20\n  data_27ad65e758a22f2fe9f0d501da4e2a54eb635546ab8210118501a36d81e3b048\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n  0x20\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n  0xff\n  and\n  tag_5\n  jumpi\n  sub(shl(0xa0, 0x01), 0x01)\n  and\n  0x00\n  dup2\n  dup2\n  mstore\n  0x00\n  dup1\n  mload\n  0x20\n  data_27ad65e758a22f2fe9f0d501da4e2a54eb635546ab8210118501a36d81e3b048\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n  0x20\n  mstore\n  0x40\n  dup2\n  keccak256\n  dup1\n  sload\n  not(0xff)\n  and\n  0x01\n  or\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n  swap2\n    /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n  swap1\n  0x00\n  dup1\n  mload\n  0x20\n  data_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"BlockchainHealthRecords.sol\":217:240  keccak256(\"ADMIN_ROLE\") */\n  swap1\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  swap1\n    /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n  dup1\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\ntag_5:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n  pop\n    /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n  swap1\n  jump\t// out\nstop\ndata_27ad65e758a22f2fe9f0d501da4e2a54eb635546ab8210118501a36d81e3b048 7d7ffb7a348e1c6a02869081a26547b49160dd3df72d1d75a570eb9b698292ec\ndata_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8 a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n\nsub_0: assembly {\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      0x80\n      dup1\n      0x40\n      mstore\n      jumpi(tag_18, iszero(lt(calldatasize, 0x04)))\n      0x00\n      dup1\n      revert\n    tag_18:\n      shr(0xe0, calldataload(0x00))\n      swap1\n      dup2\n      0x01ffc9a7\n      eq\n      tag_20\n      jumpi\n      pop\n      dup1\n      0x1d9486de\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_26\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_28\n      jumpi\n      dup1\n      0x3c2bc6a1\n      eq\n      tag_30\n      jumpi\n      dup1\n      0x65dd152c\n      eq\n      tag_32\n      jumpi\n      dup1\n      0x75b238fc\n      eq\n      tag_34\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_36\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_38\n      jumpi\n      dup1\n      0xac5cb97d\n      eq\n      tag_40\n      jumpi\n      dup1\n      0xb1131795\n      eq\n      tag_42\n      jumpi\n      dup1\n      0xb38deff0\n      eq\n      tag_44\n      jumpi\n      dup1\n      0xb6314915\n      eq\n      tag_46\n      jumpi\n      dup1\n      0xb9fff11b\n      eq\n      tag_48\n      jumpi\n      dup1\n      0xd3d188a1\n      eq\n      tag_50\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_52\n      jumpi\n      dup1\n      0xdba45462\n      eq\n      tag_54\n      jumpi\n      0xfec331f2\n      eq\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      jumpi(tag_60, callvalue)\n      jumpi(tag_60, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"BlockchainHealthRecords.sol\":356:380  keccak256(\"DOCTOR_ROLE\") */\n      0x0af1dac7dea2fd7f7738119cec7df099dfad49aa9d2e7d17ba6b60f63ae7411f\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      dup2\n      mstore\n      return\n    tag_60:\n      0x00\n      dup1\n      revert\n    tag_54:\n      jumpi(tag_60, callvalue)\n      tag_64\n      calldatasize\n      tag_4\n      jump\t// in\n    tag_64:\n      dup2\n      0x00\n      mstore\n        /* \"BlockchainHealthRecords.sol\":1291:1305  patientRecords */\n      0x01\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      0x20\n      mstore\n        /* \"BlockchainHealthRecords.sol\":1269:1349  require(msg.sender == patientRecords[_patientId].owner, \"Not the record owner.\") */\n      tag_65\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n        /* \"BlockchainHealthRecords.sol\":1291:1305  patientRecords */\n      0x01\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      keccak256(0x00, 0x40)\n        /* \"BlockchainHealthRecords.sol\":1291:1323  patientRecords[_patientId].owner */\n      add\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      sload\n      and\n        /* \"BlockchainHealthRecords.sol\":1277:1287  msg.sender */\n      caller\n        /* \"BlockchainHealthRecords.sol\":1277:1323  msg.sender == patientRecords[_patientId].owner */\n      eq\n        /* \"BlockchainHealthRecords.sol\":1269:1349  require(msg.sender == patientRecords[_patientId].owner, \"Not the record owner.\") */\n      tag_10\n      jump\t// in\n    tag_65:\n        /* \"BlockchainHealthRecords.sol\":2062:2131  require(_patientId < nextPatientId, \"Patient record does not exist.\") */\n      tag_66\n        /* \"BlockchainHealthRecords.sol\":2083:2096  nextPatientId */\n      0x03\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      sload\n        /* \"BlockchainHealthRecords.sol\":2070:2096  _patientId < nextPatientId */\n      dup4\n      lt\n        /* \"BlockchainHealthRecords.sol\":2062:2131  require(_patientId < nextPatientId, \"Patient record does not exist.\") */\n      tag_9\n      jump\t// in\n    tag_66:\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      dup2\n      0x00\n      mstore\n        /* \"BlockchainHealthRecords.sol\":1291:1305  patientRecords */\n      0x01\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      0x20\n      mstore\n        /* \"BlockchainHealthRecords.sol\":2144:2179  patientRecords[_patientId].ipfsHash */\n      0x02\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      keccak256(0x00, 0x40)\n        /* \"BlockchainHealthRecords.sol\":2144:2179  patientRecords[_patientId].ipfsHash */\n      add\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      swap2\n      dup2\n      mload\n      swap3\n      0xffffffffffffffff\n      dup5\n      gt\n      tag_67\n      jumpi\n      tag_69\n      dup2\n      sload\n      tag_6\n      jump\t// in\n    tag_69:\n      0x1f\n      dup2\n      gt\n      tag_70\n      jumpi\n    tag_71:\n      pop\n      0x20\n      swap4\n      0x1f\n      dup2\n      gt\n      0x01\n      eq\n      tag_72\n      jumpi\n      dup1\n        /* \"BlockchainHealthRecords.sol\":2277:2323  PatientRecordUpdated(_patientId, _newIpfsHash) */\n      0x080568d98c5c4be465f3f47ef6da4b979fdc4ca568775898275584974a140f0f\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      swap6\n      0x00\n      swap2\n      tag_74\n      jumpi\n    tag_75:\n      pop\n      dup2\n        /* \"BlockchainHealthRecords.sol\":1291:1305  patientRecords */\n      0x01\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      shl\n      swap2\n      not(0x00)\n      swap1\n        /* \"BlockchainHealthRecords.sol\":2083:2096  nextPatientId */\n      0x03\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      shl\n      shr\n      not\n      and\n      or\n      swap1\n      sstore\n    tag_76:\n      dup1\n      0x00\n      mstore\n        /* \"BlockchainHealthRecords.sol\":1291:1305  patientRecords */\n      0x01\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      0x20\n      mstore\n        /* \"BlockchainHealthRecords.sol\":2244:2259  block.timestamp */\n      timestamp\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      0x04\n      keccak256(0x00, 0x40)\n        /* \"BlockchainHealthRecords.sol\":2205:2241  patientRecords[_patientId].timestamp */\n      add\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      sstore\n        /* \"BlockchainHealthRecords.sol\":2277:2323  PatientRecordUpdated(_patientId, _newIpfsHash) */\n      tag_77\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      mload(0x40)\n        /* \"BlockchainHealthRecords.sol\":2277:2323  PatientRecordUpdated(_patientId, _newIpfsHash) */\n      swap3\n      dup4\n      swap3\n      dup4\n      tag_13\n      jump\t// in\n    tag_77:\n      sub\n      swap1\n      log1\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      stop\n    tag_74:\n      swap1\n      pop\n      dup5\n      add\n      mload\n      dup7\n      jump(tag_75)\n    tag_72:\n        /* \"BlockchainHealthRecords.sol\":4118:4140  abi.encodePacked(_pin) */\n      not(0x1f)\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      dup2\n      and\n      swap5\n      dup3\n      0x00\n      mstore\n      dup1\n      0x00\n      keccak256\n      swap6\n      0x00\n    tag_78:\n      dup2\n      dup2\n      lt\n      tag_79\n      jumpi\n      pop\n      swap6\n      dup3\n      swap2\n        /* \"BlockchainHealthRecords.sol\":1291:1305  patientRecords */\n      0x01\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      swap4\n        /* \"BlockchainHealthRecords.sol\":2277:2323  PatientRecordUpdated(_patientId, _newIpfsHash) */\n      0x080568d98c5c4be465f3f47ef6da4b979fdc4ca568775898275584974a140f0f\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      swap9\n      lt\n      tag_81\n      jumpi\n    tag_82:\n      pop\n      pop\n      dup2\n      shl\n      add\n      swap1\n      sstore\n      jump(tag_76)\n    tag_81:\n      dup7\n      add\n      mload\n      not(0x00)\n      0xf8\n      dup5\n        /* \"BlockchainHealthRecords.sol\":2083:2096  nextPatientId */\n      0x03\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      shl\n      and\n      shr\n      not\n      and\n      swap1\n      sstore\n      dup7\n      dup1\n      jump(tag_82)\n    tag_79:\n      dup7\n      dup4\n      add\n      mload\n      dup9\n      sstore\n        /* \"BlockchainHealthRecords.sol\":1291:1305  patientRecords */\n      0x01\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      swap1\n      swap8\n      add\n      swap7\n      0x20\n      swap3\n      dup4\n      add\n      swap3\n      add\n      jump(tag_78)\n    tag_70:\n      tag_83\n      swap1\n      dup3\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      0x1f\n      dup8\n      add\n      0x05\n      shr\n      dup2\n      add\n      swap2\n      0x20\n      dup9\n      lt\n      tag_84\n      jumpi\n    tag_85:\n      0x1f\n      add\n      0x05\n      shr\n      add\n      swap1\n      tag_12\n      jump\t// in\n    tag_83:\n      dup5\n      jump(tag_71)\n    tag_84:\n      swap1\n      swap2\n      pop\n      dup2\n      swap1\n      jump(tag_85)\n    tag_67:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_52:\n      jumpi(tag_60, callvalue)\n      jumpi(tag_60, slt(add(not(0x03), calldatasize), 0x40))\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      tag_90\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      calldataload(0x04)\n      tag_91\n      tag_1\n      jump\t// in\n    tag_91:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      tag_92\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      tag_93\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x00\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x00\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      0x20\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      0x40\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x00\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      add\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap1\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n    tag_93:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      tag_14\n      jump\t// in\n    tag_92:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      tag_16\n      jump\t// in\n    tag_90:\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      stop\n    tag_50:\n      jumpi(tag_60, callvalue)\n      jumpi(tag_60, slt(add(not(0x03), calldatasize), 0x20))\n      mstore(0x00, calldataload(0x04))\n      mstore(0x20, 0x01)\n      keccak256(0x00, 0x40)\n      dup1\n      sload\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      0x01\n        /* \"BlockchainHealthRecords.sol\":606:661  mapping(uint256 => PatientRecord) public patientRecords */\n      dup4\n      add\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      sload\n      and\n        /* \"BlockchainHealthRecords.sol\":606:661  mapping(uint256 => PatientRecord) public patientRecords */\n      swap2\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      tag_98\n      0x04\n        /* \"BlockchainHealthRecords.sol\":606:661  mapping(uint256 => PatientRecord) public patientRecords */\n      tag_99\n      0x02\n      dup5\n      add\n      tag_7\n      jump\t// in\n    tag_99:\n      swap3\n      add\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      sload\n      swap2\n      mload(0x40)\n      swap5\n      dup6\n      swap5\n      dup6\n      mstore\n      0x20\n      dup6\n      add\n      mstore\n      0x80\n      0x40\n      dup6\n      add\n      mstore\n      0x80\n      dup5\n      add\n      swap1\n      tag_5\n      jump\t// in\n    tag_98:\n      swap1\n      0x60\n      dup4\n      add\n      mstore\n      sub\n      swap1\n      return\n    tag_48:\n      jumpi(tag_60, callvalue)\n      jumpi(tag_60, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      dup1\n      0x00\n      mstore\n      mstore(0x20, 0x01)\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      0x01\n      keccak256(0x00, 0x40)\n        /* \"BlockchainHealthRecords.sol\":3062:3094  patientRecords[_patientId].owner */\n      add\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      sload\n      and\n        /* \"BlockchainHealthRecords.sol\":3048:3058  msg.sender */\n      caller\n        /* \"BlockchainHealthRecords.sol\":3048:3094  msg.sender == patientRecords[_patientId].owner */\n      eq\n        /* \"BlockchainHealthRecords.sol\":3048:3134  msg.sender == patientRecords[_patientId].owner || isAuthorized(_patientId, msg.sender) */\n      dup1\n      iszero\n      tag_104\n      jumpi\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n    tag_105:\n      iszero\n      tag_106\n      jumpi\n      0x00\n      mstore\n      mstore(0x20, 0x01)\n      tag_108\n      tag_109\n        /* \"BlockchainHealthRecords.sol\":3195:3230  patientRecords[_patientId].ipfsHash */\n      0x02\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      keccak256(0x00, 0x40)\n        /* \"BlockchainHealthRecords.sol\":3195:3230  patientRecords[_patientId].ipfsHash */\n      add\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      tag_7\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      swap2\n      dup3\n      swap2\n      0x20\n      dup4\n      mstore\n      0x20\n      dup4\n      add\n      swap1\n      tag_5\n      jump\t// in\n    tag_108:\n      sub\n      swap1\n      return\n    tag_106:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0f\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x89, 0x2737ba1030baba3437b934bd32b217)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"BlockchainHealthRecords.sol\":3048:3134  msg.sender == patientRecords[_patientId].owner || isAuthorized(_patientId, msg.sender) */\n    tag_104:\n        /* \"BlockchainHealthRecords.sol\":3048:3058  msg.sender */\n      pop\n        /* \"BlockchainHealthRecords.sol\":3098:3134  isAuthorized(_patientId, msg.sender) */\n      tag_110\n        /* \"BlockchainHealthRecords.sol\":3048:3058  msg.sender */\n      caller\n        /* \"BlockchainHealthRecords.sol\":3098:3134  isAuthorized(_patientId, msg.sender) */\n      dup3\n      tag_17\n      jump\t// in\n    tag_110:\n        /* \"BlockchainHealthRecords.sol\":3048:3134  msg.sender == patientRecords[_patientId].owner || isAuthorized(_patientId, msg.sender) */\n      jump(tag_105)\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n    tag_46:\n      jumpi(tag_60, callvalue)\n      jumpi(tag_60, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      0xffffffffffffffff\n      dup2\n      gt\n      tag_60\n      jumpi\n      tag_117\n      swap1\n      calldatasize\n      swap1\n      0x04\n      add\n      tag_3\n      jump\t// in\n    tag_117:\n        /* \"BlockchainHealthRecords.sol\":1476:1486  msg.sender */\n      caller\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      0x00\n      swap1\n      dup2\n      mstore\n      mstore(0x20, 0x01269c68c28a67305f4a2d47532888d6c961251cfcb06c9cdb6066d32b24b320)\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      iszero\n      tag_118\n      jumpi\n        /* \"BlockchainHealthRecords.sol\":1558:1571  nextPatientId */\n      0x03\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      sload\n      swap1\n      0x20\n      mload(0x40)\n      tag_120\n      dup3\n      dup3\n      tag_2\n      jump\t// in\n    tag_120:\n      0x00\n      dup2\n      mstore\n      0x00\n      calldatasize\n      dup2\n      calldatacopy\n      mload(0x40)\n      swap2\n      0xa0\n      dup4\n      add\n      dup4\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_67\n      jumpi\n      0x40\n      mstore\n      dup5\n      dup4\n      mstore\n        /* \"BlockchainHealthRecords.sol\":1610:1829  PatientRecord({... */\n      dup1\n      dup4\n      add\n        /* \"BlockchainHealthRecords.sol\":1476:1486  msg.sender */\n      swap2\n      caller\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      dup4\n      mstore\n      0x40\n        /* \"BlockchainHealthRecords.sol\":1610:1829  PatientRecord({... */\n      dup5\n      add\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      dup6\n      dup2\n      mstore\n        /* \"BlockchainHealthRecords.sol\":1610:1829  PatientRecord({... */\n      0x60\n      dup6\n      add\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      swap2\n      dup3\n      mstore\n        /* \"BlockchainHealthRecords.sol\":1610:1829  PatientRecord({... */\n      0x80\n      dup6\n      add\n        /* \"BlockchainHealthRecords.sol\":1802:1817  block.timestamp */\n      swap4\n      timestamp\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      dup6\n      mstore\n      dup8\n      0x00\n      mstore\n        /* \"BlockchainHealthRecords.sol\":1582:1596  patientRecords */\n      0x01\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      dup5\n      mstore\n      keccak256(0x00, 0x40)\n      swap6\n      mload\n      dup7\n      sstore\n        /* \"BlockchainHealthRecords.sol\":1582:1596  patientRecords */\n      0x01\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      dup7\n      add\n      swap1\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      swap1\n      mload\n      and\n      shl(0xa0, 0xffffffffffffffffffffffff)\n      dup3\n      sload\n      and\n      or\n      swap1\n      sstore\n      0x02\n      dup6\n      add\n      swap1\n      mload\n      dup1\n      mload\n      swap1\n      0xffffffffffffffff\n      dup3\n      gt\n      tag_67\n      jumpi\n      dup2\n      swap1\n      tag_125\n      dup5\n      sload\n      tag_6\n      jump\t// in\n    tag_125:\n      0x1f\n      dup2\n      gt\n      tag_126\n      jumpi\n    tag_127:\n      pop\n      dup6\n      swap1\n      0x1f\n      dup4\n      gt\n      0x01\n      eq\n      tag_128\n      jumpi\n      0x00\n      swap3\n      tag_130\n      jumpi\n    tag_131:\n      pop\n      pop\n      dup2\n        /* \"BlockchainHealthRecords.sol\":1582:1596  patientRecords */\n      0x01\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      shl\n      swap2\n      not(0x00)\n      swap1\n        /* \"BlockchainHealthRecords.sol\":1558:1571  nextPatientId */\n      0x03\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      shl\n      shr\n      not\n      and\n      or\n      swap1\n      sstore\n    tag_132:\n      mload\n      dup1\n      mload\n      swap2\n        /* \"BlockchainHealthRecords.sol\":1558:1571  nextPatientId */\n      0x03\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      dup6\n      add\n      swap2\n      0xffffffffffffffff\n      dup5\n      gt\n      tag_67\n      jumpi\n      shl(0x40, 0x01)\n      dup5\n      gt\n      tag_67\n      jumpi\n      dup2\n      swap1\n      dup4\n      sload\n      dup6\n      dup6\n      sstore\n      dup1\n      dup7\n      lt\n      tag_137\n      jumpi\n    tag_138:\n      pop\n      add\n      swap2\n      0x00\n      mstore\n      dup1\n      0x00\n      keccak256\n      swap1\n      0x00\n    tag_139:\n      dup5\n      dup2\n      lt\n      tag_140\n      jumpi\n      dup9\n      dup9\n      dup9\n      0x04\n      dup10\n      mload\n      swap2\n      add\n      sstore\n        /* \"BlockchainHealthRecords.sol\":1558:1571  nextPatientId */\n      0x03\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      sload\n      not(0x00)\n      dup2\n      eq\n      tag_142\n      jumpi\n        /* \"BlockchainHealthRecords.sol\":1875:1927  PatientRecordAdded(patientId, msg.sender, _ipfsHash) */\n      0x0787c9ae7718043965d54a360ce99ba2770a327db7605042c3bf617652f73962\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      swap2\n        /* \"BlockchainHealthRecords.sol\":1582:1596  patientRecords */\n      0x01\n        /* \"BlockchainHealthRecords.sol\":1875:1927  PatientRecordAdded(patientId, msg.sender, _ipfsHash) */\n      tag_144\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      swap3\n      add\n        /* \"BlockchainHealthRecords.sol\":1558:1571  nextPatientId */\n      0x03\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      sstore\n      mload(0x40)\n        /* \"BlockchainHealthRecords.sol\":1476:1486  msg.sender */\n      swap2\n      dup3\n      swap2\n      caller\n        /* \"BlockchainHealthRecords.sol\":1875:1927  PatientRecordAdded(patientId, msg.sender, _ipfsHash) */\n      swap6\n      dup4\n      tag_13\n      jump\t// in\n    tag_144:\n      sub\n      swap1\n      log2\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      stop\n    tag_142:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x11)\n      revert(0x00, 0x24)\n    tag_140:\n      dup4\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup4\n      dup3\n      add\n      sstore\n      swap3\n      dup2\n      add\n      swap3\n        /* \"BlockchainHealthRecords.sol\":1582:1596  patientRecords */\n      0x01\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      add\n      jump(tag_139)\n    tag_137:\n      tag_145\n      swap1\n      dup6\n      0x00\n      mstore\n      dup7\n      dup5\n      0x00\n      keccak256\n      swap2\n      dup3\n      add\n      swap2\n      add\n      tag_12\n      jump\t// in\n    tag_145:\n      dup10\n      jump(tag_138)\n    tag_130:\n      add\n      mload\n      swap1\n      pop\n      dup10\n      dup1\n      jump(tag_131)\n    tag_128:\n      0x00\n      dup6\n      dup2\n      mstore\n      dup8\n      dup2\n      keccak256\n      swap4\n      pop\n      not(0x1f)\n      dup6\n      and\n      swap1\n    tag_146:\n      dup9\n      dup3\n      dup3\n      lt\n      tag_147\n      jumpi\n      pop\n      pop\n      swap1\n      dup5\n        /* \"BlockchainHealthRecords.sol\":1582:1596  patientRecords */\n      0x01\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      swap6\n      swap5\n      swap4\n      swap3\n      lt\n      tag_149\n      jumpi\n    tag_150:\n      pop\n      pop\n      pop\n      dup2\n      shl\n      add\n      swap1\n      sstore\n      jump(tag_132)\n    tag_149:\n      add\n      mload\n      not(0x00)\n      0xf8\n      dup5\n        /* \"BlockchainHealthRecords.sol\":1558:1571  nextPatientId */\n      0x03\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      shl\n      and\n      shr\n      not\n      and\n      swap1\n      sstore\n      dup10\n      dup1\n      dup1\n      jump(tag_150)\n    tag_147:\n        /* \"BlockchainHealthRecords.sol\":1582:1596  patientRecords */\n      0x01\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      dup6\n      swap7\n      dup3\n      swap4\n      swap7\n      dup7\n      add\n      mload\n      dup2\n      sstore\n      add\n      swap6\n      add\n      swap4\n      add\n      jump(tag_146)\n    tag_126:\n      tag_151\n      swap1\n      dup6\n      0x00\n      mstore\n      dup8\n      0x00\n      keccak256\n      0x1f\n      dup6\n      add\n      0x05\n      shr\n      dup2\n      add\n      swap2\n      dup10\n      dup7\n      lt\n      tag_84\n      jumpi\n      0x1f\n      add\n      0x05\n      shr\n      add\n      swap1\n      tag_12\n      jump\t// in\n    tag_151:\n      dup11\n      jump(tag_127)\n    tag_118:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x19\n      0x24\n      dup3\n      add\n      mstore\n      0x4e6f74206120726567697374657265642070617469656e742e00000000000000\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_44:\n      jumpi(tag_60, callvalue)\n        /* \"BlockchainHealthRecords.sol\":3865:3892  EmergencyPinSet(_patientId) */\n      0x77a8ab2ef0d4890818f6e3342f66cd90c0f63167cf0b1507a8ee9132c9e7eaf3\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      0x20\n      tag_156\n      calldatasize\n      tag_4\n      jump\t// in\n    tag_156:\n      dup2\n      0x00\n      mstore\n        /* \"BlockchainHealthRecords.sol\":1291:1305  patientRecords */\n      0x01\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      dup4\n      mstore\n        /* \"BlockchainHealthRecords.sol\":1269:1349  require(msg.sender == patientRecords[_patientId].owner, \"Not the record owner.\") */\n      tag_157\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n        /* \"BlockchainHealthRecords.sol\":1291:1305  patientRecords */\n      0x01\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      keccak256(0x00, 0x40)\n        /* \"BlockchainHealthRecords.sol\":1291:1323  patientRecords[_patientId].owner */\n      add\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      sload\n      and\n        /* \"BlockchainHealthRecords.sol\":1277:1287  msg.sender */\n      caller\n        /* \"BlockchainHealthRecords.sol\":1277:1323  msg.sender == patientRecords[_patientId].owner */\n      eq\n        /* \"BlockchainHealthRecords.sol\":1269:1349  require(msg.sender == patientRecords[_patientId].owner, \"Not the record owner.\") */\n      tag_10\n      jump\t// in\n    tag_157:\n        /* \"BlockchainHealthRecords.sol\":3708:3777  require(_patientId < nextPatientId, \"Patient record does not exist.\") */\n      tag_158\n        /* \"BlockchainHealthRecords.sol\":3729:3742  nextPatientId */\n      0x03\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      sload\n        /* \"BlockchainHealthRecords.sol\":3716:3742  _patientId < nextPatientId */\n      dup4\n      lt\n        /* \"BlockchainHealthRecords.sol\":3708:3777  require(_patientId < nextPatientId, \"Patient record does not exist.\") */\n      tag_9\n      jump\t// in\n    tag_158:\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      mload(0x40)\n        /* \"BlockchainHealthRecords.sol\":3826:3848  abi.encodePacked(_pin) */\n      tag_159\n      dup5\n      dup3\n      dup2\n      dup1\n      dup3\n      add\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      swap6\n      dup1\n      mload\n      swap2\n      dup3\n      swap2\n      add\n      dup8\n      mcopy\n      dup2\n      add\n      0x00\n      dup4\n      dup3\n      add\n      mstore\n        /* \"BlockchainHealthRecords.sol\":3826:3848  abi.encodePacked(_pin) */\n      sub\n      add\n        /* \"BlockchainHealthRecords.sol\":4118:4140  abi.encodePacked(_pin) */\n      not(0x1f)\n        /* \"BlockchainHealthRecords.sol\":3826:3848  abi.encodePacked(_pin) */\n      dup2\n      add\n      dup4\n      mstore\n      dup3\n      tag_2\n      jump\t// in\n    tag_159:\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      mload\n        /* \"BlockchainHealthRecords.sol\":3816:3849  keccak256(abi.encodePacked(_pin)) */\n      swap1\n      keccak256\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      dup2\n      0x00\n      mstore\n        /* \"BlockchainHealthRecords.sol\":3788:3801  emergencyPins */\n      0x02\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      dup4\n      mstore\n      keccak256(0x00, 0x40)\n      sstore\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n        /* \"BlockchainHealthRecords.sol\":3865:3892  EmergencyPinSet(_patientId) */\n      log1\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      stop\n    tag_42:\n      jumpi(tag_60, callvalue)\n      jumpi(tag_60, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"BlockchainHealthRecords.sol\":726:754  uint256 public nextPatientId */\n      0x03\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_40:\n      jumpi(tag_60, callvalue)\n      jumpi(tag_60, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"BlockchainHealthRecords.sol\":286:311  keccak256(\"PATIENT_ROLE\") */\n      0x72606200fac42b7dc86b75901d61ecfab2a4a1a6eded478b97a428094891abed\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      dup2\n      mstore\n      return\n    tag_38:\n      jumpi(tag_60, callvalue)\n      jumpi(tag_60, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      return\n    tag_36:\n      jumpi(tag_60, callvalue)\n      jumpi(tag_60, slt(add(not(0x03), calldatasize), 0x40))\n      tag_176\n      tag_1\n      jump\t// in\n    tag_176:\n      mstore(0x00, calldataload(0x04))\n      mstore(0x20, 0x00)\n      keccak256(0x00, 0x40)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      swap1\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n      0x00\n      mstore\n      0x20\n      mstore\n      0x20\n      and(sload(keccak256(0x00, 0x40)), 0xff)\n      mload(0x40)\n      swap1\n      iszero\n      iszero\n      dup2\n      mstore\n      return\n    tag_34:\n      jumpi(tag_60, callvalue)\n      jumpi(tag_60, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"BlockchainHealthRecords.sol\":217:240  keccak256(\"ADMIN_ROLE\") */\n      0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      dup2\n      mstore\n      return\n    tag_32:\n      jumpi(tag_60, callvalue)\n      jumpi(tag_60, slt(add(not(0x03), calldatasize), 0x40))\n      calldataload(0x04)\n      tag_185\n      tag_1\n      jump\t// in\n    tag_185:\n      swap1\n      dup1\n      0x00\n      mstore\n      mstore(0x20, 0x01)\n        /* \"BlockchainHealthRecords.sol\":1269:1349  require(msg.sender == patientRecords[_patientId].owner, \"Not the record owner.\") */\n      tag_186\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      0x01\n      keccak256(0x00, 0x40)\n        /* \"BlockchainHealthRecords.sol\":1291:1323  patientRecords[_patientId].owner */\n      add\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      sload\n      and\n        /* \"BlockchainHealthRecords.sol\":1277:1287  msg.sender */\n      caller\n        /* \"BlockchainHealthRecords.sol\":1277:1323  msg.sender == patientRecords[_patientId].owner */\n      eq\n        /* \"BlockchainHealthRecords.sol\":1269:1349  require(msg.sender == patientRecords[_patientId].owner, \"Not the record owner.\") */\n      tag_10\n      jump\t// in\n    tag_186:\n        /* \"BlockchainHealthRecords.sol\":2439:2508  require(_patientId < nextPatientId, \"Patient record does not exist.\") */\n      tag_187\n        /* \"BlockchainHealthRecords.sol\":2460:2473  nextPatientId */\n      0x03\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      sload\n        /* \"BlockchainHealthRecords.sol\":2447:2473  _patientId < nextPatientId */\n      dup3\n      lt\n        /* \"BlockchainHealthRecords.sol\":2439:2508  require(_patientId < nextPatientId, \"Patient record does not exist.\") */\n      tag_9\n      jump\t// in\n    tag_187:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n      mstore(0x20, 0xdf1cb6f79b8687a60e91aced08290a53cb47a179b80c0c7c836d1c923c9a5647)\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      iszero\n      tag_188\n      jumpi\n        /* \"BlockchainHealthRecords.sol\":2603:2616  uint256 i = 0 */\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      and\n      0x00\n        /* \"BlockchainHealthRecords.sol\":2675:2678  i++ */\n    tag_190:\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      dup3\n      0x00\n      mstore\n      mstore(0x20, 0x01)\n        /* \"BlockchainHealthRecords.sol\":2460:2473  nextPatientId */\n      0x03\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      keccak256(0x00, 0x40)\n        /* \"BlockchainHealthRecords.sol\":2622:2666  patientRecords[_patientId].authorizedDoctors */\n      add\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      sload\n        /* \"BlockchainHealthRecords.sol\":2618:2673  i < patientRecords[_patientId].authorizedDoctors.length */\n      dup2\n      lt\n      iszero\n      tag_191\n      jumpi\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      dup3\n      0x00\n      mstore\n      mstore(0x20, 0x01)\n      dup2\n        /* \"BlockchainHealthRecords.sol\":2703:2750  patientRecords[_patientId].authorizedDoctors[i] */\n      tag_193\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      dup3\n        /* \"BlockchainHealthRecords.sol\":2460:2473  nextPatientId */\n      0x03\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      keccak256(0x00, 0x40)\n        /* \"BlockchainHealthRecords.sol\":2703:2747  patientRecords[_patientId].authorizedDoctors */\n      add\n        /* \"BlockchainHealthRecords.sol\":2703:2750  patientRecords[_patientId].authorizedDoctors[i] */\n      tag_11\n      jump\t// in\n    tag_193:\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      swap1\n      sload\n        /* \"BlockchainHealthRecords.sol\":2460:2473  nextPatientId */\n      0x03\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      swap2\n      swap1\n      swap2\n      shl\n      shr\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"BlockchainHealthRecords.sol\":2703:2761  patientRecords[_patientId].authorizedDoctors[i] != _doctor */\n      eq\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      tag_194\n      jumpi\n      0x01\n      add\n        /* \"BlockchainHealthRecords.sol\":2603:2616  uint256 i = 0 */\n      jump(tag_190)\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n    tag_194:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x13\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x69, 0x20b63932b0b23c9030baba3437b934bd32b217)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"BlockchainHealthRecords.sol\":2618:2673  i < patientRecords[_patientId].authorizedDoctors.length */\n    tag_191:\n      pop\n      swap1\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      dup1\n      0x00\n      mstore\n      mstore(0x20, 0x01)\n        /* \"BlockchainHealthRecords.sol\":2460:2473  nextPatientId */\n      0x03\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      keccak256(0x00, 0x40)\n        /* \"BlockchainHealthRecords.sol\":2809:2853  patientRecords[_patientId].authorizedDoctors */\n      add\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      swap1\n      dup2\n      sload\n      swap1\n      shl(0x40, 0x01)\n      dup3\n      lt\n      iszero\n      tag_67\n      jumpi\n      tag_198\n      dup3\n        /* \"BlockchainHealthRecords.sol\":2883:2917  AccessGranted(_patientId, _doctor) */\n      0x3c3a9147a1fc73dd51a32f4d10c43d457e8cb826eb6f35cac6349eb965ba82b4\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      swap5\n      0x01\n      0x20\n      swap6\n      add\n      dup2\n      sstore\n      tag_11\n      jump\t// in\n    tag_198:\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"BlockchainHealthRecords.sol\":2460:2473  nextPatientId */\n      0x03\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      swap3\n      swap1\n      swap3\n      shl\n      swap2\n      dup3\n      shl\n      not\n      and\n      swap1\n      dup7\n      swap1\n      shl\n      or\n      swap1\n      sstore\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n        /* \"BlockchainHealthRecords.sol\":2883:2917  AccessGranted(_patientId, _doctor) */\n      log2\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      stop\n    tag_188:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x18\n      0x24\n      dup3\n      add\n      mstore\n      0x4e6f742061207265676973746572656420646f63746f722e0000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_30:\n      jumpi(tag_60, callvalue)\n      tag_201\n      calldatasize\n      tag_4\n      jump\t// in\n    tag_201:\n        /* \"BlockchainHealthRecords.sol\":4020:4089  require(_patientId < nextPatientId, \"Patient record does not exist.\") */\n      tag_202\n        /* \"BlockchainHealthRecords.sol\":4041:4054  nextPatientId */\n      0x03\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      sload\n        /* \"BlockchainHealthRecords.sol\":4028:4054  _patientId < nextPatientId */\n      dup4\n      lt\n        /* \"BlockchainHealthRecords.sol\":4020:4089  require(_patientId < nextPatientId, \"Patient record does not exist.\") */\n      tag_9\n      jump\t// in\n    tag_202:\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      mload(0x40)\n        /* \"BlockchainHealthRecords.sol\":4118:4140  abi.encodePacked(_pin) */\n      tag_203\n      0x20\n      dup3\n      dup2\n      dup1\n      dup3\n      add\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      swap6\n      dup1\n      mload\n      swap2\n      dup3\n      swap2\n      add\n      dup8\n      mcopy\n      dup2\n      add\n      0x00\n      dup4\n      dup3\n      add\n      mstore\n        /* \"BlockchainHealthRecords.sol\":4118:4140  abi.encodePacked(_pin) */\n      sub\n      add\n      not(0x1f)\n      dup2\n      add\n      dup4\n      mstore\n      dup3\n      tag_2\n      jump\t// in\n    tag_203:\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      mload\n        /* \"BlockchainHealthRecords.sol\":4108:4141  keccak256(abi.encodePacked(_pin)) */\n      swap1\n      keccak256\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      dup2\n      0x00\n      mstore\n        /* \"BlockchainHealthRecords.sol\":4145:4158  emergencyPins */\n      0x02\n        /* \"BlockchainHealthRecords.sol\":4118:4140  abi.encodePacked(_pin) */\n      0x20\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      mstore\n      sload(keccak256(0x00, 0x40))\n        /* \"BlockchainHealthRecords.sol\":4108:4170  keccak256(abi.encodePacked(_pin)) == emergencyPins[_patientId] */\n      sub\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      tag_204\n      jumpi\n      0x00\n      mstore\n        /* \"BlockchainHealthRecords.sol\":4207:4221  patientRecords */\n      0x01\n        /* \"BlockchainHealthRecords.sol\":4118:4140  abi.encodePacked(_pin) */\n      0x20\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      mstore\n      tag_108\n      tag_109\n        /* \"BlockchainHealthRecords.sol\":4145:4158  emergencyPins */\n      0x02\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      keccak256(0x00, 0x40)\n        /* \"BlockchainHealthRecords.sol\":4207:4242  patientRecords[_patientId].ipfsHash */\n      add\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      tag_7\n      jump\t// in\n    tag_204:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"BlockchainHealthRecords.sol\":4118:4140  abi.encodePacked(_pin) */\n      0x20\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      0x04\n      dup3\n      add\n      mstore\n      0x0e\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x91, 0x24b731b7b93932b1ba102824a717)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_28:\n      jumpi(tag_60, callvalue)\n      jumpi(tag_60, slt(add(not(0x03), calldatasize), 0x40))\n      tag_212\n      tag_1\n      jump\t// in\n    tag_212:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      sub\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n      tag_213\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      tag_90\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      swap1\n      calldataload(0x04)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      tag_16\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n    tag_213:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5478:5508  AccessControlBadConfirmation() */\n      shl(0xe1, 0x334bd919)\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5478:5508  AccessControlBadConfirmation() */\n      mstore\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      0x04\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5478:5508  AccessControlBadConfirmation() */\n      revert\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n    tag_26:\n      jumpi(tag_60, callvalue)\n      jumpi(tag_60, slt(add(not(0x03), calldatasize), 0x40))\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      tag_90\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      calldataload(0x04)\n      tag_221\n      tag_1\n      jump\t// in\n    tag_221:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      tag_222\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      tag_93\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x00\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x00\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      0x20\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      0x40\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x00\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      add\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap1\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n    tag_222:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      tag_15\n      jump\t// in\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n    tag_24:\n      jumpi(tag_60, callvalue)\n      jumpi(tag_60, slt(add(not(0x03), calldatasize), 0x20))\n      0x20\n      tag_228\n      calldataload(0x04)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x00\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x00\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      0x20\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      0x40\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x00\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      add\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap1\n      jump\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n    tag_228:\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_22:\n      jumpi(tag_60, callvalue)\n      jumpi(tag_60, slt(add(not(0x03), calldatasize), 0x40))\n      calldataload(0x04)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      dup2\n      sub\n      tag_60\n      jumpi\n        /* \"BlockchainHealthRecords.sol\":4357:4367  msg.sender */\n      caller\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      0x00\n      swap1\n      dup2\n      mstore\n      mstore(0x20, 0x7d7ffb7a348e1c6a02869081a26547b49160dd3df72d1d75a570eb9b698292ec)\n      0x40\n      swap1\n      keccak256\n      sload\n      calldataload(0x24)\n      swap2\n      swap1\n      0xff\n      and\n      iszero\n      tag_235\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      tag_222\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      tag_93\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      tag_90\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      swap5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x00\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x00\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      0x20\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      0x40\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x00\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      add\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap1\n      jump\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n    tag_235:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0d\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x99, 0x2737ba1030b71030b236b4b717)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_20:\n      jumpi(tag_60, callvalue)\n      jumpi(tag_60, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      swap1\n      shl(0xe0, 0xffffffff)\n      dup3\n      and\n      dup1\n      swap3\n      sub\n      tag_60\n      jumpi\n      0x20\n      swap2\n      shl(0xe0, 0x7965db0b)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      dup2\n      eq\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup2\n      iszero\n      tag_246\n      jumpi\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n    tag_247:\n      pop\n      iszero\n      iszero\n      dup2\n      mstore\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_246:\n      shl(0xe0, 0x01ffc9a7)\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":862:902  interfaceId == type(IERC165).interfaceId */\n      eq\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup4\n      jump(tag_247)\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n    tag_1:\n      calldataload(0x24)\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_60\n      jumpi\n      jump\t// out\n    tag_2:\n      swap1\n      0x1f\n        /* \"BlockchainHealthRecords.sol\":4118:4140  abi.encodePacked(_pin) */\n      dup1\n      not\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      swap2\n      add\n      and\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_67\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_3:\n      dup2\n      0x1f\n      dup3\n      add\n      slt\n      iszero\n      tag_60\n      jumpi\n      dup1\n      calldataload\n      swap1\n      0xffffffffffffffff\n      dup3\n      gt\n      tag_67\n      jumpi\n      mload(0x40)\n      swap3\n      tag_256\n        /* \"BlockchainHealthRecords.sol\":4118:4140  abi.encodePacked(_pin) */\n      0x1f\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      dup5\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup6\n      tag_2\n      jump\t// in\n    tag_256:\n      dup3\n      dup5\n      mstore\n      0x20\n      dup4\n      dup4\n      add\n      add\n      gt\n      tag_60\n      jumpi\n      dup2\n      0x00\n      swap3\n      0x20\n      dup1\n      swap4\n      add\n      dup4\n      dup7\n      add\n      calldatacopy\n      dup4\n      add\n      add\n      mstore\n      swap1\n      jump\t// out\n    tag_4:\n      swap1\n      0x40\n      not(0x03)\n      dup4\n      add\n      slt\n      tag_60\n      jumpi\n      calldataload(0x04)\n      swap2\n      calldataload(0x24)\n      swap1\n      0xffffffffffffffff\n      dup3\n      gt\n      tag_60\n      jumpi\n      tag_263\n      swap2\n      0x04\n      add\n      tag_3\n      jump\t// in\n    tag_263:\n      swap1\n      jump\t// out\n    tag_5:\n      dup1\n      mload\n      dup1\n      dup4\n      mstore\n      0x20\n      swap3\n      swap2\n      dup2\n      swap1\n      dup5\n      add\n      dup5\n      dup5\n      add\n      mcopy\n      0x00\n      dup3\n      dup3\n      add\n      dup5\n      add\n      mstore\n      0x1f\n      add\n      not(0x1f)\n      and\n      add\n      add\n      swap1\n      jump\t// out\n    tag_6:\n      swap1\n      0x01\n      dup3\n      dup2\n      shr\n      swap3\n      and\n      dup1\n      iszero\n      tag_264\n      jumpi\n    tag_265:\n      0x20\n      dup4\n      lt\n      eq\n      tag_266\n      jumpi\n      jump\t// out\n    tag_266:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x22)\n      revert(0x00, 0x24)\n    tag_264:\n      swap2\n      0x7f\n      and\n      swap2\n      jump(tag_265)\n    tag_7:\n      swap1\n      mload(0x40)\n      swap2\n      dup3\n      0x00\n      dup3\n      sload\n      swap3\n      tag_268\n      dup5\n      tag_6\n      jump\t// in\n    tag_268:\n      dup1\n      dup5\n      mstore\n      swap4\n      0x01\n      dup2\n      and\n      swap1\n      dup2\n      iszero\n      tag_269\n      jumpi\n      pop\n      0x01\n      eq\n      tag_271\n      jumpi\n    tag_272:\n      pop\n      tag_273\n      swap3\n      pop\n      sub\n      dup4\n      tag_2\n      jump\t// in\n    tag_273:\n      jump\t// out\n    tag_271:\n      swap1\n      pop\n      0x00\n      swap3\n      swap2\n      swap3\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x00\n      swap2\n    tag_274:\n      dup2\n      dup4\n      lt\n      tag_275\n      jumpi\n      pop\n      pop\n      swap1\n      0x20\n      tag_273\n      swap3\n      dup3\n      add\n      add\n      0x00\n      jump(tag_272)\n    tag_275:\n      0x20\n      swap2\n      swap4\n      pop\n      dup1\n      0x01\n      swap2\n      sload\n      dup4\n      dup6\n      dup10\n      add\n      add\n      mstore\n      add\n      swap2\n      add\n      swap1\n      swap2\n      dup5\n      swap3\n      jump(tag_274)\n    tag_269:\n      swap1\n      pop\n      0x20\n      swap3\n      pop\n      tag_273\n      swap5\n      swap2\n      pop\n      not(0xff)\n      and\n      dup3\n      dup5\n      add\n      mstore\n      iszero\n      iszero\n      0x05\n      shl\n      dup3\n      add\n      add\n      0x00\n      jump(tag_272)\n    tag_9:\n      iszero\n      tag_277\n      jumpi\n      jump\t// out\n    tag_277:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1e\n      0x24\n      dup3\n      add\n      mstore\n      0x50617469656e74207265636f726420646f6573206e6f742065786973742e0000\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_10:\n      iszero\n      tag_279\n      jumpi\n      jump\t// out\n    tag_279:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x15\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x59, 0x2737ba103a3432903932b1b7b9321037bbb732b917)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_11:\n      dup1\n      sload\n      dup3\n      lt\n      iszero\n      tag_281\n      jumpi\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      swap1\n      0x00\n      swap1\n      jump\t// out\n    tag_281:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_12:\n      dup2\n      dup2\n      lt\n      tag_284\n      jumpi\n      pop\n      pop\n      jump\t// out\n    tag_284:\n      0x00\n      dup2\n      sstore\n      0x01\n      add\n      jump(tag_12)\n    tag_13:\n      0x40\n      swap1\n      tag_263\n      swap4\n      swap3\n      dup2\n      mstore\n      dup2\n      0x20\n      dup3\n      add\n      mstore\n      add\n      swap1\n      tag_5\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_14:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x00\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3519:3542  !hasRole(role, account) */\n      iszero\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n      tag_287\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n    tag_287:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      shl(0xe0, 0xe2517d3f)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      0x04\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      mstore\n      0x24\n      mstore\n      0x44\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_15:\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      0x00\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      tag_289\n      jumpi\n      0x00\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n      swap6\n      swap1\n      swap6\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      dup1\n      sload\n      not(0xff)\n      and\n      0x01\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap3\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      swap2\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      swap1\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n    tag_289:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n      pop\n      pop\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_16:\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      0x00\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      iszero\n      tag_289\n      jumpi\n      0x00\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n      swap6\n      swap1\n      swap6\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap3\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      swap2\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      swap1\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      log4\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6976:6987  return true */\n      swap1\n      jump\t// out\n        /* \"BlockchainHealthRecords.sol\":3246:3593  function isAuthorized(uint256 _patientId, address _caller) internal view returns (bool) {... */\n    tag_17:\n      swap1\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      0x00\n        /* \"BlockchainHealthRecords.sol\":3422:3425  i++ */\n    tag_293:\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      dup3\n      0x00\n      mstore\n      mstore(0x20, 0x01)\n        /* \"BlockchainHealthRecords.sol\":3369:3413  patientRecords[_patientId].authorizedDoctors */\n      0x03\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      keccak256(0x00, 0x40)\n        /* \"BlockchainHealthRecords.sol\":3369:3413  patientRecords[_patientId].authorizedDoctors */\n      add\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      sload\n        /* \"BlockchainHealthRecords.sol\":3365:3420  i < patientRecords[_patientId].authorizedDoctors.length */\n      dup2\n      lt\n      iszero\n      tag_294\n      jumpi\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      dup3\n      0x00\n      mstore\n      mstore(0x20, 0x01)\n        /* \"BlockchainHealthRecords.sol\":3446:3493  patientRecords[_patientId].authorizedDoctors[i] */\n      tag_296\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      dup2\n        /* \"BlockchainHealthRecords.sol\":3369:3413  patientRecords[_patientId].authorizedDoctors */\n      0x03\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      keccak256(0x00, 0x40)\n        /* \"BlockchainHealthRecords.sol\":3446:3490  patientRecords[_patientId].authorizedDoctors */\n      add\n        /* \"BlockchainHealthRecords.sol\":3446:3493  patientRecords[_patientId].authorizedDoctors[i] */\n      tag_11\n      jump\t// in\n    tag_296:\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      swap1\n      sload\n        /* \"BlockchainHealthRecords.sol\":3369:3413  patientRecords[_patientId].authorizedDoctors */\n      0x03\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      swap2\n      swap1\n      swap2\n      shl\n      shr\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      swap1\n      dup4\n      and\n        /* \"BlockchainHealthRecords.sol\":3446:3504  patientRecords[_patientId].authorizedDoctors[i] == _caller */\n      eq\n        /* \"BlockchainHealthRecords.sol\":3442:3552  if (patientRecords[_patientId].authorizedDoctors[i] == _caller) {... */\n      tag_297\n      jumpi\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      0x01\n      add\n        /* \"BlockchainHealthRecords.sol\":3350:3363  uint256 i = 0 */\n      jump(tag_293)\n        /* \"BlockchainHealthRecords.sol\":3442:3552  if (patientRecords[_patientId].authorizedDoctors[i] == _caller) {... */\n    tag_297:\n        /* \"BlockchainHealthRecords.sol\":3525:3536  return true */\n      pop\n      pop\n      pop\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      0x01\n        /* \"BlockchainHealthRecords.sol\":3525:3536  return true */\n      swap1\n      jump\t// out\n        /* \"BlockchainHealthRecords.sol\":3365:3420  i < patientRecords[_patientId].authorizedDoctors.length */\n    tag_294:\n      pop\n      pop\n      pop\n        /* \"BlockchainHealthRecords.sol\":123:4434  contract BlockchainHealthRecords is AccessControl {... */\n      0x00\n        /* \"BlockchainHealthRecords.sol\":3246:3593  function isAuthorized(uint256 _patientId, address _caller) internal view returns (bool) {... */\n      swap1\n      jump\t// out\n\n    auxdata: 0xa26469706673582212202100fcf8ecca15297d98360de5e56dbfac486eeee1e0e245405b6c4c77e2e11f64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"fun_grantRole": {
									"entryPoint": 308,
									"id": 256,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x130 JUMPI PUSH2 0x12 CALLER PUSH2 0x134 JUMP JUMPDEST POP PUSH32 0x72606200FAC42B7DC86B75901D61ECFAB2A4A1A6EDED478B97A428094891ABED PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH32 0x1269C68C28A67305F4A2D47532888D6C961251CFCB06C9CDB6066D32B24B321 DUP1 SLOAD PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1397 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 DUP3 SWAP1 SSTORE SWAP1 SWAP3 SWAP1 SWAP2 PUSH32 0xBD79B86FFE0AB8E8776151514217CD7CACD52C909F66475C3AF44E129F0B00FF SWAP1 DUP1 LOG4 PUSH32 0xAF1DAC7DEA2FD7F7738119CEC7DF099DFAD49AA9D2E7D17BA6B60F63AE7411F PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH32 0xDF1CB6F79B8687A60E91ACED08290A53CB47A179B80C0C7C836D1C923C9A5648 DUP1 SLOAD PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1397 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 DUP3 SWAP1 SSTORE SWAP1 SWAP3 SWAP1 SWAP2 PUSH32 0xBD79B86FFE0AB8E8776151514217CD7CACD52C909F66475C3AF44E129F0B00FF SWAP1 DUP1 LOG4 PUSH1 0x40 MLOAD PUSH2 0x11AA SWAP1 DUP2 PUSH2 0x1CD DUP3 CODECOPY RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1377 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1C7 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 DUP2 DUP2 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1377 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLER SWAP2 SWAP1 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1397 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D SWAP1 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP PUSH0 SWAP1 JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0xCD9 JUMPI POP DUP1 PUSH4 0x1D9486DE EQ PUSH2 0xC29 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0xBF7 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0xBBA JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0xB76 JUMPI DUP1 PUSH4 0x3C2BC6A1 EQ PUSH2 0xACB JUMPI DUP1 PUSH4 0x65DD152C EQ PUSH2 0x8EC JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x8B2 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x86A JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x850 JUMPI DUP1 PUSH4 0xAC5CB97D EQ PUSH2 0x816 JUMPI DUP1 PUSH4 0xB1131795 EQ PUSH2 0x7F9 JUMPI DUP1 PUSH4 0xB38DEFF0 EQ PUSH2 0x757 JUMPI DUP1 PUSH4 0xB6314915 EQ PUSH2 0x44B JUMPI DUP1 PUSH4 0xB9FFF11B EQ PUSH2 0x399 JUMPI DUP1 PUSH4 0xD3D188A1 EQ PUSH2 0x32D JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x2E9 JUMPI DUP1 PUSH4 0xDBA45462 EQ PUSH2 0x12B JUMPI PUSH4 0xFEC331F2 EQ PUSH2 0xED JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x127 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0xAF1DAC7DEA2FD7F7738119CEC7DF099DFAD49AA9D2E7D17BA6B60F63AE7411F DUP2 MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x127 JUMPI PUSH2 0x139 CALLDATASIZE PUSH2 0xDBA JUMP JUMPDEST DUP2 PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0x15B PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD AND CALLER EQ PUSH2 0xF35 JUMP JUMPDEST PUSH2 0x168 PUSH1 0x3 SLOAD DUP4 LT PUSH2 0xEE9 JUMP JUMPDEST DUP2 PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x2 PUSH1 0x40 PUSH0 KECCAK256 ADD SWAP2 DUP2 MLOAD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT PUSH2 0x2D5 JUMPI PUSH2 0x194 DUP2 SLOAD PUSH2 0xE11 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x29A JUMPI JUMPDEST POP PUSH1 0x20 SWAP4 PUSH1 0x1F DUP2 GT PUSH1 0x1 EQ PUSH2 0x219 JUMPI DUP1 PUSH32 0x80568D98C5C4BE465F3F47EF6DA4B979FDC4CA568775898275584974A140F0F SWAP6 PUSH0 SWAP2 PUSH2 0x20E JUMPI JUMPDEST POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST DUP1 PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE TIMESTAMP PUSH1 0x4 PUSH1 0x40 PUSH0 KECCAK256 ADD SSTORE PUSH2 0x209 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP4 PUSH2 0xFB8 JUMP JUMPDEST SUB SWAP1 LOG1 STOP JUMPDEST SWAP1 POP DUP5 ADD MLOAD DUP7 PUSH2 0x1D6 JUMP JUMPDEST PUSH1 0x1F NOT DUP2 AND SWAP5 DUP3 PUSH0 MSTORE DUP1 PUSH0 KECCAK256 SWAP6 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x282 JUMPI POP SWAP6 DUP3 SWAP2 PUSH1 0x1 SWAP4 PUSH32 0x80568D98C5C4BE465F3F47EF6DA4B979FDC4CA568775898275584974A140F0F SWAP9 LT PUSH2 0x26A JUMPI JUMPDEST POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x1E9 JUMP JUMPDEST DUP7 ADD MLOAD PUSH0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP7 DUP1 PUSH2 0x25E JUMP JUMPDEST DUP7 DUP4 ADD MLOAD DUP9 SSTORE PUSH1 0x1 SWAP1 SWAP8 ADD SWAP7 PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x228 JUMP JUMPDEST PUSH2 0x2C5 SWAP1 DUP3 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP8 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP9 LT PUSH2 0x2CB JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0xFA2 JUMP JUMPDEST DUP5 PUSH2 0x19D JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x2B8 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x127 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH2 0x32B PUSH1 0x4 CALLDATALOAD PUSH2 0x308 PUSH2 0xD2C JUMP JUMPDEST SWAP1 PUSH2 0x326 PUSH2 0x321 DUP3 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xFCF JUMP JUMPDEST PUSH2 0x108F JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0x127 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 DUP4 ADD SLOAD AND SWAP2 PUSH2 0x38F PUSH1 0x4 PUSH2 0x36D PUSH1 0x2 DUP5 ADD PUSH2 0xE49 JUMP JUMPDEST SWAP3 ADD SLOAD SWAP2 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD SWAP1 PUSH2 0xDED JUMP JUMPDEST SWAP1 PUSH1 0x60 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x127 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD AND CALLER EQ DUP1 ISZERO PUSH2 0x43B JUMPI JUMPDEST ISZERO PUSH2 0x404 JUMPI PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0x400 PUSH2 0x3EC PUSH1 0x2 PUSH1 0x40 PUSH0 KECCAK256 ADD PUSH2 0xE49 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0xDED JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x2737BA1030BABA3437B934BD32B217 PUSH1 0x89 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH2 0x446 CALLER DUP3 PUSH2 0x110F JUMP JUMPDEST PUSH2 0x3CE JUMP JUMPDEST CALLVALUE PUSH2 0x127 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x127 JUMPI PUSH2 0x47C SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xD64 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x1269C68C28A67305F4A2D47532888D6C961251CFCB06C9CDB6066D32B24B320 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x712 JUMPI PUSH1 0x3 SLOAD SWAP1 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0x4C5 DUP3 DUP3 PUSH2 0xD42 JUMP JUMPDEST PUSH0 DUP2 MSTORE PUSH0 CALLDATASIZE DUP2 CALLDATACOPY PUSH1 0x40 MLOAD SWAP2 PUSH1 0xA0 DUP4 ADD DUP4 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x2D5 JUMPI PUSH1 0x40 MSTORE DUP5 DUP4 MSTORE DUP1 DUP4 ADD SWAP2 CALLER DUP4 MSTORE PUSH1 0x40 DUP5 ADD DUP6 DUP2 MSTORE PUSH1 0x60 DUP6 ADD SWAP2 DUP3 MSTORE PUSH1 0x80 DUP6 ADD SWAP4 TIMESTAMP DUP6 MSTORE DUP8 PUSH0 MSTORE PUSH1 0x1 DUP5 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP6 MLOAD DUP7 SSTORE PUSH1 0x1 DUP7 ADD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 MLOAD AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x2 DUP6 ADD SWAP1 MLOAD DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x2D5 JUMPI DUP2 SWAP1 PUSH2 0x562 DUP5 SLOAD PUSH2 0xE11 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x6E4 JUMPI JUMPDEST POP DUP6 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x681 JUMPI PUSH0 SWAP3 PUSH2 0x676 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST MLOAD DUP1 MLOAD SWAP2 PUSH1 0x3 DUP6 ADD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT PUSH2 0x2D5 JUMPI PUSH1 0x1 PUSH1 0x40 SHL DUP5 GT PUSH2 0x2D5 JUMPI DUP2 SWAP1 DUP4 SLOAD DUP6 DUP6 SSTORE DUP1 DUP7 LT PUSH2 0x65B JUMPI JUMPDEST POP ADD SWAP2 PUSH0 MSTORE DUP1 PUSH0 KECCAK256 SWAP1 PUSH0 JUMPDEST DUP5 DUP2 LT PUSH2 0x640 JUMPI DUP9 DUP9 DUP9 PUSH1 0x4 DUP10 MLOAD SWAP2 ADD SSTORE PUSH1 0x3 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0x62C JUMPI PUSH32 0x787C9AE7718043965D54A360CE99BA2770A327DB7605042C3BF617652F73962 SWAP2 PUSH1 0x1 PUSH2 0x627 SWAP3 ADD PUSH1 0x3 SSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 CALLER SWAP6 DUP4 PUSH2 0xFB8 JUMP JUMPDEST SUB SWAP1 LOG2 STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 DUP3 ADD SSTORE SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x5D1 JUMP JUMPDEST PUSH2 0x670 SWAP1 DUP6 PUSH0 MSTORE DUP7 DUP5 PUSH0 KECCAK256 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xFA2 JUMP JUMPDEST DUP10 PUSH2 0x5C6 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP10 DUP1 PUSH2 0x580 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE DUP8 DUP2 KECCAK256 SWAP4 POP PUSH1 0x1F NOT DUP6 AND SWAP1 JUMPDEST DUP9 DUP3 DUP3 LT PUSH2 0x6CE JUMPI POP POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0x6B6 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x594 JUMP JUMPDEST ADD MLOAD PUSH0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP10 DUP1 DUP1 PUSH2 0x6A9 JUMP JUMPDEST PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP4 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x691 JUMP JUMPDEST PUSH2 0x70C SWAP1 DUP6 PUSH0 MSTORE DUP8 PUSH0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 DUP10 DUP7 LT PUSH2 0x2CB JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0xFA2 JUMP JUMPDEST DUP11 PUSH2 0x56B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F74206120726567697374657265642070617469656E742E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x127 JUMPI PUSH32 0x77A8AB2EF0D4890818F6E3342F66CD90C0F63167CF0B1507A8EE9132C9E7EAF3 PUSH1 0x20 PUSH2 0x788 CALLDATASIZE PUSH2 0xDBA JUMP JUMPDEST DUP2 PUSH0 MSTORE PUSH1 0x1 DUP4 MSTORE PUSH2 0x7A9 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD AND CALLER EQ PUSH2 0xF35 JUMP JUMPDEST PUSH2 0x7B6 PUSH1 0x3 SLOAD DUP4 LT PUSH2 0xEE9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7E1 DUP5 DUP3 DUP2 DUP1 DUP3 ADD SWAP6 DUP1 MLOAD SWAP2 DUP3 SWAP2 ADD DUP8 MCOPY DUP2 ADD PUSH0 DUP4 DUP3 ADD MSTORE SUB ADD PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0xD42 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 DUP2 PUSH0 MSTORE PUSH1 0x2 DUP4 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 STOP JUMPDEST CALLVALUE PUSH2 0x127 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH1 0x20 PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x127 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x72606200FAC42B7DC86B75901D61ECFAB2A4A1A6EDED478B97A428094891ABED DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x127 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x127 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH2 0x883 PUSH2 0xD2C JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x127 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x127 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x908 PUSH2 0xD2C JUMP JUMPDEST SWAP1 DUP1 PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0x92B PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD AND CALLER EQ PUSH2 0xF35 JUMP JUMPDEST PUSH2 0x938 PUSH1 0x3 SLOAD DUP3 LT PUSH2 0xEE9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH32 0xDF1CB6F79B8687A60E91ACED08290A53CB47A179B80C0C7C836D1C923C9A5647 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xA86 JUMPI SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 JUMPDEST DUP3 PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x3 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD DUP2 LT ISZERO PUSH2 0xA0D JUMPI DUP3 PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 PUSH2 0x9B3 DUP3 PUSH1 0x3 PUSH1 0x40 PUSH0 KECCAK256 ADD PUSH2 0xF79 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x9D2 JUMPI PUSH1 0x1 ADD PUSH2 0x983 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x20B63932B0B23C9030BABA3437B934BD32B217 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP SWAP1 DUP1 PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x3 PUSH1 0x40 PUSH0 KECCAK256 ADD SWAP1 DUP2 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 LT ISZERO PUSH2 0x2D5 JUMPI PUSH2 0xA61 DUP3 PUSH32 0x3C3A9147A1FC73DD51A32F4D10C43D457E8CB826EB6F35CAC6349EB965BA82B4 SWAP5 PUSH1 0x1 PUSH1 0x20 SWAP6 ADD DUP2 SSTORE PUSH2 0xF79 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SWAP2 DUP3 SHL NOT AND SWAP1 DUP7 SWAP1 SHL OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F742061207265676973746572656420646F63746F722E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x127 JUMPI PUSH2 0xAD9 CALLDATASIZE PUSH2 0xDBA JUMP JUMPDEST PUSH2 0xAE6 PUSH1 0x3 SLOAD DUP4 LT PUSH2 0xEE9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB12 PUSH1 0x20 DUP3 DUP2 DUP1 DUP3 ADD SWAP6 DUP1 MLOAD SWAP2 DUP3 SWAP2 ADD DUP8 MCOPY DUP2 ADD PUSH0 DUP4 DUP3 ADD MSTORE SUB ADD PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0xD42 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 DUP2 PUSH0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD SUB PUSH2 0xB40 JUMPI PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0x400 PUSH2 0x3EC PUSH1 0x2 PUSH1 0x40 PUSH0 KECCAK256 ADD PUSH2 0xE49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x24B731B7B93932B1BA102824A717 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x127 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH2 0xB8F PUSH2 0xD2C JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0xBAB JUMPI PUSH2 0x32B SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0x108F JUMP JUMPDEST PUSH4 0x334BD919 PUSH1 0xE1 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x127 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH2 0x32B PUSH1 0x4 CALLDATALOAD PUSH2 0xBD9 PUSH2 0xD2C JUMP JUMPDEST SWAP1 PUSH2 0xBF2 PUSH2 0x321 DUP3 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1007 JUMP JUMPDEST CALLVALUE PUSH2 0x127 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH1 0x20 PUSH2 0xC21 PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x127 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x127 JUMPI CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x7D7FFB7A348E1C6A02869081A26547B49160DD3DF72D1D75A570EB9B698292EC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x24 CALLDATALOAD SWAP2 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0xCA4 JUMPI DUP2 PUSH2 0xBF2 PUSH2 0x321 PUSH2 0x32B SWAP5 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x2737BA1030B71030B236B4B717 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x127 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP3 AND DUP1 SWAP3 SUB PUSH2 0x127 JUMPI PUSH1 0x20 SWAP2 PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0xD1B JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP4 PUSH2 0xD14 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x127 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x2D5 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x127 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x2D5 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0xD99 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0xD42 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x127 JUMPI DUP2 PUSH0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x40 PUSH1 0x3 NOT DUP4 ADD SLT PUSH2 0x127 JUMPI PUSH1 0x4 CALLDATALOAD SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x127 JUMPI PUSH2 0xDEA SWAP2 PUSH1 0x4 ADD PUSH2 0xD64 JUMP JUMPDEST SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP1 DUP4 MSTORE PUSH1 0x20 SWAP3 SWAP2 DUP2 SWAP1 DUP5 ADD DUP5 DUP5 ADD MCOPY PUSH0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0xE3F JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0xE2B JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0xE20 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH0 DUP3 SLOAD SWAP3 PUSH2 0xE5C DUP5 PUSH2 0xE11 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP4 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0xEC7 JUMPI POP PUSH1 0x1 EQ PUSH2 0xE83 JUMPI JUMPDEST POP PUSH2 0xE81 SWAP3 POP SUB DUP4 PUSH2 0xD42 JUMP JUMPDEST JUMP JUMPDEST SWAP1 POP PUSH0 SWAP3 SWAP2 SWAP3 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0xEAB JUMPI POP POP SWAP1 PUSH1 0x20 PUSH2 0xE81 SWAP3 DUP3 ADD ADD PUSH0 PUSH2 0xE74 JUMP JUMPDEST PUSH1 0x20 SWAP2 SWAP4 POP DUP1 PUSH1 0x1 SWAP2 SLOAD DUP4 DUP6 DUP10 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP2 DUP5 SWAP3 PUSH2 0xE92 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 SWAP3 POP PUSH2 0xE81 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD PUSH0 PUSH2 0xE74 JUMP JUMPDEST ISZERO PUSH2 0xEF0 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50617469656E74207265636F726420646F6573206E6F742065786973742E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0xF3C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x2737BA103A3432903932B1B7B9321037BBB732B917 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0xF8E JUMPI PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SWAP1 PUSH0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 LT PUSH2 0xFAD JUMPI POP POP JUMP JUMPDEST PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xFA2 JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH2 0xDEA SWAP4 SWAP3 DUP2 MSTORE DUP2 PUSH1 0x20 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0xDED JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xFF1 JUMPI POP JUMP JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1089 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLER SWAP3 SWAP2 SWAP1 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D SWAP1 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1089 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE CALLER SWAP3 SWAP2 SWAP1 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP1 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP1 PUSH0 JUMPDEST DUP3 PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x3 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD DUP2 LT ISZERO PUSH2 0x116D JUMPI DUP3 PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0x1141 DUP2 PUSH1 0x3 PUSH1 0x40 PUSH0 KECCAK256 ADD PUSH2 0xF79 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND EQ PUSH2 0x1165 JUMPI PUSH1 0x1 ADD PUSH2 0x1112 JUMP JUMPDEST POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP POP PUSH0 SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x21 STOP 0xFC 0xF8 0xEC 0xCA ISZERO 0x29 PUSH30 0x98360DE5E56DBFAC486EEEE1E0E245405B6C4C77E2E11F64736F6C634300 ADDMOD BYTE STOP CALLER PUSH30 0x7FFB7A348E1C6A02869081A26547B49160DD3DF72D1D75A570EB9B698292 0xEC LOG4 SWAP9 SMOD KECCAK256 TLOAD 0xE4 0xD3 SSTORE MULMOD 0x2E CREATE2 0xA8 LOG1 DUP16 JUMP 0xE8 SWAP2 EXTCODECOPY DELEGATECALL LOG2 ADD 0xFB 0xE2 DUP8 DUP3 JUMPDEST MULMOD JUMP SWAP4 0xC2 OR PUSH22 0x0 ",
							"sourceMap": "123:4311:5:-:0;;;;;;1068:34;1091:10;1068:34;:::i;:::-;-1:-1:-1;286:25:5;-1:-1:-1;123:4311:5;;;;;;;3901:22:0;123:4311:5;;-1:-1:-1;;;;;;;;;;;123:4311:5;;;;217:23;;123:4311;;5886:52:0;;-1:-1:-1;5886:52:0;356:24:5;-1:-1:-1;123:4311:5;;;;;;;3901:22:0;123:4311:5;;-1:-1:-1;;;;;;;;;;;123:4311:5;;;;217:23;;123:4311;;5886:52:0;;-1:-1:-1;5886:52:0;123:4311:5;;;;;;;;;;;;;6179:316:0;-1:-1:-1;;;;;123:4311:5;;;;;;-1:-1:-1;;;;;;;;;;;123:4311:5;;;;;;;;;;-1:-1:-1;;;;;123:4311:5;;;;;-1:-1:-1;;;;;;;;;;;123:4311:5;;;;;;;-1:-1:-1;;123:4311:5;;;;;735:10:2;;123:4311:5;-1:-1:-1;;;;;;;;;;;217:23:5;6370:40:0;;123:4311:5;6370:40:0;6347:4;6424:11;:::o;6272:217::-;6466:12;123:4311:5;6466:12:0;:::o"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode_address": {
									"entryPoint": 3372,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_string": {
									"entryPoint": 3428,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_uint256t_string": {
									"entryPoint": 3514,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"abi_encode_string": {
									"entryPoint": 3565,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_uint256_string": {
									"entryPoint": 4024,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"clear_storage_range_bytes1": {
									"entryPoint": 4002,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_array_from_storage_to_memory_string": {
									"entryPoint": 3657,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 3601,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 3394,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"fun_checkRole": {
									"entryPoint": 4047,
									"id": 93,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_getRoleAdmin": {
									"entryPoint": null,
									"id": 128,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_grantRole": {
									"entryPoint": 4103,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"fun_isAuthorized": {
									"entryPoint": 4367,
									"id": 770,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"fun_revokeRole": {
									"entryPoint": 4239,
									"id": 294,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"require_helper_stringliteral": {
									"entryPoint": 3893,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"require_helper_stringliteral_a03f": {
									"entryPoint": 3817,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"storage_array_index_access_address_dyn": {
									"entryPoint": 3961,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080806040526004361015610012575f80fd5b5f3560e01c90816301ffc9a714610cd9575080631d9486de14610c29578063248a9ca314610bf75780632f2ff15d14610bba57806336568abe14610b765780633c2bc6a114610acb57806365dd152c146108ec57806375b238fc146108b257806391d148541461086a578063a217fddf14610850578063ac5cb97d14610816578063b1131795146107f9578063b38deff014610757578063b63149151461044b578063b9fff11b14610399578063d3d188a11461032d578063d547741f146102e9578063dba454621461012b5763fec331f2146100ed575f80fd5b34610127575f3660031901126101275760206040517f0af1dac7dea2fd7f7738119cec7df099dfad49aa9d2e7d17ba6b60f63ae7411f8152f35b5f80fd5b346101275761013936610dba565b815f52600160205261015b60018060a01b03600160405f200154163314610f35565b6101686003548310610ee9565b815f526001602052600260405f20019181519267ffffffffffffffff84116102d5576101948154610e11565b601f811161029a575b50602093601f811160011461021957807f080568d98c5c4be465f3f47ef6da4b979fdc4ca568775898275584974a140f0f955f9161020e575b508160011b915f199060031b1c19161790555b805f52600160205242600460405f20015561020960405192839283610fb8565b0390a1005b9050840151866101d6565b601f19811694825f52805f20955f5b81811061028257509582916001937f080568d98c5c4be465f3f47ef6da4b979fdc4ca568775898275584974a140f0f981061026a575b5050811b0190556101e9565b8601515f1960f88460031b161c19169055868061025e565b86830151885560019097019660209283019201610228565b6102c590825f5260205f20601f870160051c810191602088106102cb575b601f0160051c0190610fa2565b8461019d565b90915081906102b8565b634e487b7160e01b5f52604160045260245ffd5b346101275760403660031901126101275761032b600435610308610d2c565b90610326610321825f525f602052600160405f20015490565b610fcf565b61108f565b005b34610127576020366003190112610127576004355f52600160205260405f20805460018060a01b036001830154169161038f600461036d60028401610e49565b9201549160405194859485526020850152608060408501526080840190610ded565b9060608301520390f35b3461012757602036600319011261012757600435805f52600160205260018060a01b03600160405f200154163314801561043b575b15610404575f5260016020526104006103ec600260405f2001610e49565b604051918291602083526020830190610ded565b0390f35b60405162461bcd60e51b815260206004820152600f60248201526e2737ba1030baba3437b934bd32b21760891b6044820152606490fd5b50610446338261110f565b6103ce565b346101275760203660031901126101275760043567ffffffffffffffff81116101275761047c903690600401610d64565b335f9081527f01269c68c28a67305f4a2d47532888d6c961251cfcb06c9cdb6066d32b24b320602052604090205460ff1615610712576003549060206040516104c58282610d42565b5f81525f3681376040519160a0830183811067ffffffffffffffff8211176102d5576040528483528083019133835260408401858152606085019182526080850193428552875f526001845260405f2095518655600186019060018060a01b039051166bffffffffffffffffffffffff60a01b82541617905560028501905180519067ffffffffffffffff82116102d55781906105628454610e11565b601f81116106e4575b508590601f8311600114610681575f92610676575b50508160011b915f199060031b1c19161790555b51805191600385019167ffffffffffffffff84116102d557600160401b84116102d5578190835485855580861061065b575b5001915f52805f20905f5b84811061064057888888600489519101556003545f19811461062c577f0787c9ae7718043965d54a360ce99ba2770a327db7605042c3bf617652f739629160016106279201600355604051918291339583610fb8565b0390a2005b634e487b7160e01b5f52601160045260245ffd5b83516001600160a01b031683820155928101926001016105d1565b61067090855f5286845f209182019101610fa2565b896105c6565b015190508980610580565b5f8581528781209350601f198516905b888282106106ce5750509084600195949392106106b6575b505050811b019055610594565b01515f1960f88460031b161c191690558980806106a9565b6001859682939686015181550195019301610691565b61070c90855f52875f20601f850160051c8101918986106102cb57601f0160051c0190610fa2565b8a61056b565b60405162461bcd60e51b815260206004820152601960248201527f4e6f74206120726567697374657265642070617469656e742e000000000000006044820152606490fd5b34610127577f77a8ab2ef0d4890818f6e3342f66cd90c0f63167cf0b1507a8ee9132c9e7eaf3602061078836610dba565b815f52600183526107a960018060a01b03600160405f200154163314610f35565b6107b66003548310610ee9565b6040516107e184828180820195805191829101875e81015f838201520301601f198101835282610d42565b519020815f526002835260405f2055604051908152a1005b34610127575f366003190112610127576020600354604051908152f35b34610127575f3660031901126101275760206040517f72606200fac42b7dc86b75901d61ecfab2a4a1a6eded478b97a428094891abed8152f35b34610127575f3660031901126101275760206040515f8152f35b3461012757604036600319011261012757610883610d2c565b6004355f525f60205260405f209060018060a01b03165f52602052602060ff60405f2054166040519015158152f35b34610127575f3660031901126101275760206040517fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c217758152f35b3461012757604036600319011261012757600435610908610d2c565b90805f52600160205261092b60018060a01b03600160405f200154163314610f35565b6109386003548210610ee9565b6001600160a01b0382165f9081527fdf1cb6f79b8687a60e91aced08290a53cb47a179b80c0c7c836d1c923c9a5647602052604090205460ff1615610a8657906001600160a01b03165f5b825f526001602052600360405f200154811015610a0d57825f526001602052816109b382600360405f2001610f79565b905460039190911b1c6001600160a01b0316146109d257600101610983565b60405162461bcd60e51b815260206004820152601360248201527220b63932b0b23c9030baba3437b934bd32b21760691b6044820152606490fd5b5090805f526001602052600360405f200190815490600160401b8210156102d557610a61827f3c3a9147a1fc73dd51a32f4d10c43d457e8cb826eb6f35cac6349eb965ba82b4946001602095018155610f79565b81546001600160a01b0360039290921b91821b19169086901b179055604051908152a2005b60405162461bcd60e51b815260206004820152601860248201527f4e6f742061207265676973746572656420646f63746f722e00000000000000006044820152606490fd5b3461012757610ad936610dba565b610ae66003548310610ee9565b604051610b126020828180820195805191829101875e81015f838201520301601f198101835282610d42565b519020815f52600260205260405f205403610b40575f5260016020526104006103ec600260405f2001610e49565b60405162461bcd60e51b815260206004820152600e60248201526d24b731b7b93932b1ba102824a71760911b6044820152606490fd5b3461012757604036600319011261012757610b8f610d2c565b336001600160a01b03821603610bab5761032b9060043561108f565b63334bd91960e11b5f5260045ffd5b346101275760403660031901126101275761032b600435610bd9610d2c565b90610bf2610321825f525f602052600160405f20015490565b611007565b34610127576020366003190112610127576020610c216004355f525f602052600160405f20015490565b604051908152f35b34610127576040366003190112610127576004356001600160a01b038116810361012757335f9081527f7d7ffb7a348e1c6a02869081a26547b49160dd3df72d1d75a570eb9b698292ec6020526040902054602435919060ff1615610ca45781610bf261032161032b945f525f602052600160405f20015490565b60405162461bcd60e51b815260206004820152600d60248201526c2737ba1030b71030b236b4b71760991b6044820152606490fd5b34610127576020366003190112610127576004359063ffffffff60e01b821680920361012757602091637965db0b60e01b8114908115610d1b575b5015158152f35b6301ffc9a760e01b14905083610d14565b602435906001600160a01b038216820361012757565b90601f8019910116810190811067ffffffffffffffff8211176102d557604052565b81601f820112156101275780359067ffffffffffffffff82116102d55760405192610d99601f8401601f191660200185610d42565b8284526020838301011161012757815f926020809301838601378301015290565b90604060031983011261012757600435916024359067ffffffffffffffff821161012757610dea91600401610d64565b90565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b90600182811c92168015610e3f575b6020831014610e2b57565b634e487b7160e01b5f52602260045260245ffd5b91607f1691610e20565b9060405191825f825492610e5c84610e11565b8084529360018116908115610ec75750600114610e83575b50610e8192500383610d42565b565b90505f9291925260205f20905f915b818310610eab575050906020610e81928201015f610e74565b6020919350806001915483858901015201910190918492610e92565b905060209250610e8194915060ff191682840152151560051b8201015f610e74565b15610ef057565b60405162461bcd60e51b815260206004820152601e60248201527f50617469656e74207265636f726420646f6573206e6f742065786973742e00006044820152606490fd5b15610f3c57565b60405162461bcd60e51b81526020600482015260156024820152742737ba103a3432903932b1b7b9321037bbb732b91760591b6044820152606490fd5b8054821015610f8e575f5260205f2001905f90565b634e487b7160e01b5f52603260045260245ffd5b818110610fad575050565b5f8155600101610fa2565b604090610dea939281528160208201520190610ded565b5f8181526020818152604080832033845290915290205460ff1615610ff15750565b63e2517d3f60e01b5f523360045260245260445ffd5b5f818152602081815260408083206001600160a01b038616845290915290205460ff16611089575f818152602081815260408083206001600160a01b0395909516808452949091528120805460ff19166001179055339291907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9080a4600190565b50505f90565b5f818152602081815260408083206001600160a01b038616845290915290205460ff1615611089575f818152602081815260408083206001600160a01b0395909516808452949091528120805460ff19169055339291907ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9080a4600190565b905f5b825f526001602052600360405f20015481101561116d57825f52600160205261114181600360405f2001610f79565b905460039190911b1c6001600160a01b039081169083161461116557600101611112565b505050600190565b5050505f9056fea26469706673582212202100fcf8ecca15297d98360de5e56dbfac486eeee1e0e245405b6c4c77e2e11f64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0xCD9 JUMPI POP DUP1 PUSH4 0x1D9486DE EQ PUSH2 0xC29 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0xBF7 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0xBBA JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0xB76 JUMPI DUP1 PUSH4 0x3C2BC6A1 EQ PUSH2 0xACB JUMPI DUP1 PUSH4 0x65DD152C EQ PUSH2 0x8EC JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x8B2 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x86A JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x850 JUMPI DUP1 PUSH4 0xAC5CB97D EQ PUSH2 0x816 JUMPI DUP1 PUSH4 0xB1131795 EQ PUSH2 0x7F9 JUMPI DUP1 PUSH4 0xB38DEFF0 EQ PUSH2 0x757 JUMPI DUP1 PUSH4 0xB6314915 EQ PUSH2 0x44B JUMPI DUP1 PUSH4 0xB9FFF11B EQ PUSH2 0x399 JUMPI DUP1 PUSH4 0xD3D188A1 EQ PUSH2 0x32D JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x2E9 JUMPI DUP1 PUSH4 0xDBA45462 EQ PUSH2 0x12B JUMPI PUSH4 0xFEC331F2 EQ PUSH2 0xED JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x127 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0xAF1DAC7DEA2FD7F7738119CEC7DF099DFAD49AA9D2E7D17BA6B60F63AE7411F DUP2 MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x127 JUMPI PUSH2 0x139 CALLDATASIZE PUSH2 0xDBA JUMP JUMPDEST DUP2 PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0x15B PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD AND CALLER EQ PUSH2 0xF35 JUMP JUMPDEST PUSH2 0x168 PUSH1 0x3 SLOAD DUP4 LT PUSH2 0xEE9 JUMP JUMPDEST DUP2 PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x2 PUSH1 0x40 PUSH0 KECCAK256 ADD SWAP2 DUP2 MLOAD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT PUSH2 0x2D5 JUMPI PUSH2 0x194 DUP2 SLOAD PUSH2 0xE11 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x29A JUMPI JUMPDEST POP PUSH1 0x20 SWAP4 PUSH1 0x1F DUP2 GT PUSH1 0x1 EQ PUSH2 0x219 JUMPI DUP1 PUSH32 0x80568D98C5C4BE465F3F47EF6DA4B979FDC4CA568775898275584974A140F0F SWAP6 PUSH0 SWAP2 PUSH2 0x20E JUMPI JUMPDEST POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST DUP1 PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE TIMESTAMP PUSH1 0x4 PUSH1 0x40 PUSH0 KECCAK256 ADD SSTORE PUSH2 0x209 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP4 PUSH2 0xFB8 JUMP JUMPDEST SUB SWAP1 LOG1 STOP JUMPDEST SWAP1 POP DUP5 ADD MLOAD DUP7 PUSH2 0x1D6 JUMP JUMPDEST PUSH1 0x1F NOT DUP2 AND SWAP5 DUP3 PUSH0 MSTORE DUP1 PUSH0 KECCAK256 SWAP6 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x282 JUMPI POP SWAP6 DUP3 SWAP2 PUSH1 0x1 SWAP4 PUSH32 0x80568D98C5C4BE465F3F47EF6DA4B979FDC4CA568775898275584974A140F0F SWAP9 LT PUSH2 0x26A JUMPI JUMPDEST POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x1E9 JUMP JUMPDEST DUP7 ADD MLOAD PUSH0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP7 DUP1 PUSH2 0x25E JUMP JUMPDEST DUP7 DUP4 ADD MLOAD DUP9 SSTORE PUSH1 0x1 SWAP1 SWAP8 ADD SWAP7 PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x228 JUMP JUMPDEST PUSH2 0x2C5 SWAP1 DUP3 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP8 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP9 LT PUSH2 0x2CB JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0xFA2 JUMP JUMPDEST DUP5 PUSH2 0x19D JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x2B8 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x127 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH2 0x32B PUSH1 0x4 CALLDATALOAD PUSH2 0x308 PUSH2 0xD2C JUMP JUMPDEST SWAP1 PUSH2 0x326 PUSH2 0x321 DUP3 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xFCF JUMP JUMPDEST PUSH2 0x108F JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0x127 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 DUP4 ADD SLOAD AND SWAP2 PUSH2 0x38F PUSH1 0x4 PUSH2 0x36D PUSH1 0x2 DUP5 ADD PUSH2 0xE49 JUMP JUMPDEST SWAP3 ADD SLOAD SWAP2 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD SWAP1 PUSH2 0xDED JUMP JUMPDEST SWAP1 PUSH1 0x60 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x127 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD AND CALLER EQ DUP1 ISZERO PUSH2 0x43B JUMPI JUMPDEST ISZERO PUSH2 0x404 JUMPI PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0x400 PUSH2 0x3EC PUSH1 0x2 PUSH1 0x40 PUSH0 KECCAK256 ADD PUSH2 0xE49 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0xDED JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x2737BA1030BABA3437B934BD32B217 PUSH1 0x89 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH2 0x446 CALLER DUP3 PUSH2 0x110F JUMP JUMPDEST PUSH2 0x3CE JUMP JUMPDEST CALLVALUE PUSH2 0x127 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x127 JUMPI PUSH2 0x47C SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xD64 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x1269C68C28A67305F4A2D47532888D6C961251CFCB06C9CDB6066D32B24B320 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x712 JUMPI PUSH1 0x3 SLOAD SWAP1 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0x4C5 DUP3 DUP3 PUSH2 0xD42 JUMP JUMPDEST PUSH0 DUP2 MSTORE PUSH0 CALLDATASIZE DUP2 CALLDATACOPY PUSH1 0x40 MLOAD SWAP2 PUSH1 0xA0 DUP4 ADD DUP4 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x2D5 JUMPI PUSH1 0x40 MSTORE DUP5 DUP4 MSTORE DUP1 DUP4 ADD SWAP2 CALLER DUP4 MSTORE PUSH1 0x40 DUP5 ADD DUP6 DUP2 MSTORE PUSH1 0x60 DUP6 ADD SWAP2 DUP3 MSTORE PUSH1 0x80 DUP6 ADD SWAP4 TIMESTAMP DUP6 MSTORE DUP8 PUSH0 MSTORE PUSH1 0x1 DUP5 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP6 MLOAD DUP7 SSTORE PUSH1 0x1 DUP7 ADD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 MLOAD AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x2 DUP6 ADD SWAP1 MLOAD DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x2D5 JUMPI DUP2 SWAP1 PUSH2 0x562 DUP5 SLOAD PUSH2 0xE11 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x6E4 JUMPI JUMPDEST POP DUP6 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x681 JUMPI PUSH0 SWAP3 PUSH2 0x676 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST MLOAD DUP1 MLOAD SWAP2 PUSH1 0x3 DUP6 ADD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT PUSH2 0x2D5 JUMPI PUSH1 0x1 PUSH1 0x40 SHL DUP5 GT PUSH2 0x2D5 JUMPI DUP2 SWAP1 DUP4 SLOAD DUP6 DUP6 SSTORE DUP1 DUP7 LT PUSH2 0x65B JUMPI JUMPDEST POP ADD SWAP2 PUSH0 MSTORE DUP1 PUSH0 KECCAK256 SWAP1 PUSH0 JUMPDEST DUP5 DUP2 LT PUSH2 0x640 JUMPI DUP9 DUP9 DUP9 PUSH1 0x4 DUP10 MLOAD SWAP2 ADD SSTORE PUSH1 0x3 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0x62C JUMPI PUSH32 0x787C9AE7718043965D54A360CE99BA2770A327DB7605042C3BF617652F73962 SWAP2 PUSH1 0x1 PUSH2 0x627 SWAP3 ADD PUSH1 0x3 SSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 CALLER SWAP6 DUP4 PUSH2 0xFB8 JUMP JUMPDEST SUB SWAP1 LOG2 STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 DUP3 ADD SSTORE SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x5D1 JUMP JUMPDEST PUSH2 0x670 SWAP1 DUP6 PUSH0 MSTORE DUP7 DUP5 PUSH0 KECCAK256 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xFA2 JUMP JUMPDEST DUP10 PUSH2 0x5C6 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP10 DUP1 PUSH2 0x580 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE DUP8 DUP2 KECCAK256 SWAP4 POP PUSH1 0x1F NOT DUP6 AND SWAP1 JUMPDEST DUP9 DUP3 DUP3 LT PUSH2 0x6CE JUMPI POP POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0x6B6 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x594 JUMP JUMPDEST ADD MLOAD PUSH0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP10 DUP1 DUP1 PUSH2 0x6A9 JUMP JUMPDEST PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP4 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x691 JUMP JUMPDEST PUSH2 0x70C SWAP1 DUP6 PUSH0 MSTORE DUP8 PUSH0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 DUP10 DUP7 LT PUSH2 0x2CB JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0xFA2 JUMP JUMPDEST DUP11 PUSH2 0x56B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F74206120726567697374657265642070617469656E742E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x127 JUMPI PUSH32 0x77A8AB2EF0D4890818F6E3342F66CD90C0F63167CF0B1507A8EE9132C9E7EAF3 PUSH1 0x20 PUSH2 0x788 CALLDATASIZE PUSH2 0xDBA JUMP JUMPDEST DUP2 PUSH0 MSTORE PUSH1 0x1 DUP4 MSTORE PUSH2 0x7A9 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD AND CALLER EQ PUSH2 0xF35 JUMP JUMPDEST PUSH2 0x7B6 PUSH1 0x3 SLOAD DUP4 LT PUSH2 0xEE9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7E1 DUP5 DUP3 DUP2 DUP1 DUP3 ADD SWAP6 DUP1 MLOAD SWAP2 DUP3 SWAP2 ADD DUP8 MCOPY DUP2 ADD PUSH0 DUP4 DUP3 ADD MSTORE SUB ADD PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0xD42 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 DUP2 PUSH0 MSTORE PUSH1 0x2 DUP4 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 STOP JUMPDEST CALLVALUE PUSH2 0x127 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH1 0x20 PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x127 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x72606200FAC42B7DC86B75901D61ECFAB2A4A1A6EDED478B97A428094891ABED DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x127 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x127 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH2 0x883 PUSH2 0xD2C JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x127 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x127 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x908 PUSH2 0xD2C JUMP JUMPDEST SWAP1 DUP1 PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0x92B PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD AND CALLER EQ PUSH2 0xF35 JUMP JUMPDEST PUSH2 0x938 PUSH1 0x3 SLOAD DUP3 LT PUSH2 0xEE9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH32 0xDF1CB6F79B8687A60E91ACED08290A53CB47A179B80C0C7C836D1C923C9A5647 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xA86 JUMPI SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 JUMPDEST DUP3 PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x3 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD DUP2 LT ISZERO PUSH2 0xA0D JUMPI DUP3 PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 PUSH2 0x9B3 DUP3 PUSH1 0x3 PUSH1 0x40 PUSH0 KECCAK256 ADD PUSH2 0xF79 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x9D2 JUMPI PUSH1 0x1 ADD PUSH2 0x983 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x20B63932B0B23C9030BABA3437B934BD32B217 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP SWAP1 DUP1 PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x3 PUSH1 0x40 PUSH0 KECCAK256 ADD SWAP1 DUP2 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 LT ISZERO PUSH2 0x2D5 JUMPI PUSH2 0xA61 DUP3 PUSH32 0x3C3A9147A1FC73DD51A32F4D10C43D457E8CB826EB6F35CAC6349EB965BA82B4 SWAP5 PUSH1 0x1 PUSH1 0x20 SWAP6 ADD DUP2 SSTORE PUSH2 0xF79 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SWAP2 DUP3 SHL NOT AND SWAP1 DUP7 SWAP1 SHL OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F742061207265676973746572656420646F63746F722E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x127 JUMPI PUSH2 0xAD9 CALLDATASIZE PUSH2 0xDBA JUMP JUMPDEST PUSH2 0xAE6 PUSH1 0x3 SLOAD DUP4 LT PUSH2 0xEE9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB12 PUSH1 0x20 DUP3 DUP2 DUP1 DUP3 ADD SWAP6 DUP1 MLOAD SWAP2 DUP3 SWAP2 ADD DUP8 MCOPY DUP2 ADD PUSH0 DUP4 DUP3 ADD MSTORE SUB ADD PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0xD42 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 DUP2 PUSH0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD SUB PUSH2 0xB40 JUMPI PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0x400 PUSH2 0x3EC PUSH1 0x2 PUSH1 0x40 PUSH0 KECCAK256 ADD PUSH2 0xE49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x24B731B7B93932B1BA102824A717 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x127 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH2 0xB8F PUSH2 0xD2C JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0xBAB JUMPI PUSH2 0x32B SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0x108F JUMP JUMPDEST PUSH4 0x334BD919 PUSH1 0xE1 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x127 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH2 0x32B PUSH1 0x4 CALLDATALOAD PUSH2 0xBD9 PUSH2 0xD2C JUMP JUMPDEST SWAP1 PUSH2 0xBF2 PUSH2 0x321 DUP3 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1007 JUMP JUMPDEST CALLVALUE PUSH2 0x127 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH1 0x20 PUSH2 0xC21 PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x127 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x127 JUMPI CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x7D7FFB7A348E1C6A02869081A26547B49160DD3DF72D1D75A570EB9B698292EC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x24 CALLDATALOAD SWAP2 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0xCA4 JUMPI DUP2 PUSH2 0xBF2 PUSH2 0x321 PUSH2 0x32B SWAP5 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x2737BA1030B71030B236B4B717 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x127 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP3 AND DUP1 SWAP3 SUB PUSH2 0x127 JUMPI PUSH1 0x20 SWAP2 PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0xD1B JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP4 PUSH2 0xD14 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x127 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x2D5 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x127 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x2D5 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0xD99 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0xD42 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x127 JUMPI DUP2 PUSH0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x40 PUSH1 0x3 NOT DUP4 ADD SLT PUSH2 0x127 JUMPI PUSH1 0x4 CALLDATALOAD SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x127 JUMPI PUSH2 0xDEA SWAP2 PUSH1 0x4 ADD PUSH2 0xD64 JUMP JUMPDEST SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP1 DUP4 MSTORE PUSH1 0x20 SWAP3 SWAP2 DUP2 SWAP1 DUP5 ADD DUP5 DUP5 ADD MCOPY PUSH0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0xE3F JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0xE2B JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0xE20 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH0 DUP3 SLOAD SWAP3 PUSH2 0xE5C DUP5 PUSH2 0xE11 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP4 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0xEC7 JUMPI POP PUSH1 0x1 EQ PUSH2 0xE83 JUMPI JUMPDEST POP PUSH2 0xE81 SWAP3 POP SUB DUP4 PUSH2 0xD42 JUMP JUMPDEST JUMP JUMPDEST SWAP1 POP PUSH0 SWAP3 SWAP2 SWAP3 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0xEAB JUMPI POP POP SWAP1 PUSH1 0x20 PUSH2 0xE81 SWAP3 DUP3 ADD ADD PUSH0 PUSH2 0xE74 JUMP JUMPDEST PUSH1 0x20 SWAP2 SWAP4 POP DUP1 PUSH1 0x1 SWAP2 SLOAD DUP4 DUP6 DUP10 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP2 DUP5 SWAP3 PUSH2 0xE92 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 SWAP3 POP PUSH2 0xE81 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD PUSH0 PUSH2 0xE74 JUMP JUMPDEST ISZERO PUSH2 0xEF0 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50617469656E74207265636F726420646F6573206E6F742065786973742E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0xF3C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x2737BA103A3432903932B1B7B9321037BBB732B917 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0xF8E JUMPI PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SWAP1 PUSH0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 LT PUSH2 0xFAD JUMPI POP POP JUMP JUMPDEST PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xFA2 JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH2 0xDEA SWAP4 SWAP3 DUP2 MSTORE DUP2 PUSH1 0x20 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0xDED JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xFF1 JUMPI POP JUMP JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1089 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLER SWAP3 SWAP2 SWAP1 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D SWAP1 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1089 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE CALLER SWAP3 SWAP2 SWAP1 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP1 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP1 PUSH0 JUMPDEST DUP3 PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x3 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD DUP2 LT ISZERO PUSH2 0x116D JUMPI DUP3 PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0x1141 DUP2 PUSH1 0x3 PUSH1 0x40 PUSH0 KECCAK256 ADD PUSH2 0xF79 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND EQ PUSH2 0x1165 JUMPI PUSH1 0x1 ADD PUSH2 0x1112 JUMP JUMPDEST POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP POP PUSH0 SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x21 STOP 0xFC 0xF8 0xEC 0xCA ISZERO 0x29 PUSH30 0x98360DE5E56DBFAC486EEEE1E0E245405B6C4C77E2E11F64736F6C634300 ADDMOD BYTE STOP CALLER ",
							"sourceMap": "123:4311:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;123:4311:5;;;;;;;356:24;123:4311;;;;;;;;;;;;;;:::i;:::-;;;;1291:14;123:4311;;1269:80;123:4311;;;;;1291:14;123:4311;;;1291:32;123:4311;;1277:10;:46;1269:80;:::i;:::-;2062:69;2083:13;123:4311;2070:26;;2062:69;:::i;:::-;123:4311;;;1291:14;123:4311;;2144:35;123:4311;;;2144:35;123:4311;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;2277:46;123:4311;;;;;;;;1291:14;123:4311;;;;;2083:13;123:4311;;;;;;;;;;;1291:14;123:4311;;2244:15;123:4311;;;;2205:36;123:4311;2277:46;123:4311;;2277:46;;;;;:::i;:::-;;;;123:4311;;;;;;;;;;;4118:22;;123:4311;;;;;;;;;;;;;;;;;;;;;1291:14;123:4311;2277:46;123:4311;;;;;;;;;;;;;;;;;;;;;;2083:13;123:4311;;;;;;;;;;;;;;;;;;1291:14;123:4311;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;123:4311:5;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;123:4311:5;;;;4747:26:0;123:4311:5;;;;:::i;:::-;4717:18:0;2475:4;4717:18;;3901:6;123:4311:5;3901:6:0;123:4311:5;;3901:22:0;123:4311:5;3901:6:0;123:4311:5;3901:22:0;123:4311:5;3810:120:0;;4717:18;2475:4;:::i;:::-;4747:26;:::i;:::-;123:4311:5;;;;;;;-1:-1:-1;;123:4311:5;;;;;;;;;;;;;;;;;;;;;;606:55;;123:4311;;606:55;123:4311;;606:55;;;;;:::i;:::-;;;123:4311;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;123:4311:5;;;;;;;;;;;;;;;;;;;;;3062:32;123:4311;;3048:10;:46;:86;;;;123:4311;;;;;;;;;;;3195:35;123:4311;;;3195:35;123:4311;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;123:4311:5;;;;;;;;;;;;-1:-1:-1;;;123:4311:5;;;;;;;3048:86;:10;3098:36;3048:10;3098:36;;:::i;:::-;3048:86;;123:4311;;;;;;-1:-1:-1;;123:4311:5;;;;;;;;;;;;;;;;;;:::i;:::-;1476:10;123:4311;;;;;;;;;;;;;;;;1558:13;123:4311;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;1610:219;;;1476:10;;123:4311;;;1610:219;;123:4311;;;1610:219;;;123:4311;;;1610:219;;;1802:15;;123:4311;;;;;1582:14;123:4311;;;;;;;;;1582:14;123:4311;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;1582:14;123:4311;;;;;1558:13;123:4311;;;;;;;;;;;;1558:13;123:4311;;;;;;;;-1:-1:-1;;;123:4311:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1558:13;123:4311;;;;;;;1875:52;123:4311;1582:14;1875:52;123:4311;;1558:13;123:4311;;;1476:10;;;;1875:52;;;:::i;:::-;;;;123:4311;;;;;;;;;;;;;;;;-1:-1:-1;;;;;123:4311:5;;;;;;;;;1582:14;123:4311;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;123:4311:5;;;;;;;;;;;;;-1:-1:-1;;;123:4311:5;;;;;;;;;;;;;;1582:14;123:4311;;;;;;;;;;;;;;;;;;;;;;;;;1558:13;123:4311;;;;;;;;;;;;;1582:14;123:4311;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;123:4311:5;;;;;;;;;;;;;;;;;;;;;;;;3865:27;123:4311;;;;:::i;:::-;;;;1291:14;123:4311;;1269:80;123:4311;;;;;1291:14;123:4311;;;1291:32;123:4311;;1277:10;:46;1269:80;:::i;:::-;3708:69;3729:13;123:4311;3716:26;;3708:69;:::i;:::-;123:4311;;3826:22;;;;;;;123:4311;;;;;;;;;;;;;;;;3826:22;;4118;;3826;;;;;;:::i;:::-;123:4311;3816:33;;123:4311;;;3788:13;123:4311;;;;;;;;;;;3865:27;123:4311;;;;;;;-1:-1:-1;;123:4311:5;;;;;726:28;123:4311;;;;;;;;;;;;;-1:-1:-1;;123:4311:5;;;;;;;286:25;123:4311;;;;;;;;;-1:-1:-1;;123:4311:5;;;;;;;;;;;;;;;;;-1:-1:-1;;123:4311:5;;;;;;:::i;:::-;;;;;;;;;;;2954:29:0;123:4311:5;;;;;;-1:-1:-1;123:4311:5;;;;;;-1:-1:-1;123:4311:5;;;;;;;;;;;;;;;;;-1:-1:-1;;123:4311:5;;;;;;;217:23;123:4311;;;;;;;;;-1:-1:-1;;123:4311:5;;;;;;;;:::i;:::-;;;;;;;;1269:80;123:4311;;;;;;;;;1291:32;123:4311;;1277:10;:46;1269:80;:::i;:::-;2439:69;2460:13;123:4311;2447:26;;2439:69;:::i;:::-;-1:-1:-1;;;;;123:4311:5;;;;;;;;;;;;;;;;;;2603:13;-1:-1:-1;;;;;123:4311:5;;2675:3;123:4311;;;;;;2460:13;123:4311;;;2622:44;123:4311;2618:55;;;;;123:4311;;;;;;;2703:47;123:4311;2460:13;123:4311;;;2703:44;:47;:::i;:::-;123:4311;;2460:13;123:4311;;;;;-1:-1:-1;;;;;123:4311:5;2703:58;123:4311;;;;2603:13;;123:4311;;;-1:-1:-1;;;123:4311:5;;;;;;;;;;;;-1:-1:-1;;;123:4311:5;;;;;;;2618:55;;;123:4311;;;;;;2460:13;123:4311;;;2809:44;123:4311;;;;-1:-1:-1;;;123:4311:5;;;;;;;2883:34;123:4311;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;2460:13:5;123:4311;;;;;;;;;;;;;;;;;;;;;2883:34;123:4311;;;;-1:-1:-1;;;123:4311:5;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4020:69;4041:13;123:4311;4028:26;;4020:69;:::i;:::-;123:4311;;4118:22;;;;;;;123:4311;;;;;;;;;;;;;;;;4118:22;;;;;;;;;;:::i;:::-;123:4311;4108:33;;123:4311;;;4145:13;4118:22;123:4311;;;;;4108:62;123:4311;;;;4207:14;4118:22;123:4311;;;4145:13;123:4311;;;4207:35;123:4311;:::i;:::-;;;-1:-1:-1;;;123:4311:5;;4118:22;123:4311;;;;;;;;;-1:-1:-1;;;123:4311:5;;;;;;;;;;;;;-1:-1:-1;;123:4311:5;;;;;;:::i;:::-;735:10:2;-1:-1:-1;;;;;123:4311:5;;5421:34:0;5417:102;;5529:37;123:4311:5;;;5529:37:0;:::i;5417:102::-;5478:30;;;123:4311:5;5478:30:0;123:4311:5;;5478:30:0;123:4311:5;;;;;;-1:-1:-1;;123:4311:5;;;;4330:25:0;123:4311:5;;;;:::i;:::-;4300:18:0;2475:4;4300:18;;3901:6;123:4311:5;3901:6:0;123:4311:5;;3901:22:0;123:4311:5;3901:6:0;123:4311:5;3901:22:0;123:4311:5;3810:120:0;;2475:4;4330:25;:::i;123:4311:5:-;;;;;;-1:-1:-1;;123:4311:5;;;;;;;;3901:6:0;123:4311:5;3901:6:0;123:4311:5;;3901:22:0;123:4311:5;3901:6:0;123:4311:5;3901:22:0;123:4311:5;3810:120:0;;123:4311:5;;;;;;;;;;;;;-1:-1:-1;;123:4311:5;;;;;;-1:-1:-1;;;;;123:4311:5;;;;;;4357:10;123:4311;;;;;;;;;;;;;;;;;;;;4300:18:0;2475:4;4300:18;4330:25;4300:18;3901:6;123:4311:5;3901:6:0;123:4311:5;;3901:22:0;123:4311:5;3901:6:0;123:4311:5;3901:22:0;123:4311:5;3810:120:0;;123:4311:5;;;-1:-1:-1;;;123:4311:5;;;;;;;;;;;;-1:-1:-1;;;123:4311:5;;;;;;;;;;;;;-1:-1:-1;;123:4311:5;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2673:47:0;;;:87;;;;123:4311:5;;;;;;;2673:87:0;-1:-1:-1;;;862:40:3;;-1:-1:-1;2673:87:0;;;123:4311:5;;;;-1:-1:-1;;;;;123:4311:5;;;;;;:::o;:::-;;;4118:22;;123:4311;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;4118:22;123:4311;;-1:-1:-1;;123:4311:5;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;123:4311:5;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;123:4311:5;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;123:4311:5;;;;;;;;-1:-1:-1;;123:4311:5;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;123:4311:5;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;-1:-1:-1;123:4311:5;;;;;-1:-1:-1;123:4311:5;;-1:-1:-1;123:4311:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;123:4311:5;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;123:4311:5;;;;;;;;;;;;-1:-1:-1;;;123:4311:5;;;;;;;;;;;;;;;-1:-1:-1;123:4311:5;;-1:-1:-1;123:4311:5;;;-1:-1:-1;123:4311:5;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;3199:103:0:-;2954:6;123:4311:5;;;;;;;;;;;735:10:2;123:4311:5;;;;;;;;;;3519:23:0;3515:108;;3199:103;:::o;3515:108::-;3565:47;;;2954:6;3565:47;735:10:2;3565:47:0;123:4311:5;;;;2954:6:0;3565:47;6179:316;123:4311:5;;;;;;;;;;;;-1:-1:-1;;;;;123:4311:5;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;123:4311:5;;;;;;;;;;;;;;;-1:-1:-1;;123:4311:5;;;;;735:10:2;;123:4311:5;;6370:40:0;;123:4311:5;6370:40:0;6347:4;6424:11;:::o;6272:217::-;6466:12;;123:4311:5;6466:12:0;:::o;6730:317::-;123:4311:5;;;;;;;;;;;;-1:-1:-1;;;;;123:4311:5;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;123:4311:5;;;;;;;;;;;;;;;-1:-1:-1;;123:4311:5;;;735:10:2;;123:4311:5;;6922:40:0;;123:4311:5;6922:40:0;123:4311:5;6976:11:0;:::o;3246:347:5:-;;123:4311;3422:3;123:4311;;;;;;3369:44;123:4311;;;3369:44;123:4311;3365:55;;;;;123:4311;;;;;;3446:47;123:4311;3369:44;123:4311;;;3446:44;:47;:::i;:::-;123:4311;;3369:44;123:4311;;;;;-1:-1:-1;;;;;123:4311:5;;;;;;3446:58;3442:110;;123:4311;;3350:13;;3442:110;3525:11;;;123:4311;3525:11;:::o;3365:55::-;;;;123:4311;3246:347;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "904400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"ADMIN_ROLE()": "307",
								"DEFAULT_ADMIN_ROLE()": "350",
								"DOCTOR_ROLE()": "546",
								"PATIENT_ROLE()": "373",
								"addPatientRecord(string)": "infinite",
								"assignRole(address,bytes32)": "35460",
								"emergencyAccess(uint256,string)": "infinite",
								"getPatientRecord(uint256)": "infinite",
								"getRoleAdmin(bytes32)": "2385",
								"grantAccess(uint256,address)": "infinite",
								"grantRole(bytes32,address)": "33333",
								"hasRole(bytes32,address)": "2660",
								"nextPatientId()": "2498",
								"patientRecords(uint256)": "infinite",
								"renounceRole(bytes32,address)": "28923",
								"revokeRole(bytes32,address)": "33616",
								"setEmergencyPin(uint256,string)": "infinite",
								"supportsInterface(bytes4)": "270",
								"updatePatientRecord(uint256,string)": "infinite"
							},
							"internal": {
								"isAuthorized(uint256,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 123,
									"end": 4434,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1068,
									"end": 1102,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1091,
									"end": 1101,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 1068,
									"end": 1102,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1068,
									"end": 1102,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1068,
									"end": 1102,
									"name": "tag",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1068,
									"end": 1102,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 286,
									"end": 311,
									"name": "PUSH",
									"source": 5,
									"value": "72606200FAC42B7DC86B75901D61ECFAB2A4A1A6EDED478B97A428094891ABED"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 3901,
									"end": 3923,
									"name": "PUSH",
									"source": 0,
									"value": "1269C68C28A67305F4A2D47532888D6C961251CFCB06C9CDB6066D32B24B321"
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 217,
									"end": 240,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 217,
									"end": 240,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 5886,
									"end": 5938,
									"name": "PUSH",
									"source": 0,
									"value": "BD79B86FFE0AB8E8776151514217CD7CACD52C909F66475C3AF44E129F0B00FF"
								},
								{
									"begin": 5886,
									"end": 5938,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 5886,
									"end": 5938,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 356,
									"end": 380,
									"name": "PUSH",
									"source": 5,
									"value": "AF1DAC7DEA2FD7F7738119CEC7DF099DFAD49AA9D2E7D17BA6B60F63AE7411F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 3901,
									"end": 3923,
									"name": "PUSH",
									"source": 0,
									"value": "DF1CB6F79B8687A60E91ACED08290A53CB47A179B80C0C7C836D1C923C9A5648"
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 217,
									"end": 240,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 217,
									"end": 240,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 5886,
									"end": 5938,
									"name": "PUSH",
									"source": 0,
									"value": "BD79B86FFE0AB8E8776151514217CD7CACD52C909F66475C3AF44E129F0B00FF"
								},
								{
									"begin": 5886,
									"end": 5938,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 5886,
									"end": 5938,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "RETURN",
									"source": 5
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "27AD65E758A22F2FE9F0D501DA4E2A54EB635546AB8210118501A36D81E3B048"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "PUSH",
									"source": 5,
									"value": "FF"
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "27AD65E758A22F2FE9F0D501DA4E2A54EB635546AB8210118501A36D81E3B048"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 735,
									"end": 745,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 217,
									"end": 240,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 6347,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6424,
									"end": 6435,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 123,
									"end": 4434,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6466,
									"end": 6478,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202100fcf8ecca15297d98360de5e56dbfac486eeee1e0e245405b6c4c77e2e11f64736f6c634300081a0033",
									".code": [
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "1FFC9A7"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "1D9486DE"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "248A9CA3"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "2F2FF15D"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "36568ABE"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "3C2BC6A1"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "65DD152C"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "75B238FC"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "91D14854"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "A217FDDF"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "AC5CB97D"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "B1131795"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "B38DEFF0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "B6314915"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "B9FFF11B"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "D3D188A1"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "D547741F"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "DBA45462"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "FEC331F2"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 356,
											"end": 380,
											"name": "PUSH",
											"source": 5,
											"value": "AF1DAC7DEA2FD7F7738119CEC7DF099DFAD49AA9D2E7D17BA6B60F63AE7411F"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 123,
											"end": 4434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1291,
											"end": 1305,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1269,
											"end": 1349,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1291,
											"end": 1305,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1291,
											"end": 1323,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1277,
											"end": 1287,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1277,
											"end": 1323,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1269,
											"end": 1349,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 1269,
											"end": 1349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1269,
											"end": 1349,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 1269,
											"end": 1349,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2062,
											"end": 2131,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 2083,
											"end": 2096,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2070,
											"end": 2096,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2070,
											"end": 2096,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2062,
											"end": 2131,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 2062,
											"end": 2131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2062,
											"end": 2131,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 2062,
											"end": 2131,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1291,
											"end": 1305,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2179,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2179,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 123,
											"end": 4434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2277,
											"end": 2323,
											"name": "PUSH",
											"source": 5,
											"value": "80568D98C5C4BE465F3F47EF6DA4B979FDC4CA568775898275584974A140F0F"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1291,
											"end": 1305,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2083,
											"end": 2096,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1291,
											"end": 1305,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2244,
											"end": 2259,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2205,
											"end": 2241,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2277,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2277,
											"end": 2323,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2277,
											"end": 2323,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2277,
											"end": 2323,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2277,
											"end": 2323,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2277,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 2277,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2277,
											"end": 2323,
											"name": "tag",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 2277,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2277,
											"end": 2323,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2277,
											"end": 2323,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2277,
											"end": 2323,
											"name": "LOG1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4118,
											"end": 4140,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4118,
											"end": 4140,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1291,
											"end": 1305,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2277,
											"end": 2323,
											"name": "PUSH",
											"source": 5,
											"value": "80568D98C5C4BE465F3F47EF6DA4B979FDC4CA568775898275584974A140F0F"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP9",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "F8"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2083,
											"end": 2096,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1291,
											"end": 1305,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP8",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 123,
											"end": 4434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4747,
											"end": 4773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 123,
											"end": 4434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2475,
											"end": 2479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 4747,
											"end": 4773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 4747,
											"end": 4773,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 606,
											"end": 661,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 606,
											"end": 661,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 606,
											"end": 661,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 606,
											"end": 661,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 606,
											"end": 661,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 606,
											"end": 661,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 606,
											"end": 661,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 606,
											"end": 661,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 606,
											"end": 661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 606,
											"end": 661,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 606,
											"end": 661,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 606,
											"end": 661,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 606,
											"end": 661,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 123,
											"end": 4434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3062,
											"end": 3094,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3048,
											"end": 3058,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3048,
											"end": 3094,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 3048,
											"end": 3134,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3048,
											"end": 3134,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3048,
											"end": 3134,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 3048,
											"end": 3134,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 3195,
											"end": 3230,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3195,
											"end": 3230,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 123,
											"end": 4434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 123,
											"end": 4434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "F"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2737BA1030BABA3437B934BD32B217"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3048,
											"end": 3134,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 3048,
											"end": 3134,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3048,
											"end": 3058,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3098,
											"end": 3134,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 3048,
											"end": 3058,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3098,
											"end": 3134,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3098,
											"end": 3134,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 3098,
											"end": 3134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3098,
											"end": 3134,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 3098,
											"end": 3134,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3048,
											"end": 3134,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 3048,
											"end": 3134,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 123,
											"end": 4434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1476,
											"end": 1486,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "1269C68C28A67305F4A2D47532888D6C961251CFCB06C9CDB6066D32B24B320"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1571,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 123,
											"end": 4434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "CALLDATACOPY",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1610,
											"end": 1829,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1610,
											"end": 1829,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1610,
											"end": 1829,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1476,
											"end": 1486,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1476,
											"end": 1486,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1610,
											"end": 1829,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1610,
											"end": 1829,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1610,
											"end": 1829,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1610,
											"end": 1829,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1610,
											"end": 1829,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1610,
											"end": 1829,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1610,
											"end": 1829,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1610,
											"end": 1829,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1802,
											"end": 1817,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1802,
											"end": 1817,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1582,
											"end": 1596,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1582,
											"end": 1596,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 123,
											"end": 4434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1582,
											"end": 1596,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1571,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1571,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1571,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1875,
											"end": 1927,
											"name": "PUSH",
											"source": 5,
											"value": "787C9AE7718043965D54A360CE99BA2770A327DB7605042C3BF617652F73962"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1582,
											"end": 1596,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1875,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1571,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1476,
											"end": 1486,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1476,
											"end": 1486,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1476,
											"end": 1486,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1476,
											"end": 1486,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1875,
											"end": 1927,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 1875,
											"end": 1927,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1875,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 1875,
											"end": 1927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1875,
											"end": 1927,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 1875,
											"end": 1927,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1875,
											"end": 1927,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1875,
											"end": 1927,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1875,
											"end": 1927,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1582,
											"end": 1596,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 123,
											"end": 4434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1582,
											"end": 1596,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "F8"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1571,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1582,
											"end": 1596,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 123,
											"end": 4434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "4E6F74206120726567697374657265642070617469656E742E00000000000000"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3865,
											"end": 3892,
											"name": "PUSH",
											"source": 5,
											"value": "77A8AB2EF0D4890818F6E3342F66CD90C0F63167CF0B1507A8EE9132C9E7EAF3"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 123,
											"end": 4434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1291,
											"end": 1305,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1269,
											"end": 1349,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1291,
											"end": 1305,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1291,
											"end": 1323,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1277,
											"end": 1287,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1277,
											"end": 1323,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1269,
											"end": 1349,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 1269,
											"end": 1349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1269,
											"end": 1349,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 1269,
											"end": 1349,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3708,
											"end": 3777,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 3729,
											"end": 3742,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3716,
											"end": 3742,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3716,
											"end": 3742,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 3708,
											"end": 3777,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 3708,
											"end": 3777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3708,
											"end": 3777,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 3708,
											"end": 3777,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3826,
											"end": 3848,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 3826,
											"end": 3848,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3826,
											"end": 3848,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3826,
											"end": 3848,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3826,
											"end": 3848,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3826,
											"end": 3848,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3826,
											"end": 3848,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MCOPY",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3826,
											"end": 3848,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3826,
											"end": 3848,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4118,
											"end": 4140,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4118,
											"end": 4140,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3826,
											"end": 3848,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3826,
											"end": 3848,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3826,
											"end": 3848,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3826,
											"end": 3848,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3826,
											"end": 3848,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3826,
											"end": 3848,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 3826,
											"end": 3848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3826,
											"end": 3848,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 3826,
											"end": 3848,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3816,
											"end": 3849,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3816,
											"end": 3849,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3788,
											"end": 3801,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3865,
											"end": 3892,
											"name": "LOG1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 726,
											"end": 754,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 286,
											"end": 311,
											"name": "PUSH",
											"source": 5,
											"value": "72606200FAC42B7DC86B75901D61ECFAB2A4A1A6EDED478B97A428094891ABED"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 123,
											"end": 4434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 217,
											"end": 240,
											"name": "PUSH",
											"source": 5,
											"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 123,
											"end": 4434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1269,
											"end": 1349,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1291,
											"end": 1323,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1277,
											"end": 1287,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1277,
											"end": 1323,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1269,
											"end": 1349,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 1269,
											"end": 1349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1269,
											"end": 1349,
											"name": "tag",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 1269,
											"end": 1349,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2439,
											"end": 2508,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 2460,
											"end": 2473,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2473,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2473,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2439,
											"end": 2508,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 2439,
											"end": 2508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2439,
											"end": 2508,
											"name": "tag",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 2439,
											"end": 2508,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "DF1CB6F79B8687A60E91ACED08290A53CB47A179B80C0C7C836D1C923C9A5647"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2616,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2675,
											"end": 2678,
											"name": "tag",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 2675,
											"end": 2678,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2473,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2622,
											"end": 2666,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2618,
											"end": 2673,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2618,
											"end": 2673,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2618,
											"end": 2673,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2618,
											"end": 2673,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 2618,
											"end": 2673,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2703,
											"end": 2750,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2473,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2703,
											"end": 2747,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2703,
											"end": 2750,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 2703,
											"end": 2750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2703,
											"end": 2750,
											"name": "tag",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 2703,
											"end": 2750,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2473,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2703,
											"end": 2761,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2616,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 2603,
											"end": 2616,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20B63932B0B23C9030BABA3437B934BD32B217"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "69"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2618,
											"end": 2673,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 2618,
											"end": 2673,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2618,
											"end": 2673,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2618,
											"end": 2673,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2473,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2809,
											"end": 2853,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2883,
											"end": 2917,
											"name": "PUSH",
											"source": 5,
											"value": "3C3A9147A1FC73DD51A32F4D10C43D457E8CB826EB6F35CAC6349EB965BA82B4"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 123,
											"end": 4434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2460,
											"end": 2473,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2883,
											"end": 2917,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "4E6F742061207265676973746572656420646F63746F722E0000000000000000"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 123,
											"end": 4434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4020,
											"end": 4089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 4041,
											"end": 4054,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4028,
											"end": 4054,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4028,
											"end": 4054,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 4020,
											"end": 4089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 4020,
											"end": 4089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4020,
											"end": 4089,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 4020,
											"end": 4089,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4118,
											"end": 4140,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 4118,
											"end": 4140,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4118,
											"end": 4140,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4118,
											"end": 4140,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4118,
											"end": 4140,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4118,
											"end": 4140,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4118,
											"end": 4140,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MCOPY",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4118,
											"end": 4140,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4118,
											"end": 4140,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4118,
											"end": 4140,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4118,
											"end": 4140,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 4118,
											"end": 4140,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4118,
											"end": 4140,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4118,
											"end": 4140,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4118,
											"end": 4140,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4118,
											"end": 4140,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4118,
											"end": 4140,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 4118,
											"end": 4140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4118,
											"end": 4140,
											"name": "tag",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 4118,
											"end": 4140,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4108,
											"end": 4141,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4108,
											"end": 4141,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4145,
											"end": 4158,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 4118,
											"end": 4140,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4108,
											"end": 4170,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4207,
											"end": 4221,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4118,
											"end": 4140,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 4145,
											"end": 4158,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4207,
											"end": 4242,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 123,
											"end": 4434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4118,
											"end": 4140,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "E"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "24B731B7B93932B1BA102824A717"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "91"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 123,
											"end": 4434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 5529,
											"end": 5566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "334BD919"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "E1"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4330,
											"end": 4355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 123,
											"end": 4434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 4330,
											"end": 4355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4357,
											"end": 4367,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "7D7FFB7A348E1C6A02869081A26547B49160DD3DF72D1D75A570EB9B698292EC"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 4330,
											"end": 4355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "D"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2737BA1030B71030B236B4B717"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "99"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7965DB0B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 862,
											"end": 902,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 862,
											"end": 902,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4118,
											"end": 4140,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4118,
											"end": 4140,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 4118,
											"end": 4140,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 123,
											"end": 4434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "CALLDATACOPY",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 123,
											"end": 4434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MCOPY",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "7F"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 123,
											"end": 4434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 123,
											"end": 4434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "POP",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "1E"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "50617469656E74207265636F726420646F6573206E6F742065786973742E0000"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2737BA103A3432903932B1B7B9321037BBB732B917"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "59"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 123,
											"end": 4434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3519,
											"end": 3542,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "E2517D3F"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6347,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "tag",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6466,
											"end": 6478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 6987,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3246,
											"end": 3593,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 3246,
											"end": 3593,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3246,
											"end": 3593,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3422,
											"end": 3425,
											"name": "tag",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 3422,
											"end": 3425,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3369,
											"end": 3413,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3369,
											"end": 3413,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3365,
											"end": 3420,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3365,
											"end": 3420,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 3365,
											"end": 3420,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3365,
											"end": 3420,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 3365,
											"end": 3420,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3446,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3369,
											"end": 3413,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3446,
											"end": 3490,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3446,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 3446,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3446,
											"end": 3493,
											"name": "tag",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 3446,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3369,
											"end": 3413,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3446,
											"end": 3504,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 3442,
											"end": 3552,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "297"
										},
										{
											"begin": 3442,
											"end": 3552,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3350,
											"end": 3363,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 3350,
											"end": 3363,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3442,
											"end": 3552,
											"name": "tag",
											"source": 5,
											"value": "297"
										},
										{
											"begin": 3442,
											"end": 3552,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3525,
											"end": 3536,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3525,
											"end": 3536,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3525,
											"end": 3536,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3525,
											"end": 3536,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3525,
											"end": 3536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3365,
											"end": 3420,
											"name": "tag",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 3365,
											"end": 3420,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3365,
											"end": 3420,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3365,
											"end": 3420,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3365,
											"end": 3420,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 123,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3246,
											"end": 3593,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3246,
											"end": 3593,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										}
									]
								},
								"27AD65E758A22F2FE9F0D501DA4E2A54EB635546AB8210118501A36D81E3B048": "7d7ffb7a348e1c6a02869081a26547b49160dd3df72d1d75a570eb9b698292ec",
								"CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8": "a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775"
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"BlockchainHealthRecords.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ADMIN_ROLE()": "75b238fc",
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"DOCTOR_ROLE()": "fec331f2",
							"PATIENT_ROLE()": "ac5cb97d",
							"addPatientRecord(string)": "b6314915",
							"assignRole(address,bytes32)": "1d9486de",
							"emergencyAccess(uint256,string)": "3c2bc6a1",
							"getPatientRecord(uint256)": "b9fff11b",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantAccess(uint256,address)": "65dd152c",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"nextPatientId()": "b1131795",
							"patientRecords(uint256)": "d3d188a1",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"setEmergencyPin(uint256,string)": "b38deff0",
							"supportsInterface(bytes4)": "01ffc9a7",
							"updatePatientRecord(uint256,string)": "dba45462"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"patientId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"doctor\",\"type\":\"address\"}],\"name\":\"AccessGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"patientId\",\"type\":\"uint256\"}],\"name\":\"EmergencyPinSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"patientId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"ipfsHash\",\"type\":\"string\"}],\"name\":\"PatientRecordAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"patientId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newIpfsHash\",\"type\":\"string\"}],\"name\":\"PatientRecordUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOCTOR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PATIENT_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_ipfsHash\",\"type\":\"string\"}],\"name\":\"addPatientRecord\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_role\",\"type\":\"bytes32\"}],\"name\":\"assignRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_patientId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_pin\",\"type\":\"string\"}],\"name\":\"emergencyAccess\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_patientId\",\"type\":\"uint256\"}],\"name\":\"getPatientRecord\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_patientId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_doctor\",\"type\":\"address\"}],\"name\":\"grantAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextPatientId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"patientRecords\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"patientId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"ipfsHash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_patientId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_pin\",\"type\":\"string\"}],\"name\":\"setEmergencyPin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_patientId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_newIpfsHash\",\"type\":\"string\"}],\"name\":\"updatePatientRecord\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BlockchainHealthRecords.sol\":\"BlockchainHealthRecords\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"BlockchainHealthRecords.sol\":{\"keccak256\":\"0xa7fbf80c82102370d63130d13b484d321a167f79b864106374a303802a06067d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0dc30287127fc4293c541256b9c752dde2afac8beb4622b3f7f3ca6d949e5f3f\",\"dweb:/ipfs/QmaKcKiAZ3HMhRGa5Yb3683RBfYdquPQdGJs4Y7zdwhBCP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "BlockchainHealthRecords.sol:BlockchainHealthRecords",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							},
							{
								"astId": 481,
								"contract": "BlockchainHealthRecords.sol:BlockchainHealthRecords",
								"label": "patientRecords",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_uint256,t_struct(PatientRecord)476_storage)"
							},
							{
								"astId": 485,
								"contract": "BlockchainHealthRecords.sol:BlockchainHealthRecords",
								"label": "emergencyPins",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_bytes32)"
							},
							{
								"astId": 487,
								"contract": "BlockchainHealthRecords.sol:BlockchainHealthRecords",
								"label": "nextPatientId",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_mapping(t_uint256,t_bytes32)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => bytes32)",
								"numberOfBytes": "32",
								"value": "t_bytes32"
							},
							"t_mapping(t_uint256,t_struct(PatientRecord)476_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct BlockchainHealthRecords.PatientRecord)",
								"numberOfBytes": "32",
								"value": "t_struct(PatientRecord)476_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(PatientRecord)476_storage": {
								"encoding": "inplace",
								"label": "struct BlockchainHealthRecords.PatientRecord",
								"members": [
									{
										"astId": 466,
										"contract": "BlockchainHealthRecords.sol:BlockchainHealthRecords",
										"label": "patientId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 468,
										"contract": "BlockchainHealthRecords.sol:BlockchainHealthRecords",
										"label": "owner",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 470,
										"contract": "BlockchainHealthRecords.sol:BlockchainHealthRecords",
										"label": "ipfsHash",
										"offset": 0,
										"slot": "2",
										"type": "t_string_storage"
									},
									{
										"astId": 473,
										"contract": "BlockchainHealthRecords.sol:BlockchainHealthRecords",
										"label": "authorizedDoctors",
										"offset": 0,
										"slot": "3",
										"type": "t_array(t_address)dyn_storage"
									},
									{
										"astId": 475,
										"contract": "BlockchainHealthRecords.sol:BlockchainHealthRecords",
										"label": "timestamp",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "160"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "BlockchainHealthRecords.sol:BlockchainHealthRecords",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "BlockchainHealthRecords.sol:BlockchainHealthRecords",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							408
						],
						"ERC165": [
							432
						],
						"IAccessControl": [
							378
						]
					},
					"id": 296,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 379,
							"src": "134:52:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 378,
										"src": "142:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 409,
							"src": "187:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 408,
										"src": "195:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 433,
							"src": "233:57:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 432,
										"src": "241:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 9,
										"name": "Context",
										"nameLocations": [
											"1988:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 408,
										"src": "1988:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1988:7:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "IAccessControl",
										"nameLocations": [
											"1997:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 378,
										"src": "1997:14:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:14:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "ERC165",
										"nameLocations": [
											"2013:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 432,
										"src": "2013:6:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "2013:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 8,
								"nodeType": "StructuredDocumentation",
								"src": "292:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 295,
							"linearizedBaseContracts": [
								295,
								432,
								444,
								378,
								408
							],
							"name": "AccessControl",
							"nameLocation": "1971:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 21,
									"members": [
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2085:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2052:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 17,
												"keyName": "account",
												"keyNameLocation": "2068:7:0",
												"keyType": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2052:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 16,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2079:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 20,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2110:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2102:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 19,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2102:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2033:8:0",
									"nodeType": "StructDefinition",
									"scope": 295,
									"src": "2026:100:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2174:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2132:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 25,
										"keyName": "role",
										"keyNameLocation": "2148:4:0",
										"keyType": {
											"id": 22,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2140:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2132:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 24,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 23,
												"name": "RoleData",
												"nameLocations": [
													"2156:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 21,
												"src": "2156:8:0"
											},
											"referencedDeclaration": 21,
											"src": "2156:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$21_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 29,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2211:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2187:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 27,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2187:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 28,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2232:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "2454:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 35,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "2475:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 34,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 93,
														"src": "2464:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2464:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "2464:16:0"
											},
											{
												"id": 38,
												"nodeType": "PlaceholderStatement",
												"src": "2490:1:0"
											}
										]
									},
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "2243:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 40,
									"name": "onlyRole",
									"nameLocation": "2431:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2448:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2440:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 31,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:14:0"
									},
									"src": "2422:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										431
									],
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "2656:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 54,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 49,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "2673:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 51,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "2693:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 50,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2688:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2688:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$378",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2709:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2688:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2673:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 57,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "2748:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 55,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2724:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$295_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2730:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 431,
															"src": "2724:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2724:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2673:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 48,
												"id": 60,
												"nodeType": "Return",
												"src": "2666:94:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "2504:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2574:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 45,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2632:8:0"
									},
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2599:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2592:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 42,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2592:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2591:20:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2650:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 46,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2650:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2649:6:0"
									},
									"scope": 295,
									"src": "2565:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										345
									],
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "2937:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 72,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "2954:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 74,
															"indexExpression": {
																"id": 73,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "2961:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 75,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2967:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 18,
														"src": "2954:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 77,
													"indexExpression": {
														"id": 76,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "2975:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2954:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 71,
												"id": 78,
												"nodeType": "Return",
												"src": "2947:36:0"
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "2773:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2863:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2879:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2871:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 64,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2871:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2893:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2885:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2885:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2870:31:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2931:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2931:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2930:6:0"
									},
									"scope": 295,
									"src": "2854:136:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "3255:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "3276:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 88,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 390,
																"src": "3282:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3282:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 114,
														"src": "3265:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "3265:30:0"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2996:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 93,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3208:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3227:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3219:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 82,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3218:14:0"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:0"
									},
									"scope": 295,
									"src": "3199:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "3505:124:0",
										"statements": [
											{
												"condition": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3519:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 102,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "3528:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 103,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "3534:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 101,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "3520:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3520:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 112,
												"nodeType": "IfStatement",
												"src": "3515:108:0",
												"trueBody": {
													"id": 111,
													"nodeType": "Block",
													"src": "3544:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 107,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 98,
																		"src": "3598:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 108,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 96,
																		"src": "3607:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 106,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "3565:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$",
																		"typeString": "function (address,bytes32) pure returns (error)"
																	}
																},
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3565:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 110,
															"nodeType": "RevertStatement",
															"src": "3558:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3308:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3441:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3460:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3452:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 95,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3474:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3466:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3466:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3451:31:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:0"
									},
									"scope": 295,
									"src": "3432:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										353
									],
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "3884:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 122,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "3901:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 124,
														"indexExpression": {
															"id": 123,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "3908:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3901:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$21_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 125,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3914:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 20,
													"src": "3901:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 121,
												"id": 126,
												"nodeType": "Return",
												"src": "3894:29:0"
											}
										]
									},
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "3635:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3819:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3840:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3832:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 116,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3831:14:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3875:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 119,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3875:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3874:9:0"
									},
									"scope": 295,
									"src": "3810:120:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										361
									],
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "4320:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 142,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4341:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 143,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "4347:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 141,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "4330:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4330:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "4330:25:0"
											}
										]
									},
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "3936:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 137,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4313:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 136,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4300:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4300:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 139,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 135,
												"name": "onlyRole",
												"nameLocations": [
													"4291:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4291:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4291:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4235:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4253:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4245:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 130,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4245:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4267:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4259:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4259:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4244:31:0"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4320:0:0"
									},
									"scope": 295,
									"src": "4226:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										369
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "4737:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 161,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4759:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 162,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "4765:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 160,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "4747:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4747:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "4747:26:0"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "4368:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 156,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4730:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 155,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4717:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4717:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 158,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 154,
												"name": "onlyRole",
												"nameLocations": [
													"4708:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4708:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4708:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4651:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4670:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4662:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 149,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4662:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4684:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4676:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4676:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4661:31:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4737:0:0"
									},
									"scope": 295,
									"src": "4642:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										377
									],
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "5407:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 174,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "5421:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 175,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "5443:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5443:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5421:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 182,
												"nodeType": "IfStatement",
												"src": "5417:102:0",
												"trueBody": {
													"id": 181,
													"nodeType": "Block",
													"src": "5457:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 178,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "5478:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5478:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 180,
															"nodeType": "RevertStatement",
															"src": "5471:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 184,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5541:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 185,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5547:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 183,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "5529:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5529:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "5529:37:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4786:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5337:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5358:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5350:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 168,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5350:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5372:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5364:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5364:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5349:42:0"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5407:0:0"
									},
									"scope": 295,
									"src": "5328:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "5771:174:0",
										"statements": [
											{
												"assignments": [
													198
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5789:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 216,
														"src": "5781:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 197,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5781:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"arguments": [
														{
															"id": 200,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5822:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 199,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "5809:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5809:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5781:46:0"
											},
											{
												"expression": {
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 203,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "5837:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 205,
															"indexExpression": {
																"id": 204,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 192,
																"src": "5844:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5837:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 206,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5850:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 20,
														"src": "5837:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 207,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "5862:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5837:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "5837:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 211,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5903:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 212,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "5909:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 213,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "5928:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 210,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "5886:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5886:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "EmitStatement",
												"src": "5881:57:0"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "5579:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5707:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5729:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5721:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 191,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5743:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5735:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 193,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5735:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5720:33:0"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5771:0:0"
									},
									"scope": 295,
									"src": "5698:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "6262:233:0",
										"statements": [
											{
												"condition": {
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6276:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 228,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "6285:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 229,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 222,
																"src": "6291:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 227,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "6277:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6277:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 253,
													"nodeType": "Block",
													"src": "6452:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6473:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 226,
															"id": 252,
															"nodeType": "Return",
															"src": "6466:12:0"
														}
													]
												},
												"id": 254,
												"nodeType": "IfStatement",
												"src": "6272:217:0",
												"trueBody": {
													"id": 250,
													"nodeType": "Block",
													"src": "6301:145:0",
													"statements": [
														{
															"expression": {
																"id": 239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 232,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6315:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 234,
																			"indexExpression": {
																				"id": 233,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 220,
																				"src": "6322:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6315:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 235,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6328:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6315:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 237,
																	"indexExpression": {
																		"id": 236,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6336:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6315:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6347:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6315:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 240,
															"nodeType": "ExpressionStatement",
															"src": "6315:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 242,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 220,
																		"src": "6382:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 243,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6388:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 244,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 390,
																			"src": "6397:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6397:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 241,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 326,
																	"src": "6370:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6370:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 247,
															"nodeType": "EmitStatement",
															"src": "6365:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6431:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 226,
															"id": 249,
															"nodeType": "Return",
															"src": "6424:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "5951:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6188:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6207:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6199:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 219,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6221:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6213:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6213:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6198:31:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6256:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6256:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6255:6:0"
									},
									"scope": 295,
									"src": "6179:316:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "6814:233:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 267,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "6836:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 268,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "6842:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 266,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "6828:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6828:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 291,
													"nodeType": "Block",
													"src": "7004:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7025:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 265,
															"id": 290,
															"nodeType": "Return",
															"src": "7018:12:0"
														}
													]
												},
												"id": 292,
												"nodeType": "IfStatement",
												"src": "6824:217:0",
												"trueBody": {
													"id": 288,
													"nodeType": "Block",
													"src": "6852:146:0",
													"statements": [
														{
															"expression": {
																"id": 277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 270,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6866:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 272,
																			"indexExpression": {
																				"id": 271,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 259,
																				"src": "6873:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6866:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 273,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6879:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6866:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 275,
																	"indexExpression": {
																		"id": 274,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6887:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6866:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6898:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6866:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 278,
															"nodeType": "ExpressionStatement",
															"src": "6866:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 280,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 259,
																		"src": "6934:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 281,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6940:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 282,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 390,
																			"src": "6949:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6949:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 279,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "6922:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6922:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 285,
															"nodeType": "EmitStatement",
															"src": "6917:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6983:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 265,
															"id": 287,
															"nodeType": "Return",
															"src": "6976:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "6501:224:0",
										"text": " @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6739:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6759:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6751:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 258,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6751:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6773:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6765:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6765:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6750:31:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6808:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6808:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6807:6:0"
									},
									"scope": 295,
									"src": "6730:317:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 296,
							"src": "1953:5096:0",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "108:6942:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							378
						]
					},
					"id": 379,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 297,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 298,
								"nodeType": "StructuredDocumentation",
								"src": "135:90:1",
								"text": " @dev External interface of AccessControl declared to support ERC-165 detection."
							},
							"fullyImplemented": false,
							"id": 378,
							"linearizedBaseContracts": [
								378
							],
							"name": "IAccessControl",
							"nameLocation": "236:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "257:56:1",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 305,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "324:32:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "365:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "357:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "357:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "382:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "374:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 302,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "374:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "356:37:1"
									},
									"src": "318:76:1"
								},
								{
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "400:148:1",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 308,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "559:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "587:2:1"
									},
									"src": "553:37:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "596:254:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 317,
									"name": "RoleAdminChanged",
									"nameLocation": "861:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "894:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "878:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 310,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "916:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "900:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 312,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "951:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "935:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 314,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:87:1"
									},
									"src": "855:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "971:295:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 326,
									"name": "RoleGranted",
									"nameLocation": "1277:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1305:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1289:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 319,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1327:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1311:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1311:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1352:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1336:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1288:71:1"
									},
									"src": "1271:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "1366:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 335,
									"name": "RoleRevoked",
									"nameLocation": "1652:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1680:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1664:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 328,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1702:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1686:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1711:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:71:1"
									},
									"src": "1646:89:1"
								},
								{
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "1741:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 345,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1831:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1847:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1839:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 337,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1861:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1853:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:1"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1893:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 342,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1893:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:6:1"
									},
									"scope": 378,
									"src": "1822:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1905:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 353,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2103:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2124:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2116:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 347,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2116:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2115:14:1"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2153:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 350,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2153:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2152:9:1"
									},
									"scope": 378,
									"src": "2094:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "2168:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 361,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2421:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2439:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2431:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 355,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2431:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2453:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2445:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:31:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:0:1"
									},
									"scope": 378,
									"src": "2412:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "2477:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 369,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2714:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2733:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2725:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 363,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2747:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2739:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2724:31:1"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2764:0:1"
									},
									"scope": 378,
									"src": "2705:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "2771:491:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3276:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3297:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3289:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 371,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3311:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3303:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3303:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3288:42:1"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3339:0:1"
									},
									"scope": 378,
									"src": "3267:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 379,
							"src": "226:3116:1",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "109:3234:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							408
						]
					},
					"id": 409,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 380,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 381,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 408,
							"linearizedBaseContracts": [
								408
							],
							"name": "Context",
							"nameLocation": "642:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 389,
										"nodeType": "Block",
										"src": "718:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 386,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 385,
												"id": 388,
												"nodeType": "Return",
												"src": "728:17:2"
											}
										]
									},
									"id": 390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:2"
									},
									"returnParameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "709:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:2"
									},
									"scope": 408,
									"src": "656:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 398,
										"nodeType": "Block",
										"src": "825:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 395,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 394,
												"id": 397,
												"nodeType": "Return",
												"src": "835:15:2"
											}
										]
									},
									"id": 399,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "809:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 392,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:2"
									},
									"scope": 408,
									"src": "758:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 406,
										"nodeType": "Block",
										"src": "935:25:2",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 403,
												"id": 405,
												"nodeType": "Return",
												"src": "945:8:2"
											}
										]
									},
									"id": 407,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:2"
									},
									"returnParameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:2"
									},
									"scope": 408,
									"src": "863:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 409,
							"src": "624:338:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							432
						],
						"IERC165": [
							444
						]
					},
					"id": 433,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 410,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 412,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 433,
							"sourceUnit": 445,
							"src": "140:38:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 411,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 444,
										"src": "148:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 414,
										"name": "IERC165",
										"nameLocations": [
											"688:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 444,
										"src": "688:7:3"
									},
									"id": 415,
									"nodeType": "InheritanceSpecifier",
									"src": "688:7:3"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 413,
								"nodeType": "StructuredDocumentation",
								"src": "180:479:3",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 432,
							"linearizedBaseContracts": [
								432,
								444
							],
							"name": "ERC165",
							"nameLocation": "678:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										443
									],
									"body": {
										"id": 430,
										"nodeType": "Block",
										"src": "845:64:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 423,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 418,
														"src": "862:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 425,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 444,
																	"src": "882:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$444_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$444_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 424,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "877:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 426,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "877:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$444",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 427,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "891:11:3",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "877:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "862:40:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 422,
												"id": 429,
												"nodeType": "Return",
												"src": "855:47:3"
											}
										]
									},
									"documentation": {
										"id": 416,
										"nodeType": "StructuredDocumentation",
										"src": "702:56:3",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 431,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "772:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "797:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "790:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 417,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "790:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "789:20:3"
									},
									"returnParameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "839:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 420,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "839:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "838:6:3"
									},
									"scope": 432,
									"src": "763:146:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 433,
							"src": "660:251:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:798:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							444
						]
					},
					"id": 445,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 434,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 435,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:4",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 444,
							"linearizedBaseContracts": [
								444
							],
							"name": "IERC165",
							"nameLocation": "432:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 436,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:4",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 443,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "818:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 437,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:4"
									},
									"returnParameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "861:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 440,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:4"
									},
									"scope": 444,
									"src": "791:76:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 445,
							"src": "422:447:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:4"
				},
				"id": 4
			},
			"BlockchainHealthRecords.sol": {
				"ast": {
					"absolutePath": "BlockchainHealthRecords.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"BlockchainHealthRecords": [
							862
						],
						"Context": [
							408
						],
						"ERC165": [
							432
						],
						"IAccessControl": [
							378
						]
					},
					"id": 863,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 446,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".26"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 447,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 863,
							"sourceUnit": 296,
							"src": "61:58:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 448,
										"name": "AccessControl",
										"nameLocations": [
											"159:13:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 295,
										"src": "159:13:5"
									},
									"id": 449,
									"nodeType": "InheritanceSpecifier",
									"src": "159:13:5"
								}
							],
							"canonicalName": "BlockchainHealthRecords",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 862,
							"linearizedBaseContracts": [
								862,
								295,
								432,
								444,
								378,
								408
							],
							"name": "BlockchainHealthRecords",
							"nameLocation": "132:23:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "75b238fc",
									"id": 454,
									"mutability": "constant",
									"name": "ADMIN_ROLE",
									"nameLocation": "204:10:5",
									"nodeType": "VariableDeclaration",
									"scope": 862,
									"src": "180:60:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 450,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "180:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "41444d494e5f524f4c45",
												"id": 452,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "227:12:5",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
													"typeString": "literal_string \"ADMIN_ROLE\""
												},
												"value": "ADMIN_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
													"typeString": "literal_string \"ADMIN_ROLE\""
												}
											],
											"id": 451,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "217:9:5",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 453,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "217:23:5",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "ac5cb97d",
									"id": 459,
									"mutability": "constant",
									"name": "PATIENT_ROLE",
									"nameLocation": "271:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 862,
									"src": "247:64:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 455,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "247:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "50415449454e545f524f4c45",
												"id": 457,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "296:14:5",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_72606200fac42b7dc86b75901d61ecfab2a4a1a6eded478b97a428094891abed",
													"typeString": "literal_string \"PATIENT_ROLE\""
												},
												"value": "PATIENT_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_72606200fac42b7dc86b75901d61ecfab2a4a1a6eded478b97a428094891abed",
													"typeString": "literal_string \"PATIENT_ROLE\""
												}
											],
											"id": 456,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "286:9:5",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 458,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "286:25:5",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "fec331f2",
									"id": 464,
									"mutability": "constant",
									"name": "DOCTOR_ROLE",
									"nameLocation": "342:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 862,
									"src": "318:62:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 460,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "318:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "444f43544f525f524f4c45",
												"id": 462,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "366:13:5",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_0af1dac7dea2fd7f7738119cec7df099dfad49aa9d2e7d17ba6b60f63ae7411f",
													"typeString": "literal_string \"DOCTOR_ROLE\""
												},
												"value": "DOCTOR_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_0af1dac7dea2fd7f7738119cec7df099dfad49aa9d2e7d17ba6b60f63ae7411f",
													"typeString": "literal_string \"DOCTOR_ROLE\""
												}
											],
											"id": 461,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "356:9:5",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 463,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "356:24:5",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "BlockchainHealthRecords.PatientRecord",
									"id": 476,
									"members": [
										{
											"constant": false,
											"id": 466,
											"mutability": "mutable",
											"name": "patientId",
											"nameLocation": "429:9:5",
											"nodeType": "VariableDeclaration",
											"scope": 476,
											"src": "421:17:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 465,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "421:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 468,
											"mutability": "mutable",
											"name": "owner",
											"nameLocation": "457:5:5",
											"nodeType": "VariableDeclaration",
											"scope": 476,
											"src": "449:13:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 467,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "449:7:5",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 470,
											"mutability": "mutable",
											"name": "ipfsHash",
											"nameLocation": "480:8:5",
											"nodeType": "VariableDeclaration",
											"scope": 476,
											"src": "473:15:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 469,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "473:6:5",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 473,
											"mutability": "mutable",
											"name": "authorizedDoctors",
											"nameLocation": "545:17:5",
											"nodeType": "VariableDeclaration",
											"scope": 476,
											"src": "535:27:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
												"typeString": "address[]"
											},
											"typeName": {
												"baseType": {
													"id": 471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "535:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 472,
												"nodeType": "ArrayTypeName",
												"src": "535:9:5",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 475,
											"mutability": "mutable",
											"name": "timestamp",
											"nameLocation": "581:9:5",
											"nodeType": "VariableDeclaration",
											"scope": 476,
											"src": "573:17:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 474,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "573:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PatientRecord",
									"nameLocation": "396:13:5",
									"nodeType": "StructDefinition",
									"scope": 862,
									"src": "389:209:5",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d3d188a1",
									"id": 481,
									"mutability": "mutable",
									"name": "patientRecords",
									"nameLocation": "647:14:5",
									"nodeType": "VariableDeclaration",
									"scope": 862,
									"src": "606:55:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PatientRecord_$476_storage_$",
										"typeString": "mapping(uint256 => struct BlockchainHealthRecords.PatientRecord)"
									},
									"typeName": {
										"id": 480,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 477,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "614:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "606:33:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PatientRecord_$476_storage_$",
											"typeString": "mapping(uint256 => struct BlockchainHealthRecords.PatientRecord)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 479,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 478,
												"name": "PatientRecord",
												"nameLocations": [
													"625:13:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 476,
												"src": "625:13:5"
											},
											"referencedDeclaration": 476,
											"src": "625:13:5",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_PatientRecord_$476_storage_ptr",
												"typeString": "struct BlockchainHealthRecords.PatientRecord"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 485,
									"mutability": "mutable",
									"name": "emergencyPins",
									"nameLocation": "704:13:5",
									"nodeType": "VariableDeclaration",
									"scope": 862,
									"src": "668:49:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
										"typeString": "mapping(uint256 => bytes32)"
									},
									"typeName": {
										"id": 484,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 482,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "676:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "668:27:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
											"typeString": "mapping(uint256 => bytes32)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 483,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "687:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "b1131795",
									"id": 487,
									"mutability": "mutable",
									"name": "nextPatientId",
									"nameLocation": "741:13:5",
									"nodeType": "VariableDeclaration",
									"scope": 862,
									"src": "726:28:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 486,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "726:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "0787c9ae7718043965d54a360ce99ba2770a327db7605042c3bf617652f73962",
									"id": 495,
									"name": "PatientRecordAdded",
									"nameLocation": "769:18:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"indexed": false,
												"mutability": "mutable",
												"name": "patientId",
												"nameLocation": "796:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "788:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "788:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 491,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "823:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "807:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 490,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "807:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 493,
												"indexed": false,
												"mutability": "mutable",
												"name": "ipfsHash",
												"nameLocation": "837:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "830:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 492,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "830:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "787:59:5"
									},
									"src": "763:84:5"
								},
								{
									"anonymous": false,
									"eventSelector": "080568d98c5c4be465f3f47ef6da4b979fdc4ca568775898275584974a140f0f",
									"id": 501,
									"name": "PatientRecordUpdated",
									"nameLocation": "859:20:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"indexed": false,
												"mutability": "mutable",
												"name": "patientId",
												"nameLocation": "888:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "880:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "880:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 499,
												"indexed": false,
												"mutability": "mutable",
												"name": "newIpfsHash",
												"nameLocation": "906:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "899:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 498,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "899:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "879:39:5"
									},
									"src": "853:66:5"
								},
								{
									"anonymous": false,
									"eventSelector": "3c3a9147a1fc73dd51a32f4d10c43d457e8cb826eb6f35cac6349eb965ba82b4",
									"id": 507,
									"name": "AccessGranted",
									"nameLocation": "931:13:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"indexed": false,
												"mutability": "mutable",
												"name": "patientId",
												"nameLocation": "953:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "945:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "945:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 505,
												"indexed": true,
												"mutability": "mutable",
												"name": "doctor",
												"nameLocation": "980:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "964:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "964:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "944:43:5"
									},
									"src": "925:63:5"
								},
								{
									"anonymous": false,
									"eventSelector": "77a8ab2ef0d4890818f6e3342f66cd90c0f63167cf0b1507a8ee9132c9e7eaf3",
									"id": 511,
									"name": "EmergencyPinSet",
									"nameLocation": "1000:15:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"indexed": false,
												"mutability": "mutable",
												"name": "patientId",
												"nameLocation": "1024:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "1016:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 508,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1016:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1015:19:5"
									},
									"src": "994:41:5"
								},
								{
									"body": {
										"id": 530,
										"nodeType": "Block",
										"src": "1057:152:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 454,
															"src": "1079:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 516,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1091:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 517,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1095:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1091:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 514,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "1068:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1068:34:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 519,
												"nodeType": "ExpressionStatement",
												"src": "1068:34:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 521,
															"name": "PATIENT_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "1127:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 522,
															"name": "ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 454,
															"src": "1141:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 520,
														"name": "_setRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 217,
														"src": "1113:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32)"
														}
													},
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1113:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 524,
												"nodeType": "ExpressionStatement",
												"src": "1113:39:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 526,
															"name": "DOCTOR_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "1177:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 527,
															"name": "ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 454,
															"src": "1190:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 525,
														"name": "_setRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 217,
														"src": "1163:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32)"
														}
													},
													"id": 528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1163:38:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 529,
												"nodeType": "ExpressionStatement",
												"src": "1163:38:5"
											}
										]
									},
									"id": 531,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1054:2:5"
									},
									"returnParameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1057:0:5"
									},
									"scope": 862,
									"src": "1043:166:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 547,
										"nodeType": "Block",
										"src": "1258:111:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 542,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 536,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1277:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 537,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1281:6:5",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1277:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 538,
																		"name": "patientRecords",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 481,
																		"src": "1291:14:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PatientRecord_$476_storage_$",
																			"typeString": "mapping(uint256 => struct BlockchainHealthRecords.PatientRecord storage ref)"
																		}
																	},
																	"id": 540,
																	"indexExpression": {
																		"id": 539,
																		"name": "_patientId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 533,
																		"src": "1306:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1291:26:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PatientRecord_$476_storage",
																		"typeString": "struct BlockchainHealthRecords.PatientRecord storage ref"
																	}
																},
																"id": 541,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1318:5:5",
																"memberName": "owner",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 468,
																"src": "1291:32:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1277:46:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420746865207265636f7264206f776e65722e",
															"id": 543,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1325:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_12854ca21a2a5835d11329d613a9f5a36deda109c06503d0014c11bd06ce77d5",
																"typeString": "literal_string \"Not the record owner.\""
															},
															"value": "Not the record owner."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_12854ca21a2a5835d11329d613a9f5a36deda109c06503d0014c11bd06ce77d5",
																"typeString": "literal_string \"Not the record owner.\""
															}
														],
														"id": 535,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1269:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1269:80:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 545,
												"nodeType": "ExpressionStatement",
												"src": "1269:80:5"
											},
											{
												"id": 546,
												"nodeType": "PlaceholderStatement",
												"src": "1360:1:5"
											}
										]
									},
									"id": 548,
									"name": "onlyPatient",
									"nameLocation": "1226:11:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "_patientId",
												"nameLocation": "1246:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "1238:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1238:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1237:20:5"
									},
									"src": "1217:152:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 594,
										"nodeType": "Block",
										"src": "1435:500:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 555,
																	"name": "PATIENT_ROLE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 459,
																	"src": "1462:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 556,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1476:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 557,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1480:6:5",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1476:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 554,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "1454:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1454:33:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f74206120726567697374657265642070617469656e742e",
															"id": 559,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1489:27:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_311c78ca0d89e861441736a8cfd81826141a518b590711a007e2613a4e937757",
																"typeString": "literal_string \"Not a registered patient.\""
															},
															"value": "Not a registered patient."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_311c78ca0d89e861441736a8cfd81826141a518b590711a007e2613a4e937757",
																"typeString": "literal_string \"Not a registered patient.\""
															}
														],
														"id": 553,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1446:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1446:71:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 561,
												"nodeType": "ExpressionStatement",
												"src": "1446:71:5"
											},
											{
												"assignments": [
													563
												],
												"declarations": [
													{
														"constant": false,
														"id": 563,
														"mutability": "mutable",
														"name": "patientId",
														"nameLocation": "1546:9:5",
														"nodeType": "VariableDeclaration",
														"scope": 594,
														"src": "1538:17:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 562,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1538:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 565,
												"initialValue": {
													"id": 564,
													"name": "nextPatientId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 487,
													"src": "1558:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1538:33:5"
											},
											{
												"expression": {
													"id": 582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 566,
															"name": "patientRecords",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "1582:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PatientRecord_$476_storage_$",
																"typeString": "mapping(uint256 => struct BlockchainHealthRecords.PatientRecord storage ref)"
															}
														},
														"id": 568,
														"indexExpression": {
															"id": 567,
															"name": "patientId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 563,
															"src": "1597:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1582:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PatientRecord_$476_storage",
															"typeString": "struct BlockchainHealthRecords.PatientRecord storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 570,
																"name": "patientId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 563,
																"src": "1650:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 571,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1681:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1685:6:5",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1681:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 573,
																"name": "_ipfsHash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 550,
																"src": "1716:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 577,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1774:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 576,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "NewExpression",
																	"src": "1759:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
																		"typeString": "function (uint256) pure returns (address[] memory)"
																	},
																	"typeName": {
																		"baseType": {
																			"id": 574,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1763:7:5",
																			"stateMutability": "nonpayable",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 575,
																		"nodeType": "ArrayTypeName",
																		"src": "1763:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																			"typeString": "address[]"
																		}
																	}
																},
																"id": 578,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1759:17:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															{
																"expression": {
																	"id": 579,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1802:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1808:9:5",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1802:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 569,
															"name": "PatientRecord",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 476,
															"src": "1610:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_PatientRecord_$476_storage_ptr_$",
																"typeString": "type(struct BlockchainHealthRecords.PatientRecord storage pointer)"
															}
														},
														"id": 581,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"1639:9:5",
															"1674:5:5",
															"1706:8:5",
															"1740:17:5",
															"1791:9:5"
														],
														"names": [
															"patientId",
															"owner",
															"ipfsHash",
															"authorizedDoctors",
															"timestamp"
														],
														"nodeType": "FunctionCall",
														"src": "1610:219:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PatientRecord_$476_memory_ptr",
															"typeString": "struct BlockchainHealthRecords.PatientRecord memory"
														}
													},
													"src": "1582:247:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PatientRecord_$476_storage",
														"typeString": "struct BlockchainHealthRecords.PatientRecord storage ref"
													}
												},
												"id": 583,
												"nodeType": "ExpressionStatement",
												"src": "1582:247:5"
											},
											{
												"expression": {
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "1842:15:5",
													"subExpression": {
														"id": 584,
														"name": "nextPatientId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "1842:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 586,
												"nodeType": "ExpressionStatement",
												"src": "1842:15:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 588,
															"name": "patientId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 563,
															"src": "1894:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 589,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1905:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 590,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1909:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1905:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 591,
															"name": "_ipfsHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "1917:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 587,
														"name": "PatientRecordAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 495,
														"src": "1875:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,address,string memory)"
														}
													},
													"id": 592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1875:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 593,
												"nodeType": "EmitStatement",
												"src": "1870:57:5"
											}
										]
									},
									"functionSelector": "b6314915",
									"id": 595,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addPatientRecord",
									"nameLocation": "1386:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "_ipfsHash",
												"nameLocation": "1417:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "1403:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 549,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1403:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1402:25:5"
									},
									"returnParameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1435:0:5"
									},
									"scope": 862,
									"src": "1377:558:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 632,
										"nodeType": "Block",
										"src": "2051:280:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 608,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 606,
																"name": "_patientId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 597,
																"src": "2070:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 607,
																"name": "nextPatientId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 487,
																"src": "2083:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2070:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50617469656e74207265636f726420646f6573206e6f742065786973742e",
															"id": 609,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2098:32:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a03f0f1663b5c7e16ec3d5e4c3b1daa0bf8c654ceace410eb5e18c71eb6e6202",
																"typeString": "literal_string \"Patient record does not exist.\""
															},
															"value": "Patient record does not exist."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a03f0f1663b5c7e16ec3d5e4c3b1daa0bf8c654ceace410eb5e18c71eb6e6202",
																"typeString": "literal_string \"Patient record does not exist.\""
															}
														],
														"id": 605,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2062:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2062:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 611,
												"nodeType": "ExpressionStatement",
												"src": "2062:69:5"
											},
											{
												"expression": {
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 612,
																"name": "patientRecords",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 481,
																"src": "2144:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PatientRecord_$476_storage_$",
																	"typeString": "mapping(uint256 => struct BlockchainHealthRecords.PatientRecord storage ref)"
																}
															},
															"id": 614,
															"indexExpression": {
																"id": 613,
																"name": "_patientId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 597,
																"src": "2159:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2144:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PatientRecord_$476_storage",
																"typeString": "struct BlockchainHealthRecords.PatientRecord storage ref"
															}
														},
														"id": 615,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2171:8:5",
														"memberName": "ipfsHash",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 470,
														"src": "2144:35:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 616,
														"name": "_newIpfsHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 599,
														"src": "2182:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2144:50:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 618,
												"nodeType": "ExpressionStatement",
												"src": "2144:50:5"
											},
											{
												"expression": {
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 619,
																"name": "patientRecords",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 481,
																"src": "2205:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PatientRecord_$476_storage_$",
																	"typeString": "mapping(uint256 => struct BlockchainHealthRecords.PatientRecord storage ref)"
																}
															},
															"id": 621,
															"indexExpression": {
																"id": 620,
																"name": "_patientId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 597,
																"src": "2220:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2205:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PatientRecord_$476_storage",
																"typeString": "struct BlockchainHealthRecords.PatientRecord storage ref"
															}
														},
														"id": 622,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2232:9:5",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 475,
														"src": "2205:36:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 623,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2244:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2250:9:5",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2244:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2205:54:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 626,
												"nodeType": "ExpressionStatement",
												"src": "2205:54:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 628,
															"name": "_patientId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 597,
															"src": "2298:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 629,
															"name": "_newIpfsHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 599,
															"src": "2310:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 627,
														"name": "PatientRecordUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "2277:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,string memory)"
														}
													},
													"id": 630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2277:46:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 631,
												"nodeType": "EmitStatement",
												"src": "2272:51:5"
											}
										]
									},
									"functionSelector": "dba45462",
									"id": 633,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 602,
													"name": "_patientId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 597,
													"src": "2039:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 603,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 601,
												"name": "onlyPatient",
												"nameLocations": [
													"2027:11:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 548,
												"src": "2027:11:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "2027:23:5"
										}
									],
									"name": "updatePatientRecord",
									"nameLocation": "1952:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "_patientId",
												"nameLocation": "1980:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "1972:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 596,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1972:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "_newIpfsHash",
												"nameLocation": "2006:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "1992:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 598,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1992:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1971:48:5"
									},
									"returnParameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2051:0:5"
									},
									"scope": 862,
									"src": "1943:388:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 699,
										"nodeType": "Block",
										"src": "2428:497:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 646,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 644,
																"name": "_patientId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 635,
																"src": "2447:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 645,
																"name": "nextPatientId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 487,
																"src": "2460:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2447:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50617469656e74207265636f726420646f6573206e6f742065786973742e",
															"id": 647,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2475:32:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a03f0f1663b5c7e16ec3d5e4c3b1daa0bf8c654ceace410eb5e18c71eb6e6202",
																"typeString": "literal_string \"Patient record does not exist.\""
															},
															"value": "Patient record does not exist."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a03f0f1663b5c7e16ec3d5e4c3b1daa0bf8c654ceace410eb5e18c71eb6e6202",
																"typeString": "literal_string \"Patient record does not exist.\""
															}
														],
														"id": 643,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2439:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2439:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 649,
												"nodeType": "ExpressionStatement",
												"src": "2439:69:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 652,
																	"name": "DOCTOR_ROLE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 464,
																	"src": "2535:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 653,
																	"name": "_doctor",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 637,
																	"src": "2548:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 651,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "2527:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 654,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2527:29:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f742061207265676973746572656420646f63746f722e",
															"id": 655,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2558:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_18bf8ff470e0853116136aea2e93b80f6590348640de5d94b66fe20ff0a453a5",
																"typeString": "literal_string \"Not a registered doctor.\""
															},
															"value": "Not a registered doctor."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_18bf8ff470e0853116136aea2e93b80f6590348640de5d94b66fe20ff0a453a5",
																"typeString": "literal_string \"Not a registered doctor.\""
															}
														],
														"id": 650,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2519:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2519:66:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 657,
												"nodeType": "ExpressionStatement",
												"src": "2519:66:5"
											},
											{
												"body": {
													"id": 684,
													"nodeType": "Block",
													"src": "2680:117:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 680,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"expression": {
																					"baseExpression": {
																						"id": 673,
																						"name": "patientRecords",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 481,
																						"src": "2703:14:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PatientRecord_$476_storage_$",
																							"typeString": "mapping(uint256 => struct BlockchainHealthRecords.PatientRecord storage ref)"
																						}
																					},
																					"id": 675,
																					"indexExpression": {
																						"id": 674,
																						"name": "_patientId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 635,
																						"src": "2718:10:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2703:26:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PatientRecord_$476_storage",
																						"typeString": "struct BlockchainHealthRecords.PatientRecord storage ref"
																					}
																				},
																				"id": 676,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2730:17:5",
																				"memberName": "authorizedDoctors",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 473,
																				"src": "2703:44:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_storage",
																					"typeString": "address[] storage ref"
																				}
																			},
																			"id": 678,
																			"indexExpression": {
																				"id": 677,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 659,
																				"src": "2748:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2703:47:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 679,
																			"name": "_doctor",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 637,
																			"src": "2754:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "2703:58:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "416c726561647920617574686f72697a65642e",
																		"id": 681,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2763:21:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_0d5feefd3a4c5ce2e1741d935544286d23fcd4511a6a090413a6442a39a4c550",
																			"typeString": "literal_string \"Already authorized.\""
																		},
																		"value": "Already authorized."
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_0d5feefd3a4c5ce2e1741d935544286d23fcd4511a6a090413a6442a39a4c550",
																			"typeString": "literal_string \"Already authorized.\""
																		}
																	],
																	"id": 672,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "2695:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 682,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2695:90:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 683,
															"nodeType": "ExpressionStatement",
															"src": "2695:90:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 662,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 659,
														"src": "2618:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"expression": {
																"baseExpression": {
																	"id": 663,
																	"name": "patientRecords",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 481,
																	"src": "2622:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PatientRecord_$476_storage_$",
																		"typeString": "mapping(uint256 => struct BlockchainHealthRecords.PatientRecord storage ref)"
																	}
																},
																"id": 665,
																"indexExpression": {
																	"id": 664,
																	"name": "_patientId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 635,
																	"src": "2637:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2622:26:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PatientRecord_$476_storage",
																	"typeString": "struct BlockchainHealthRecords.PatientRecord storage ref"
																}
															},
															"id": 666,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2649:17:5",
															"memberName": "authorizedDoctors",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 473,
															"src": "2622:44:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 667,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2667:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2622:51:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2618:55:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 685,
												"initializationExpression": {
													"assignments": [
														659
													],
													"declarations": [
														{
															"constant": false,
															"id": 659,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2611:1:5",
															"nodeType": "VariableDeclaration",
															"scope": 685,
															"src": "2603:9:5",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 658,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2603:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 661,
													"initialValue": {
														"hexValue": "30",
														"id": 660,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2615:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2603:13:5"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 670,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2675:3:5",
														"subExpression": {
															"id": 669,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 659,
															"src": "2675:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 671,
													"nodeType": "ExpressionStatement",
													"src": "2675:3:5"
												},
												"nodeType": "ForStatement",
												"src": "2598:199:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 691,
															"name": "_doctor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 637,
															"src": "2859:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"expression": {
																"baseExpression": {
																	"id": 686,
																	"name": "patientRecords",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 481,
																	"src": "2809:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PatientRecord_$476_storage_$",
																		"typeString": "mapping(uint256 => struct BlockchainHealthRecords.PatientRecord storage ref)"
																	}
																},
																"id": 688,
																"indexExpression": {
																	"id": 687,
																	"name": "_patientId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 635,
																	"src": "2824:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2809:26:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PatientRecord_$476_storage",
																	"typeString": "struct BlockchainHealthRecords.PatientRecord storage ref"
																}
															},
															"id": 689,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2836:17:5",
															"memberName": "authorizedDoctors",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 473,
															"src": "2809:44:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 690,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2854:4:5",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "2809:49:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2809:58:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 693,
												"nodeType": "ExpressionStatement",
												"src": "2809:58:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 695,
															"name": "_patientId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 635,
															"src": "2897:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 696,
															"name": "_doctor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 637,
															"src": "2909:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 694,
														"name": "AccessGranted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 507,
														"src": "2883:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (uint256,address)"
														}
													},
													"id": 697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2883:34:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 698,
												"nodeType": "EmitStatement",
												"src": "2878:39:5"
											}
										]
									},
									"functionSelector": "65dd152c",
									"id": 700,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 640,
													"name": "_patientId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 635,
													"src": "2416:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 641,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 639,
												"name": "onlyPatient",
												"nameLocations": [
													"2404:11:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 548,
												"src": "2404:11:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "2404:23:5"
										}
									],
									"name": "grantAccess",
									"nameLocation": "2348:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "_patientId",
												"nameLocation": "2368:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "2360:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 634,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2360:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "_doctor",
												"nameLocation": "2388:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "2380:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 636,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2380:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2359:37:5"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2428:0:5"
									},
									"scope": 862,
									"src": "2339:586:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 729,
										"nodeType": "Block",
										"src": "3015:223:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 714,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 708,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3048:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 709,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3052:6:5",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3048:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 710,
																			"name": "patientRecords",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 481,
																			"src": "3062:14:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PatientRecord_$476_storage_$",
																				"typeString": "mapping(uint256 => struct BlockchainHealthRecords.PatientRecord storage ref)"
																			}
																		},
																		"id": 712,
																		"indexExpression": {
																			"id": 711,
																			"name": "_patientId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 702,
																			"src": "3077:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3062:26:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PatientRecord_$476_storage",
																			"typeString": "struct BlockchainHealthRecords.PatientRecord storage ref"
																		}
																	},
																	"id": 713,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3089:5:5",
																	"memberName": "owner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 468,
																	"src": "3062:32:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3048:46:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 716,
																		"name": "_patientId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 702,
																		"src": "3111:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 717,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3123:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 718,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3127:6:5",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3123:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 715,
																	"name": "isAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 770,
																	"src": "3098:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (uint256,address) view returns (bool)"
																	}
																},
																"id": 719,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3098:36:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3048:86:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420617574686f72697a65642e",
															"id": 721,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3149:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7266bddff5abb545cc5c3e00df14df53c6215d4f5ec266a2b22dc0da56941b7e",
																"typeString": "literal_string \"Not authorized.\""
															},
															"value": "Not authorized."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7266bddff5abb545cc5c3e00df14df53c6215d4f5ec266a2b22dc0da56941b7e",
																"typeString": "literal_string \"Not authorized.\""
															}
														],
														"id": 707,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3026:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3026:151:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 723,
												"nodeType": "ExpressionStatement",
												"src": "3026:151:5"
											},
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 724,
															"name": "patientRecords",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "3195:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PatientRecord_$476_storage_$",
																"typeString": "mapping(uint256 => struct BlockchainHealthRecords.PatientRecord storage ref)"
															}
														},
														"id": 726,
														"indexExpression": {
															"id": 725,
															"name": "_patientId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 702,
															"src": "3210:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3195:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PatientRecord_$476_storage",
															"typeString": "struct BlockchainHealthRecords.PatientRecord storage ref"
														}
													},
													"id": 727,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3222:8:5",
													"memberName": "ipfsHash",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 470,
													"src": "3195:35:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 706,
												"id": 728,
												"nodeType": "Return",
												"src": "3188:42:5"
											}
										]
									},
									"functionSelector": "b9fff11b",
									"id": 730,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPatientRecord",
									"nameLocation": "2942:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "_patientId",
												"nameLocation": "2967:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 730,
												"src": "2959:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 701,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2959:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2958:20:5"
									},
									"returnParameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 730,
												"src": "3000:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 704,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3000:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:15:5"
									},
									"scope": 862,
									"src": "2933:305:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 769,
										"nodeType": "Block",
										"src": "3334:259:5",
										"statements": [
											{
												"body": {
													"id": 765,
													"nodeType": "Block",
													"src": "3427:136:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 760,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 753,
																				"name": "patientRecords",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 481,
																				"src": "3446:14:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PatientRecord_$476_storage_$",
																					"typeString": "mapping(uint256 => struct BlockchainHealthRecords.PatientRecord storage ref)"
																				}
																			},
																			"id": 755,
																			"indexExpression": {
																				"id": 754,
																				"name": "_patientId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 732,
																				"src": "3461:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3446:26:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PatientRecord_$476_storage",
																				"typeString": "struct BlockchainHealthRecords.PatientRecord storage ref"
																			}
																		},
																		"id": 756,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3473:17:5",
																		"memberName": "authorizedDoctors",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 473,
																		"src": "3446:44:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 758,
																	"indexExpression": {
																		"id": 757,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 740,
																		"src": "3491:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3446:47:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 759,
																	"name": "_caller",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 734,
																	"src": "3497:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3446:58:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 764,
															"nodeType": "IfStatement",
															"src": "3442:110:5",
															"trueBody": {
																"id": 763,
																"nodeType": "Block",
																"src": "3506:46:5",
																"statements": [
																	{
																		"expression": {
																			"hexValue": "74727565",
																			"id": 761,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3532:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "true"
																		},
																		"functionReturnParameters": 738,
																		"id": 762,
																		"nodeType": "Return",
																		"src": "3525:11:5"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 743,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 740,
														"src": "3365:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"expression": {
																"baseExpression": {
																	"id": 744,
																	"name": "patientRecords",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 481,
																	"src": "3369:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PatientRecord_$476_storage_$",
																		"typeString": "mapping(uint256 => struct BlockchainHealthRecords.PatientRecord storage ref)"
																	}
																},
																"id": 746,
																"indexExpression": {
																	"id": 745,
																	"name": "_patientId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 732,
																	"src": "3384:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3369:26:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PatientRecord_$476_storage",
																	"typeString": "struct BlockchainHealthRecords.PatientRecord storage ref"
																}
															},
															"id": 747,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3396:17:5",
															"memberName": "authorizedDoctors",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 473,
															"src": "3369:44:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 748,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3414:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3369:51:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3365:55:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 766,
												"initializationExpression": {
													"assignments": [
														740
													],
													"declarations": [
														{
															"constant": false,
															"id": 740,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3358:1:5",
															"nodeType": "VariableDeclaration",
															"scope": 766,
															"src": "3350:9:5",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 739,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3350:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 742,
													"initialValue": {
														"hexValue": "30",
														"id": 741,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3362:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3350:13:5"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 751,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3422:3:5",
														"subExpression": {
															"id": 750,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 740,
															"src": "3422:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 752,
													"nodeType": "ExpressionStatement",
													"src": "3422:3:5"
												},
												"nodeType": "ForStatement",
												"src": "3345:218:5"
											},
											{
												"expression": {
													"hexValue": "66616c7365",
													"id": 767,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3580:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"functionReturnParameters": 738,
												"id": 768,
												"nodeType": "Return",
												"src": "3573:12:5"
											}
										]
									},
									"id": 770,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isAuthorized",
									"nameLocation": "3255:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "_patientId",
												"nameLocation": "3276:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "3268:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 731,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3268:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "_caller",
												"nameLocation": "3296:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "3288:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 733,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3288:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3267:37:5"
									},
									"returnParameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "3328:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 736,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3328:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3327:6:5"
									},
									"scope": 862,
									"src": "3246:347:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 802,
										"nodeType": "Block",
										"src": "3697:203:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 783,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 781,
																"name": "_patientId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 772,
																"src": "3716:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 782,
																"name": "nextPatientId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 487,
																"src": "3729:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3716:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50617469656e74207265636f726420646f6573206e6f742065786973742e",
															"id": 784,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3744:32:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a03f0f1663b5c7e16ec3d5e4c3b1daa0bf8c654ceace410eb5e18c71eb6e6202",
																"typeString": "literal_string \"Patient record does not exist.\""
															},
															"value": "Patient record does not exist."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a03f0f1663b5c7e16ec3d5e4c3b1daa0bf8c654ceace410eb5e18c71eb6e6202",
																"typeString": "literal_string \"Patient record does not exist.\""
															}
														],
														"id": 780,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3708:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3708:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 786,
												"nodeType": "ExpressionStatement",
												"src": "3708:69:5"
											},
											{
												"expression": {
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 787,
															"name": "emergencyPins",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "3788:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
																"typeString": "mapping(uint256 => bytes32)"
															}
														},
														"id": 789,
														"indexExpression": {
															"id": 788,
															"name": "_patientId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 772,
															"src": "3802:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3788:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 793,
																		"name": "_pin",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 774,
																		"src": "3843:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 791,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "3826:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 792,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "3830:12:5",
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "3826:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 794,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3826:22:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 790,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "3816:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 795,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3816:33:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3788:61:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 797,
												"nodeType": "ExpressionStatement",
												"src": "3788:61:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 799,
															"name": "_patientId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 772,
															"src": "3881:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 798,
														"name": "EmergencyPinSet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 511,
														"src": "3865:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3865:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 801,
												"nodeType": "EmitStatement",
												"src": "3860:32:5"
											}
										]
									},
									"functionSelector": "b38deff0",
									"id": 803,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 777,
													"name": "_patientId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 772,
													"src": "3685:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 778,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 776,
												"name": "onlyPatient",
												"nameLocations": [
													"3673:11:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 548,
												"src": "3673:11:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "3673:23:5"
										}
									],
									"name": "setEmergencyPin",
									"nameLocation": "3610:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "_patientId",
												"nameLocation": "3634:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "3626:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 771,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3626:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "_pin",
												"nameLocation": "3660:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "3646:18:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 773,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3646:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3625:40:5"
									},
									"returnParameters": {
										"id": 779,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3697:0:5"
									},
									"scope": 862,
									"src": "3601:299:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 838,
										"nodeType": "Block",
										"src": "4009:241:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 813,
																"name": "_patientId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 805,
																"src": "4028:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 814,
																"name": "nextPatientId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 487,
																"src": "4041:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4028:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50617469656e74207265636f726420646f6573206e6f742065786973742e",
															"id": 816,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4056:32:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a03f0f1663b5c7e16ec3d5e4c3b1daa0bf8c654ceace410eb5e18c71eb6e6202",
																"typeString": "literal_string \"Patient record does not exist.\""
															},
															"value": "Patient record does not exist."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a03f0f1663b5c7e16ec3d5e4c3b1daa0bf8c654ceace410eb5e18c71eb6e6202",
																"typeString": "literal_string \"Patient record does not exist.\""
															}
														],
														"id": 812,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4020:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4020:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 818,
												"nodeType": "ExpressionStatement",
												"src": "4020:69:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 829,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 823,
																				"name": "_pin",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 807,
																				"src": "4135:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			],
																			"expression": {
																				"id": 821,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4118:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 822,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4122:12:5",
																			"memberName": "encodePacked",
																			"nodeType": "MemberAccess",
																			"src": "4118:16:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 824,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4118:22:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 820,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967288,
																	"src": "4108:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (bytes memory) pure returns (bytes32)"
																	}
																},
																"id": 825,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4108:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"baseExpression": {
																	"id": 826,
																	"name": "emergencyPins",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 485,
																	"src": "4145:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
																		"typeString": "mapping(uint256 => bytes32)"
																	}
																},
																"id": 828,
																"indexExpression": {
																	"id": 827,
																	"name": "_patientId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 805,
																	"src": "4159:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4145:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "4108:62:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e636f72726563742050494e2e",
															"id": 830,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4172:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4658a9319eb4ecfa94ed49c134b2743abe3252fbabaaf0d21eb640994644bcf5",
																"typeString": "literal_string \"Incorrect PIN.\""
															},
															"value": "Incorrect PIN."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4658a9319eb4ecfa94ed49c134b2743abe3252fbabaaf0d21eb640994644bcf5",
																"typeString": "literal_string \"Incorrect PIN.\""
															}
														],
														"id": 819,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4100:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4100:89:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 832,
												"nodeType": "ExpressionStatement",
												"src": "4100:89:5"
											},
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 833,
															"name": "patientRecords",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "4207:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PatientRecord_$476_storage_$",
																"typeString": "mapping(uint256 => struct BlockchainHealthRecords.PatientRecord storage ref)"
															}
														},
														"id": 835,
														"indexExpression": {
															"id": 834,
															"name": "_patientId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "4222:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4207:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PatientRecord_$476_storage",
															"typeString": "struct BlockchainHealthRecords.PatientRecord storage ref"
														}
													},
													"id": 836,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4234:8:5",
													"memberName": "ipfsHash",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 470,
													"src": "4207:35:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 811,
												"id": 837,
												"nodeType": "Return",
												"src": "4200:42:5"
											}
										]
									},
									"functionSelector": "3c2bc6a1",
									"id": 839,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "emergencyAccess",
									"nameLocation": "3917:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "_patientId",
												"nameLocation": "3941:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 839,
												"src": "3933:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 804,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3933:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "_pin",
												"nameLocation": "3967:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 839,
												"src": "3953:18:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 806,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3953:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3932:40:5"
									},
									"returnParameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 839,
												"src": "3994:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 809,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3994:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3993:15:5"
									},
									"scope": 862,
									"src": "3908:342:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 860,
										"nodeType": "Block",
										"src": "4318:113:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 848,
																	"name": "ADMIN_ROLE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 454,
																	"src": "4345:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 849,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4357:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 850,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4361:6:5",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4357:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 847,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "4337:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 851,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4337:31:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420616e2061646d696e2e",
															"id": 852,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4370:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_194cdd552b6458a32ff665efb85cb4d7c0c27b1fc9eb323b462a32931b0ee57e",
																"typeString": "literal_string \"Not an admin.\""
															},
															"value": "Not an admin."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_194cdd552b6458a32ff665efb85cb4d7c0c27b1fc9eb323b462a32931b0ee57e",
																"typeString": "literal_string \"Not an admin.\""
															}
														],
														"id": 846,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4329:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4329:57:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 854,
												"nodeType": "ExpressionStatement",
												"src": "4329:57:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 856,
															"name": "_role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 843,
															"src": "4407:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 857,
															"name": "_account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 841,
															"src": "4414:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 855,
														"name": "grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "4397:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4397:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 859,
												"nodeType": "ExpressionStatement",
												"src": "4397:26:5"
											}
										]
									},
									"functionSelector": "1d9486de",
									"id": 861,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "assignRole",
									"nameLocation": "4267:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "4286:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "4278:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 840,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4278:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "_role",
												"nameLocation": "4304:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "4296:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 842,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4296:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4277:33:5"
									},
									"returnParameters": {
										"id": 845,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4318:0:5"
									},
									"scope": 862,
									"src": "4258:173:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 863,
							"src": "123:4311:5",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335,
								495,
								501,
								507,
								511
							]
						}
					],
					"src": "33:4403:5"
				},
				"id": 5
			}
		}
	}
}