{
	"id": "51c097cbb059a9e354cbcff922e86ed3",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"viaIR": true,
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"healthr.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\ncontract Healthr {\r\n    struct PatientRecord {\r\n        uint256 patientId;\r\n        address owner;\r\n        bytes32 ipfsHash; // Reference to complete off-chain data\r\n        mapping(address => bool) authorizedProviders;\r\n        mapping(string => bytes32) fieldHashes; // Store hash of each field\r\n        uint256 accessLevel;\r\n        uint256 timestamp;\r\n        bytes32 emergencyPinHash;\r\n    }\r\n\r\n    mapping(uint256 => PatientRecord) public patientRecords;\r\n    uint256 public nextPatientId;\r\n\r\n    event RecordAdded(uint256 indexed patientId, address owner, bytes32 ipfsHash);\r\n    event RecordUpdated(uint256 indexed patientId, bytes32 ipfsHash);\r\n    event AccessGranted(uint256 indexed patientId, address provider);\r\n    event AccessRevoked(uint256 indexed patientId, address provider);\r\n\r\n    modifier onlyPatient(uint256 _patientId) {\r\n        require(msg.sender == patientRecords[_patientId].owner, \"Only patient can modify\");\r\n        _;\r\n    }\r\n\r\n    // Add new patient record with field hashes\r\n    function addPatientRecord(bytes32 _ipfsHash, bytes32[] memory _fieldHashes, string[] memory _fieldNames) \r\n        public \r\n    {\r\n        require(_fieldHashes.length == _fieldNames.length, \"Mismatch in field counts\");\r\n        uint256 patientId = nextPatientId;\r\n        \r\n        PatientRecord storage record = patientRecords[patientId];\r\n        record.patientId = patientId;\r\n        record.owner = msg.sender;\r\n        record.ipfsHash = _ipfsHash;\r\n        record.timestamp = block.timestamp;\r\n        \r\n        for (uint i = 0; i < _fieldNames.length; i++) {\r\n            record.fieldHashes[_fieldNames[i]] = _fieldHashes[i];\r\n        }\r\n        \r\n        nextPatientId++;\r\n        emit RecordAdded(patientId, msg.sender, _ipfsHash);\r\n    }\r\n\r\n    // Update patient record\r\n    function updatePatientRecord(uint256 _patientId, bytes32 _ipfsHash, bytes32[] memory _fieldHashes, string[] memory _fieldNames) \r\n        public \r\n        onlyPatient(_patientId) \r\n    {\r\n        require(_patientId < nextPatientId, \"Record does not exist\");\r\n        require(_fieldHashes.length == _fieldNames.length, \"Mismatch in field counts\");\r\n        \r\n        PatientRecord storage record = patientRecords[_patientId];\r\n        record.ipfsHash = _ipfsHash;\r\n        record.timestamp = block.timestamp;\r\n        \r\n        for (uint i = 0; i < _fieldNames.length; i++) {\r\n            record.fieldHashes[_fieldNames[i]] = _fieldHashes[i];\r\n        }\r\n        \r\n        emit RecordUpdated(_patientId, _ipfsHash);\r\n    }\r\n\r\n    // Grant access to providers\r\n    function grantAccess(uint256 _patientId, address _provider) \r\n        public \r\n        onlyPatient(_patientId) \r\n    {\r\n        require(_patientId < nextPatientId, \"Record does not exist\");\r\n        require(!patientRecords[_patientId].authorizedProviders[_provider], \"Provider already authorized\");\r\n        \r\n        patientRecords[_patientId].authorizedProviders[_provider] = true;\r\n        emit AccessGranted(_patientId, _provider);\r\n    }\r\n\r\n    // Revoke access from providers\r\n    function revokeAccess(uint256 _patientId, address _provider) \r\n        public \r\n        onlyPatient(_patientId) \r\n    {\r\n        require(_patientId < nextPatientId, \"Record does not exist\");\r\n        require(patientRecords[_patientId].authorizedProviders[_provider], \"Provider not authorized\");\r\n        \r\n        patientRecords[_patientId].authorizedProviders[_provider] = false;\r\n        emit AccessRevoked(_patientId, _provider);\r\n    }\r\n\r\n    // Set emergency PIN\r\n    function setEmergencyPin(uint256 _patientId, string memory _pin) \r\n        public \r\n        onlyPatient(_patientId) \r\n    {\r\n        require(_patientId < nextPatientId, \"Record does not exist\");\r\n        patientRecords[_patientId].emergencyPinHash = keccak256(abi.encodePacked(_pin));\r\n    }\r\n\r\n    // Get record reference for authorized users\r\n    function getRecordReference(uint256 _patientId) \r\n        public \r\n        view \r\n        returns (bytes32 ipfsHash, uint256 timestamp) \r\n    {\r\n        require(_patientId < nextPatientId, \"Record does not exist\");\r\n        PatientRecord storage record = patientRecords[_patientId];\r\n        \r\n        require(\r\n            msg.sender == record.owner || \r\n            record.authorizedProviders[msg.sender],\r\n            \"Not authorized\"\r\n        );\r\n        \r\n        return (record.ipfsHash, record.timestamp);\r\n    }\r\n\r\n    // Emergency access\r\n    function emergencyAccess(uint256 _patientId, string memory _pin) \r\n        public \r\n        view \r\n        returns (bytes32 ipfsHash) \r\n    {\r\n        require(_patientId < nextPatientId, \"Record does not exist\");\r\n        PatientRecord storage record = patientRecords[_patientId];\r\n        \r\n        require(\r\n            keccak256(abi.encodePacked(_pin)) == record.emergencyPinHash,\r\n            \"Invalid emergency PIN\"\r\n        );\r\n        \r\n        return record.ipfsHash;\r\n    }\r\n\r\n    // Verify specific data field\r\n    function verifyRecordField(uint256 _patientId, string memory _fieldName, string memory _fieldValue) \r\n        public \r\n        view \r\n        returns (bool) \r\n    {\r\n        require(_patientId < nextPatientId, \"Record does not exist\");\r\n        PatientRecord storage record = patientRecords[_patientId];\r\n        \r\n        // Only authorized providers can verify records (not the owner)\r\n        require(\r\n            record.authorizedProviders[msg.sender] && msg.sender != record.owner,\r\n            \"Only authorized providers can verify records\"\r\n        );\r\n        \r\n        bytes32 expectedHash = keccak256(abi.encodePacked(_fieldValue));\r\n        return record.fieldHashes[_fieldName] == expectedHash;\r\n    }\r\n}"
			}
		}
	},
	"output": {
		"contracts": {
			"healthr.sol": {
				"Healthr": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "patientId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "provider",
									"type": "address"
								}
							],
							"name": "AccessGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "patientId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "provider",
									"type": "address"
								}
							],
							"name": "AccessRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "patientId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "ipfsHash",
									"type": "bytes32"
								}
							],
							"name": "RecordAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "patientId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "ipfsHash",
									"type": "bytes32"
								}
							],
							"name": "RecordUpdated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_ipfsHash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32[]",
									"name": "_fieldHashes",
									"type": "bytes32[]"
								},
								{
									"internalType": "string[]",
									"name": "_fieldNames",
									"type": "string[]"
								}
							],
							"name": "addPatientRecord",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_patientId",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "_pin",
									"type": "string"
								}
							],
							"name": "emergencyAccess",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "ipfsHash",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_patientId",
									"type": "uint256"
								}
							],
							"name": "getRecordReference",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "ipfsHash",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_patientId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_provider",
									"type": "address"
								}
							],
							"name": "grantAccess",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nextPatientId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "patientRecords",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "patientId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "ipfsHash",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "accessLevel",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "emergencyPinHash",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_patientId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_provider",
									"type": "address"
								}
							],
							"name": "revokeAccess",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_patientId",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "_pin",
									"type": "string"
								}
							],
							"name": "setEmergencyPin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_patientId",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "_ipfsHash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32[]",
									"name": "_fieldHashes",
									"type": "bytes32[]"
								},
								{
									"internalType": "string[]",
									"name": "_fieldNames",
									"type": "string[]"
								}
							],
							"name": "updatePatientRecord",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_patientId",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "_fieldName",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_fieldValue",
									"type": "string"
								}
							],
							"name": "verifyRecordField",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"healthr.sol\":61:5725  contract Healthr {... */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  return\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_13, iszero(lt(calldatasize, 0x04)))\n      0x00\n      dup1\n      revert\n    tag_13:\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1b424e7a\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x3c2bc6a1\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x63893e46\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x65dd152c\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x65e87a19\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xb1131795\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xb38deff0\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xb39e07e4\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xd3d188a1\n      eq\n      tag_31\n      jumpi\n      0xd9a5ec1b\n      eq\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      jumpi(tag_35, callvalue)\n      tag_37\n      calldatasize\n      tag_7\n      jump\t// in\n    tag_37:\n      dup2\n      0x00\n      mstore\n      mstore(0x20, 0x00)\n        /* \"healthr.sol\":916:998  require(msg.sender == patientRecords[_patientId].owner, \"Only patient can modify\") */\n      tag_38\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n        /* \"healthr.sol\":938:970  patientRecords[_patientId].owner */\n      0x01\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      keccak256(0x00, 0x40)\n        /* \"healthr.sol\":938:970  patientRecords[_patientId].owner */\n      add\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      sload\n      and\n        /* \"healthr.sol\":924:934  msg.sender */\n      caller\n        /* \"healthr.sol\":924:970  msg.sender == patientRecords[_patientId].owner */\n      eq\n        /* \"healthr.sol\":916:998  require(msg.sender == patientRecords[_patientId].owner, \"Only patient can modify\") */\n      tag_12\n      jump\t// in\n    tag_38:\n        /* \"healthr.sol\":3238:3298  require(_patientId < nextPatientId, \"Record does not exist\") */\n      tag_39\n        /* \"healthr.sol\":938:970  patientRecords[_patientId].owner */\n      0x01\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      sload\n        /* \"healthr.sol\":3246:3272  _patientId < nextPatientId */\n      dup4\n      lt\n        /* \"healthr.sol\":3238:3298  require(_patientId < nextPatientId, \"Record does not exist\") */\n      tag_8\n      jump\t// in\n    tag_39:\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      0x00\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n      dup6\n      and\n      dup5\n      mstore\n        /* \"healthr.sol\":3317:3363  patientRecords[_patientId].authorizedProviders */\n      0x03\n      add\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap5\n      and\n      dup1\n      dup5\n      mstore\n        /* \"healthr.sol\":3317:3363  patientRecords[_patientId].authorizedProviders */\n      0x03\n        /* \"healthr.sol\":3423:3469  patientRecords[_patientId].authorizedProviders */\n      swap5\n      swap1\n      swap5\n      add\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n      swap1\n      mload\n      swap2\n      dup3\n      mstore\n        /* \"healthr.sol\":3504:3540  AccessRevoked(_patientId, _provider) */\n      0x125883b94692baebecad9f111ed97ffa626523bbbadc6b0ef85ee1b56b9e52d5\n      swap2\n      log2\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      stop\n    tag_40:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x17\n      0x24\n      dup3\n      add\n      mstore\n      0x50726f7669646572206e6f7420617574686f72697a6564000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_35:\n      0x00\n      dup1\n      revert\n    tag_31:\n      jumpi(tag_35, callvalue)\n      jumpi(tag_35, slt(add(not(0x03), calldatasize), 0x20))\n      mstore(0x00, calldataload(0x04))\n      mstore(0x20, 0x00)\n      0xc0\n      keccak256(0x00, 0x40)\n      dup1\n      sload\n      swap1\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      0x01\n        /* \"healthr.sol\":466:521  mapping(uint256 => PatientRecord) public patientRecords */\n      dup3\n      add\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      sload\n      and\n        /* \"healthr.sol\":466:521  mapping(uint256 => PatientRecord) public patientRecords */\n      swap1\n      0x02\n      dup2\n      add\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      sload\n        /* \"healthr.sol\":466:521  mapping(uint256 => PatientRecord) public patientRecords */\n      0x05\n      dup3\n      add\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      sload\n        /* \"healthr.sol\":466:521  mapping(uint256 => PatientRecord) public patientRecords */\n      swap1\n      0x07\n      0x06\n      dup5\n      add\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      sload\n        /* \"healthr.sol\":466:521  mapping(uint256 => PatientRecord) public patientRecords */\n      swap4\n      add\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      sload\n      swap4\n      mload(0x40)\n      swap6\n      dup7\n      mstore\n      0x20\n      dup7\n      add\n      mstore\n      0x40\n      dup6\n      add\n      mstore\n      0x60\n      dup5\n      add\n      mstore\n      0x80\n      dup4\n      add\n      mstore\n      0xa0\n      dup3\n      add\n      mstore\n      return\n    tag_29:\n      jumpi(tag_35, callvalue)\n      jumpi(tag_35, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n        /* \"healthr.sol\":4084:4144  require(_patientId < nextPatientId, \"Record does not exist\") */\n      tag_50\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      sload(0x01)\n        /* \"healthr.sol\":4092:4118  _patientId < nextPatientId */\n      dup3\n      lt\n        /* \"healthr.sol\":4084:4144  require(_patientId < nextPatientId, \"Record does not exist\") */\n      tag_8\n      jump\t// in\n    tag_50:\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      0x00\n      mstore\n      mstore(0x20, 0x00)\n      keccak256(0x00, 0x40)\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      0x01\n        /* \"healthr.sol\":4269:4281  record.owner */\n      dup3\n      add\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      sload\n      and\n        /* \"healthr.sol\":4255:4265  msg.sender */\n      caller\n        /* \"healthr.sol\":4255:4281  msg.sender == record.owner */\n      eq\n        /* \"healthr.sol\":4255:4337  msg.sender == record.owner || ... */\n      dup1\n      iszero\n      tag_51\n      jumpi\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n    tag_52:\n      iszero\n      tag_53\n      jumpi\n        /* \"healthr.sol\":4408:4423  record.ipfsHash */\n      dup1\n        /* \"healthr.sol\":4425:4441  record.timestamp */\n      0x06\n        /* \"healthr.sol\":4408:4423  record.ipfsHash */\n      0x02\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      0x40\n        /* \"healthr.sol\":4408:4423  record.ipfsHash */\n      swap4\n      add\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      sload\n        /* \"healthr.sol\":4425:4441  record.timestamp */\n      swap2\n      add\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      sload\n      dup3\n      mload\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      mstore\n      return\n    tag_53:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0e\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x92, 0x139bdd08185d5d1a1bdc9a5e9959)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"healthr.sol\":4255:4337  msg.sender == record.owner || ... */\n    tag_51:\n      pop\n        /* \"healthr.sol\":4255:4265  msg.sender */\n      caller\n      0x00\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      swap1\n      dup2\n      mstore\n        /* \"healthr.sol\":4299:4325  record.authorizedProviders */\n      0x03\n      dup3\n      add\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"healthr.sol\":4255:4337  msg.sender == record.owner || ... */\n      jump(tag_52)\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n    tag_27:\n      jumpi(tag_35, callvalue)\n      tag_57\n      calldatasize\n      tag_3\n      jump\t// in\n    tag_57:\n      dup2\n      0x00\n      mstore\n      mstore(0x20, 0x00)\n        /* \"healthr.sol\":916:998  require(msg.sender == patientRecords[_patientId].owner, \"Only patient can modify\") */\n      tag_58\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n        /* \"healthr.sol\":938:970  patientRecords[_patientId].owner */\n      0x01\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      keccak256(0x00, 0x40)\n        /* \"healthr.sol\":938:970  patientRecords[_patientId].owner */\n      add\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      sload\n      and\n        /* \"healthr.sol\":924:934  msg.sender */\n      caller\n        /* \"healthr.sol\":924:970  msg.sender == patientRecords[_patientId].owner */\n      eq\n        /* \"healthr.sol\":916:998  require(msg.sender == patientRecords[_patientId].owner, \"Only patient can modify\") */\n      tag_12\n      jump\t// in\n    tag_58:\n        /* \"healthr.sol\":3715:3775  require(_patientId < nextPatientId, \"Record does not exist\") */\n      tag_59\n        /* \"healthr.sol\":938:970  patientRecords[_patientId].owner */\n      0x01\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      sload\n        /* \"healthr.sol\":3723:3749  _patientId < nextPatientId */\n      dup4\n      lt\n        /* \"healthr.sol\":3715:3775  require(_patientId < nextPatientId, \"Record does not exist\") */\n      tag_8\n      jump\t// in\n    tag_59:\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      mload(0x40)\n        /* \"healthr.sol\":3842:3864  abi.encodePacked(_pin) */\n      tag_60\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      0x20\n        /* \"healthr.sol\":3842:3864  abi.encodePacked(_pin) */\n      dup3\n      dup2\n      dup1\n      dup3\n      add\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      swap6\n      dup1\n      mload\n      swap2\n      dup3\n      swap2\n      add\n      dup8\n      mcopy\n      dup2\n      add\n      0x00\n      dup4\n      dup3\n      add\n      mstore\n        /* \"healthr.sol\":3842:3864  abi.encodePacked(_pin) */\n      sub\n      add\n        /* \"healthr.sol\":5620:5649  abi.encodePacked(_fieldValue) */\n      not(0x1f)\n        /* \"healthr.sol\":3842:3864  abi.encodePacked(_pin) */\n      dup2\n      add\n      dup4\n      mstore\n      dup3\n      tag_1\n      jump\t// in\n    tag_60:\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      mload\n        /* \"healthr.sol\":3832:3865  keccak256(abi.encodePacked(_pin)) */\n      swap1\n      keccak256\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      swap1\n      0x00\n      mstore\n      mstore(0x20, 0x00)\n        /* \"healthr.sol\":3786:3829  patientRecords[_patientId].emergencyPinHash */\n      0x07\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      keccak256(0x00, 0x40)\n        /* \"healthr.sol\":3786:3829  patientRecords[_patientId].emergencyPinHash */\n      add\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      sstore\n      0x00\n      dup1\n      return\n    tag_25:\n      jumpi(tag_35, callvalue)\n      jumpi(tag_35, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"healthr.sol\":528:556  uint256 public nextPatientId */\n      0x01\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_23:\n      jumpi(tag_35, callvalue)\n      jumpi(tag_35, slt(add(not(0x03), calldatasize), 0x80))\n      calldataload(0x24)\n      calldataload(0x04)\n      calldataload(0x44)\n      0xffffffffffffffff\n      dup2\n      gt\n      tag_35\n      jumpi\n      tag_71\n      swap1\n      calldatasize\n      swap1\n      0x04\n      add\n      tag_5\n      jump\t// in\n    tag_71:\n      calldataload(0x64)\n      0xffffffffffffffff\n      dup2\n      gt\n      tag_35\n      jumpi\n      swap1\n      tag_74\n      dup5\n      swap3\n      calldatasize\n      swap1\n      0x04\n      add\n      tag_6\n      jump\t// in\n    tag_74:\n      swap1\n      dup4\n      0x00\n      mstore\n      mstore(0x20, 0x00)\n        /* \"healthr.sol\":916:998  require(msg.sender == patientRecords[_patientId].owner, \"Only patient can modify\") */\n      tag_75\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      0x01\n      keccak256(0x00, 0x40)\n        /* \"healthr.sol\":938:970  patientRecords[_patientId].owner */\n      add\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      sload\n      and\n        /* \"healthr.sol\":924:934  msg.sender */\n      caller\n        /* \"healthr.sol\":924:970  msg.sender == patientRecords[_patientId].owner */\n      eq\n        /* \"healthr.sol\":916:998  require(msg.sender == patientRecords[_patientId].owner, \"Only patient can modify\") */\n      tag_12\n      jump\t// in\n    tag_75:\n        /* \"healthr.sol\":2055:2115  require(_patientId < nextPatientId, \"Record does not exist\") */\n      tag_76\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      sload(0x01)\n        /* \"healthr.sol\":2063:2089  _patientId < nextPatientId */\n      dup6\n      lt\n        /* \"healthr.sol\":2055:2115  require(_patientId < nextPatientId, \"Record does not exist\") */\n      tag_8\n      jump\t// in\n    tag_76:\n        /* \"healthr.sol\":2126:2204  require(_fieldHashes.length == _fieldNames.length, \"Mismatch in field counts\") */\n      tag_77\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      dup2\n      mload\n      dup4\n      mload\n        /* \"healthr.sol\":2134:2175  _fieldHashes.length == _fieldNames.length */\n      eq\n        /* \"healthr.sol\":2126:2204  require(_fieldHashes.length == _fieldNames.length, \"Mismatch in field counts\") */\n      tag_10\n      jump\t// in\n    tag_77:\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      dup4\n      0x00\n      mstore\n      mstore(0x20, 0x00)\n      keccak256(0x00, 0x40)\n        /* \"healthr.sol\":2293:2308  record.ipfsHash */\n      swap4\n      dup4\n      0x02\n      dup7\n      add\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      sstore\n        /* \"healthr.sol\":2350:2365  block.timestamp */\n      timestamp\n        /* \"healthr.sol\":2331:2347  record.timestamp */\n      0x06\n      dup7\n      add\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      sstore\n      0x04\n      0x00\n        /* \"healthr.sol\":2447:2465  record.fieldHashes */\n      swap6\n      add\n        /* \"healthr.sol\":2386:2511  for (uint i = 0; i < _fieldNames.length; i++) {... */\n      swap5\n        /* \"healthr.sol\":2427:2430  i++ */\n    tag_78:\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      dup4\n      mload\n        /* \"healthr.sol\":2403:2425  i < _fieldNames.length */\n      dup2\n      lt\n      iszero\n      tag_79\n      jumpi\n        /* \"healthr.sol\":2484:2499  _fieldHashes[i] */\n      dup1\n      tag_81\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      0x01\n        /* \"healthr.sol\":2484:2499  _fieldHashes[i] */\n      swap3\n      dup6\n      tag_11\n      jump\t// in\n    tag_81:\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      mload\n      tag_82\n        /* \"healthr.sol\":2466:2480  _fieldNames[i] */\n      dup9\n      tag_83\n      dup5\n      dup10\n      tag_11\n      jump\t// in\n    tag_83:\n      mload\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      tag_9\n      jump\t// in\n    tag_82:\n      sstore\n      add\n        /* \"healthr.sol\":2391:2401  uint i = 0 */\n      jump(tag_78)\n        /* \"healthr.sol\":2403:2425  i < _fieldNames.length */\n    tag_79:\n      pop\n        /* \"healthr.sol\":2536:2572  RecordUpdated(_patientId, _ipfsHash) */\n      0x0fef1e979d0b74e703ce41335e4adc7465be6b6511ce6870d8d76b85a2cd987c\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      0x20\n        /* \"healthr.sol\":2403:2425  i < _fieldNames.length */\n      dup6\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n        /* \"healthr.sol\":2536:2572  RecordUpdated(_patientId, _ipfsHash) */\n      log2\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      stop\n    tag_21:\n      jumpi(tag_35, callvalue)\n      tag_86\n      calldatasize\n      tag_7\n      jump\t// in\n    tag_86:\n      dup2\n      0x00\n      mstore\n      mstore(0x20, 0x00)\n        /* \"healthr.sol\":916:998  require(msg.sender == patientRecords[_patientId].owner, \"Only patient can modify\") */\n      tag_87\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n        /* \"healthr.sol\":938:970  patientRecords[_patientId].owner */\n      0x01\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      keccak256(0x00, 0x40)\n        /* \"healthr.sol\":938:970  patientRecords[_patientId].owner */\n      add\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      sload\n      and\n        /* \"healthr.sol\":924:934  msg.sender */\n      caller\n        /* \"healthr.sol\":924:970  msg.sender == patientRecords[_patientId].owner */\n      eq\n        /* \"healthr.sol\":916:998  require(msg.sender == patientRecords[_patientId].owner, \"Only patient can modify\") */\n      tag_12\n      jump\t// in\n    tag_87:\n        /* \"healthr.sol\":2750:2810  require(_patientId < nextPatientId, \"Record does not exist\") */\n      tag_88\n        /* \"healthr.sol\":938:970  patientRecords[_patientId].owner */\n      0x01\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      sload\n        /* \"healthr.sol\":2758:2784  _patientId < nextPatientId */\n      dup4\n      lt\n        /* \"healthr.sol\":2750:2810  require(_patientId < nextPatientId, \"Record does not exist\") */\n      tag_8\n      jump\t// in\n    tag_88:\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      0x00\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n      dup6\n      and\n      dup5\n      mstore\n        /* \"healthr.sol\":2830:2876  patientRecords[_patientId].authorizedProviders */\n      0x03\n      add\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      tag_89\n      jumpi\n      0x00\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap5\n      and\n      dup1\n      dup5\n      mstore\n        /* \"healthr.sol\":2830:2876  patientRecords[_patientId].authorizedProviders */\n      0x03\n        /* \"healthr.sol\":2940:2986  patientRecords[_patientId].authorizedProviders */\n      swap5\n      swap1\n      swap5\n      add\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n      dup1\n      sload\n      not(0xff)\n      and\n      0x01\n      or\n      swap1\n      sstore\n      swap1\n      mload\n      swap2\n      dup3\n      mstore\n        /* \"healthr.sol\":3020:3056  AccessGranted(_patientId, _provider) */\n      0x3c3a9147a1fc73dd51a32f4d10c43d457e8cb826eb6f35cac6349eb965ba82b4\n      swap2\n      log2\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      stop\n    tag_89:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x50726f766964657220616c726561647920617574686f72697a65640000000000\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_19:\n      jumpi(tag_35, callvalue)\n      jumpi(tag_35, slt(add(not(0x03), calldatasize), 0x60))\n      calldataload(0x04)\n      calldataload(0x24)\n      0xffffffffffffffff\n      dup2\n      gt\n      tag_35\n      jumpi\n      tag_97\n      swap1\n      calldatasize\n      swap1\n      0x04\n      add\n      tag_5\n      jump\t// in\n    tag_97:\n      calldataload(0x44)\n      0xffffffffffffffff\n      dup2\n      gt\n      tag_35\n      jumpi\n      tag_100\n      dup4\n      swap2\n      calldatasize\n      swap1\n      0x04\n      add\n      tag_6\n      jump\t// in\n    tag_100:\n        /* \"healthr.sol\":1214:1292  require(_fieldHashes.length == _fieldNames.length, \"Mismatch in field counts\") */\n      tag_101\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      dup4\n      mload\n      dup3\n      mload\n        /* \"healthr.sol\":1222:1263  _fieldHashes.length == _fieldNames.length */\n      eq\n        /* \"healthr.sol\":1214:1292  require(_fieldHashes.length == _fieldNames.length, \"Mismatch in field counts\") */\n      tag_10\n      jump\t// in\n    tag_101:\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      sload(0x01)\n      swap3\n      dup4\n      0x00\n      mstore\n      mstore(0x20, 0x00)\n      keccak256(0x00, 0x40)\n      swap4\n      dup1\n      dup6\n      sstore\n      0x01\n        /* \"healthr.sol\":1463:1475  record.owner */\n      dup6\n      add\n        /* \"healthr.sol\":1478:1488  msg.sender */\n      caller\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      shl(0xa0, 0xffffffffffffffffffffffff)\n      dup3\n      sload\n      and\n      or\n      swap1\n      sstore\n        /* \"healthr.sol\":1499:1514  record.ipfsHash */\n      dup4\n      0x02\n      dup7\n      add\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      sstore\n        /* \"healthr.sol\":1556:1571  block.timestamp */\n      timestamp\n        /* \"healthr.sol\":1537:1553  record.timestamp */\n      0x06\n      dup7\n      add\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      sstore\n      0x04\n      0x00\n        /* \"healthr.sol\":1653:1671  record.fieldHashes */\n      swap6\n      add\n        /* \"healthr.sol\":1592:1717  for (uint i = 0; i < _fieldNames.length; i++) {... */\n      swap5\n        /* \"healthr.sol\":1633:1636  i++ */\n    tag_102:\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      dup4\n      mload\n        /* \"healthr.sol\":1609:1631  i < _fieldNames.length */\n      dup2\n      lt\n      iszero\n      tag_103\n      jumpi\n        /* \"healthr.sol\":1690:1705  _fieldHashes[i] */\n      dup1\n      tag_105\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      0x01\n        /* \"healthr.sol\":1690:1705  _fieldHashes[i] */\n      swap3\n      dup6\n      tag_11\n      jump\t// in\n    tag_105:\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      mload\n      tag_106\n        /* \"healthr.sol\":1672:1686  _fieldNames[i] */\n      dup9\n      tag_83\n      dup5\n      dup10\n      tag_11\n      jump\t// in\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n    tag_106:\n      sstore\n      add\n        /* \"healthr.sol\":1597:1607  uint i = 0 */\n      jump(tag_102)\n        /* \"healthr.sol\":1609:1631  i < _fieldNames.length */\n    tag_103:\n      pop\n      dup4\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      sload(0x01)\n      not(0x00)\n      dup2\n      eq\n      tag_108\n      jumpi\n        /* \"healthr.sol\":1768:1813  RecordAdded(patientId, msg.sender, _ipfsHash) */\n      0xbbf4486ce56a8bb18798d25a2ef88158d76aac87bfb156491906d126855f4428\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      swap2\n      0x01\n      0x40\n      swap3\n      add\n      0x01\n      sstore\n      dup2\n      mload\n        /* \"healthr.sol\":1478:1488  msg.sender */\n      swap1\n      caller\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      mstore\n        /* \"healthr.sol\":1768:1813  RecordAdded(patientId, msg.sender, _ipfsHash) */\n      log2\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      stop\n    tag_108:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x11)\n      revert(0x00, 0x24)\n    tag_17:\n      jumpi(tag_35, callvalue)\n      tag_112\n      calldatasize\n      tag_3\n      jump\t// in\n    tag_112:\n      swap1\n        /* \"healthr.sol\":4634:4694  require(_patientId < nextPatientId, \"Record does not exist\") */\n      tag_113\n        /* \"healthr.sol\":4655:4668  nextPatientId */\n      0x01\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      sload\n        /* \"healthr.sol\":4642:4668  _patientId < nextPatientId */\n      dup3\n      lt\n        /* \"healthr.sol\":4634:4694  require(_patientId < nextPatientId, \"Record does not exist\") */\n      tag_8\n      jump\t// in\n    tag_113:\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      0x00\n      mstore\n      mstore(0x20, 0x00)\n      keccak256(0x00, 0x40)\n      swap1\n      mload(0x40)\n        /* \"healthr.sol\":4815:4837  abi.encodePacked(_pin) */\n      tag_114\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      0x20\n        /* \"healthr.sol\":4815:4837  abi.encodePacked(_pin) */\n      dup3\n      dup2\n      dup1\n      dup3\n      add\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      swap6\n      dup1\n      mload\n      swap2\n      dup3\n      swap2\n      add\n      dup8\n      mcopy\n      dup2\n      add\n      0x00\n      dup4\n      dup3\n      add\n      mstore\n        /* \"healthr.sol\":4815:4837  abi.encodePacked(_pin) */\n      sub\n      add\n        /* \"healthr.sol\":5620:5649  abi.encodePacked(_fieldValue) */\n      not(0x1f)\n        /* \"healthr.sol\":4815:4837  abi.encodePacked(_pin) */\n      dup2\n      add\n      dup4\n      mstore\n      dup3\n      tag_1\n      jump\t// in\n    tag_114:\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      mload\n        /* \"healthr.sol\":4805:4838  keccak256(abi.encodePacked(_pin)) */\n      swap1\n      keccak256\n        /* \"healthr.sol\":4842:4865  record.emergencyPinHash */\n      0x07\n      dup3\n      add\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      sload\n        /* \"healthr.sol\":4805:4865  keccak256(abi.encodePacked(_pin)) == record.emergencyPinHash */\n      sub\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      tag_115\n      jumpi\n        /* \"healthr.sol\":4942:4957  record.ipfsHash */\n      0x02\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      0x20\n        /* \"healthr.sol\":4942:4957  record.ipfsHash */\n      swap2\n      add\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_115:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x15\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x59, 0x24b73b30b634b21032b6b2b933b2b731bc902824a7)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_15:\n      jumpi(tag_35, callvalue)\n      jumpi(tag_35, slt(add(not(0x03), calldatasize), 0x60))\n      calldataload(0x04)\n      calldataload(0x24)\n      0xffffffffffffffff\n      dup2\n      gt\n      tag_35\n      jumpi\n      tag_123\n      swap1\n      calldatasize\n      swap1\n      0x04\n      add\n      tag_2\n      jump\t// in\n    tag_123:\n      swap1\n      calldataload(0x44)\n      0xffffffffffffffff\n      dup2\n      gt\n      tag_35\n      jumpi\n      tag_126\n      swap1\n      calldatasize\n      swap1\n      0x04\n      add\n      tag_2\n      jump\t// in\n    tag_126:\n      swap1\n        /* \"healthr.sol\":5182:5242  require(_patientId < nextPatientId, \"Record does not exist\") */\n      tag_127\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      sload(0x01)\n        /* \"healthr.sol\":5190:5216  _patientId < nextPatientId */\n      dup3\n      lt\n        /* \"healthr.sol\":5182:5242  require(_patientId < nextPatientId, \"Record does not exist\") */\n      tag_8\n      jump\t// in\n    tag_127:\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      0x00\n      mstore\n      mstore(0x20, 0x00)\n      keccak256(0x00, 0x40)\n        /* \"healthr.sol\":5426:5464  record.authorizedProviders[msg.sender] */\n      swap1\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n        /* \"healthr.sol\":5453:5463  msg.sender */\n      caller\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      and\n      0x00\n      mstore\n        /* \"healthr.sol\":5426:5452  record.authorizedProviders */\n      0x03\n      dup3\n      add\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      0x20\n      mstore\n      and(sload(keccak256(0x00, 0x40)), 0xff)\n        /* \"healthr.sol\":5426:5494  record.authorizedProviders[msg.sender] && msg.sender != record.owner */\n      dup1\n      tag_128\n      jumpi\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n    tag_129:\n      iszero\n      tag_130\n      jumpi\n      0x20\n      swap3\n      0x04\n      tag_132\n      swap3\n      mload(0x40)\n        /* \"healthr.sol\":5620:5649  abi.encodePacked(_fieldValue) */\n      tag_133\n      dup8\n      dup3\n      dup2\n      dup1\n      dup3\n      add\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      swap6\n      dup1\n      mload\n      swap2\n      dup3\n      swap2\n      add\n      dup8\n      mcopy\n      dup2\n      add\n      0x00\n      dup4\n      dup3\n      add\n      mstore\n        /* \"healthr.sol\":5620:5649  abi.encodePacked(_fieldValue) */\n      sub\n      add\n      not(0x1f)\n      dup2\n      add\n      dup4\n      mstore\n      dup3\n      tag_1\n      jump\t// in\n    tag_133:\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      mload\n        /* \"healthr.sol\":5610:5650  keccak256(abi.encodePacked(_fieldValue)) */\n      swap1\n      keccak256\n        /* \"healthr.sol\":5668:5686  record.fieldHashes */\n      swap4\n      add\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      swap1\n      tag_9\n      jump\t// in\n    tag_132:\n      sload\n        /* \"healthr.sol\":5668:5714  record.fieldHashes[_fieldName] == expectedHash */\n      eq\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_130:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x2c\n      0x24\n      dup3\n      add\n      mstore\n      0x4f6e6c7920617574686f72697a65642070726f7669646572732063616e207665\n      0x44\n      dup3\n      add\n      mstore\n      shl(0xa0, 0x72696679207265636f726473)\n      0x64\n      dup3\n      add\n      mstore\n      0x84\n      swap1\n      revert\n        /* \"healthr.sol\":5426:5494  record.authorizedProviders[msg.sender] && msg.sender != record.owner */\n    tag_128:\n      pop\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      0x01\n        /* \"healthr.sol\":5482:5494  record.owner */\n      dup3\n      add\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"healthr.sol\":5453:5463  msg.sender */\n      caller\n        /* \"healthr.sol\":5468:5494  msg.sender != record.owner */\n      eq\n      iszero\n        /* \"healthr.sol\":5426:5494  record.authorizedProviders[msg.sender] && msg.sender != record.owner */\n      jump(tag_129)\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n    tag_1:\n      swap1\n      0x1f\n        /* \"healthr.sol\":5620:5649  abi.encodePacked(_fieldValue) */\n      dup1\n      not\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      swap2\n      add\n      and\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_134\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_134:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_2:\n      dup2\n      0x1f\n      dup3\n      add\n      slt\n      iszero\n      tag_35\n      jumpi\n      dup1\n      calldataload\n      swap1\n      0xffffffffffffffff\n      dup3\n      gt\n      tag_134\n      jumpi\n      mload(0x40)\n      swap3\n      tag_140\n        /* \"healthr.sol\":5620:5649  abi.encodePacked(_fieldValue) */\n      0x1f\n        /* \"healthr.sol\":61:5725  contract Healthr {... */\n      dup5\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup6\n      tag_1\n      jump\t// in\n    tag_140:\n      dup3\n      dup5\n      mstore\n      0x20\n      dup4\n      dup4\n      add\n      add\n      gt\n      tag_35\n      jumpi\n      dup2\n      0x00\n      swap3\n      0x20\n      dup1\n      swap4\n      add\n      dup4\n      dup7\n      add\n      calldatacopy\n      dup4\n      add\n      add\n      mstore\n      swap1\n      jump\t// out\n    tag_3:\n      swap1\n      0x40\n      not(0x03)\n      dup4\n      add\n      slt\n      tag_35\n      jumpi\n      calldataload(0x04)\n      swap2\n      calldataload(0x24)\n      swap1\n      0xffffffffffffffff\n      dup3\n      gt\n      tag_35\n      jumpi\n      tag_147\n      swap2\n      0x04\n      add\n      tag_2\n      jump\t// in\n    tag_147:\n      swap1\n      jump\t// out\n    tag_4:\n      0xffffffffffffffff\n      dup2\n      gt\n      tag_134\n      jumpi\n      0x05\n      shl\n      0x20\n      add\n      swap1\n      jump\t// out\n    tag_5:\n      swap1\n      dup1\n      0x1f\n      dup4\n      add\n      slt\n      iszero\n      tag_35\n      jumpi\n      dup2\n      calldataload\n      tag_152\n      dup2\n      tag_4\n      jump\t// in\n    tag_152:\n      swap3\n      tag_153\n      mload(0x40)\n      swap5\n      dup6\n      tag_1\n      jump\t// in\n    tag_153:\n      dup2\n      dup5\n      mstore\n      0x20\n      dup1\n      dup6\n      add\n      swap3\n      0x05\n      shl\n      dup3\n      add\n      add\n      swap3\n      dup4\n      gt\n      tag_35\n      jumpi\n      0x20\n      add\n      swap1\n    tag_156:\n      dup3\n      dup3\n      lt\n      tag_157\n      jumpi\n      pop\n      pop\n      pop\n      swap1\n      jump\t// out\n    tag_157:\n      dup2\n      calldataload\n      dup2\n      mstore\n      0x20\n      swap2\n      dup3\n      add\n      swap2\n      add\n      jump(tag_156)\n    tag_6:\n      swap1\n      dup1\n      0x1f\n      dup4\n      add\n      slt\n      iszero\n      tag_35\n      jumpi\n      dup2\n      calldataload\n      tag_161\n      dup2\n      tag_4\n      jump\t// in\n    tag_161:\n      swap3\n      tag_162\n      mload(0x40)\n      swap5\n      dup6\n      tag_1\n      jump\t// in\n    tag_162:\n      dup2\n      dup5\n      mstore\n      0x20\n      dup1\n      dup6\n      add\n      swap3\n      0x05\n      shl\n      dup3\n      add\n      add\n      swap2\n      dup4\n      dup4\n      gt\n      tag_35\n      jumpi\n      0x20\n      dup3\n      add\n      swap1\n    tag_165:\n      dup4\n      dup3\n      lt\n      tag_166\n      jumpi\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      jump\t// out\n    tag_166:\n      dup2\n      calldataload\n      0xffffffffffffffff\n      dup2\n      gt\n      tag_35\n      jumpi\n      0x20\n      swap2\n      tag_170\n      dup8\n      dup5\n      dup1\n      swap5\n      dup9\n      add\n      add\n      tag_2\n      jump\t// in\n    tag_170:\n      dup2\n      mstore\n      add\n      swap2\n      add\n      swap1\n      jump(tag_165)\n    tag_7:\n      0x40\n      swap1\n      not(0x03)\n      add\n      slt\n      tag_35\n      jumpi\n      calldataload(0x04)\n      swap1\n      calldataload(0x24)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      dup2\n      sub\n      tag_35\n      jumpi\n      swap1\n      jump\t// out\n    tag_8:\n      iszero\n      tag_175\n      jumpi\n      jump\t// out\n    tag_175:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x15\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x5a, 0x149958dbdc9908191bd95cc81b9bdd08195e1a5cdd)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_9:\n      mload(0x40)\n      dup2\n      mload\n      swap1\n      swap3\n      0x20\n      swap3\n      dup5\n      swap3\n      swap1\n      dup2\n      swap1\n      dup6\n      add\n      dup5\n      mcopy\n      dup3\n      add\n      swap1\n      dup2\n      mstore\n      sub\n      add\n      swap1\n      keccak256\n      swap1\n      jump\t// out\n    tag_10:\n      iszero\n      tag_177\n      jumpi\n      jump\t// out\n    tag_177:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x18\n      0x24\n      dup3\n      add\n      mstore\n      0x4d69736d6174636820696e206669656c6420636f756e74730000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_11:\n      dup1\n      mload\n      dup3\n      lt\n      iszero\n      tag_179\n      jumpi\n      0x20\n      swap2\n      0x05\n      shl\n      add\n      add\n      swap1\n      jump\t// out\n    tag_179:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_12:\n      iszero\n      tag_181\n      jumpi\n      jump\t// out\n    tag_181:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x17\n      0x24\n      dup3\n      add\n      mstore\n      0x4f6e6c792070617469656e742063616e206d6f64696679000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n\n    auxdata: 0xa2646970667358221220390db10fc9df92088fd2b1c61e9143bbe6a1b2b9827357e89e36f3ade537f61c64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60808060405234601557610bb3908161001a8239f35b5f80fdfe60806040526004361015610011575f80fd5b5f3560e01c80631b424e7a146107345780633c2bc6a11461068857806363893e461461055f57806365dd152c1461045757806365e87a1914610343578063b113179514610326578063b38deff0146102a8578063b39e07e4146101f9578063d3d188a1146101915763d9a5ec1b14610087575f80fd5b3461018d5761009536610a34565b815f525f6020526100b660018060a01b03600160405f200154163314610b31565b6100c36001548310610a5a565b5f828152602081815260408083206001600160a01b038516845260030190915290205460ff1615610148575f828152602081815260408083206001600160a01b03909416808452600394909401825291829020805460ff1916905590519182527f125883b94692baebecad9f111ed97ffa626523bbbadc6b0ef85ee1b56b9e52d591a2005b60405162461bcd60e51b815260206004820152601760248201527f50726f7669646572206e6f7420617574686f72697a65640000000000000000006044820152606490fd5b5f80fd5b3461018d57602036600319011261018d576004355f525f60205260c060405f2080549060018060a01b036001820154169060028101546005820154906007600684015493015493604051958652602086015260408501526060840152608083015260a0820152f35b3461018d57602036600319011261018d5760043561021a6001548210610a5a565b5f525f60205260405f2060018060a01b036001820154163314801561028e575b15610258578060066002604093015491015482519182526020820152f35b60405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606490fd5b50335f90815260038201602052604090205460ff1661023a565b3461018d576102b63661090d565b815f525f6020526102d760018060a01b03600160405f200154163314610b31565b6102e46001548310610a5a565b6040516103106020828180820195805191829101875e81015f838201520301601f198101835282610881565b519020905f525f602052600760405f2001555f80f35b3461018d575f36600319011261018d576020600154604051908152f35b3461018d57608036600319011261018d5760243560043560443567ffffffffffffffff811161018d5761037a903690600401610958565b60643567ffffffffffffffff811161018d579061039c849236906004016109b5565b90835f525f6020526103be60018060a01b03600160405f200154163314610b31565b6103cb6001548510610a5a565b6103d88151835114610abd565b835f525f60205260405f209383600286015542600686015560045f9501945b8351811015610429578061040d60019285610b09565b516104228861041c8489610b09565b51610a9e565b55016103f7565b507f0fef1e979d0b74e703ce41335e4adc7465be6b6511ce6870d8d76b85a2cd987c602085604051908152a2005b3461018d5761046536610a34565b815f525f60205261048660018060a01b03600160405f200154163314610b31565b6104936001548310610a5a565b5f828152602081815260408083206001600160a01b038516845260030190915290205460ff1661051a575f828152602081815260408083206001600160a01b03909416808452600394909401825291829020805460ff1916600117905590519182527f3c3a9147a1fc73dd51a32f4d10c43d457e8cb826eb6f35cac6349eb965ba82b491a2005b60405162461bcd60e51b815260206004820152601b60248201527f50726f766964657220616c726561647920617574686f72697a656400000000006044820152606490fd5b3461018d57606036600319011261018d5760043560243567ffffffffffffffff811161018d57610593903690600401610958565b60443567ffffffffffffffff811161018d576105b4839136906004016109b5565b6105c18351825114610abd565b60015492835f525f60205260405f209380855560018501336bffffffffffffffffffffffff60a01b82541617905583600286015542600686015560045f9501945b835181101561062e578061061860019285610b09565b516106278861041c8489610b09565b5501610602565b50836001545f198114610674577fbbf4486ce56a8bb18798d25a2ef88158d76aac87bfb156491906d126855f4428916001604092016001558151903382526020820152a2005b634e487b7160e01b5f52601160045260245ffd5b3461018d576106963661090d565b906106a46001548210610a5a565b5f525f60205260405f20906040516106db6020828180820195805191829101875e81015f838201520301601f198101835282610881565b5190206007820154036106f75760026020910154604051908152f35b60405162461bcd60e51b815260206004820152601560248201527424b73b30b634b21032b6b2b933b2b731bc902824a760591b6044820152606490fd5b3461018d57606036600319011261018d5760043560243567ffffffffffffffff811161018d576107689036906004016108b7565b9060443567ffffffffffffffff811161018d576107899036906004016108b7565b906107976001548210610a5a565b5f525f60205260405f209060018060a01b0333165f526003820160205260ff60405f2054168061086a575b15610810576020926004610806926040516107fb87828180820195805191829101875e81015f838201520301601f198101835282610881565b519020930190610a9e565b5414604051908152f35b60405162461bcd60e51b815260206004820152602c60248201527f4f6e6c7920617574686f72697a65642070726f7669646572732063616e20766560448201526b72696679207265636f72647360a01b6064820152608490fd5b5060018201546001600160a01b03163314156107c2565b90601f8019910116810190811067ffffffffffffffff8211176108a357604052565b634e487b7160e01b5f52604160045260245ffd5b81601f8201121561018d5780359067ffffffffffffffff82116108a357604051926108ec601f8401601f191660200185610881565b8284526020838301011161018d57815f926020809301838601378301015290565b90604060031983011261018d57600435916024359067ffffffffffffffff821161018d5761093d916004016108b7565b90565b67ffffffffffffffff81116108a35760051b60200190565b9080601f8301121561018d57813561096f81610940565b9261097d6040519485610881565b81845260208085019260051b82010192831161018d57602001905b8282106109a55750505090565b8135815260209182019101610998565b9080601f8301121561018d5781356109cc81610940565b926109da6040519485610881565b81845260208085019260051b8201019183831161018d5760208201905b838210610a0657505050505090565b813567ffffffffffffffff811161018d57602091610a29878480948801016108b7565b8152019101906109f7565b604090600319011261018d57600435906024356001600160a01b038116810361018d5790565b15610a6157565b60405162461bcd60e51b8152602060048201526015602482015274149958dbdc9908191bd95cc81b9bdd08195e1a5cdd605a1b6044820152606490fd5b6040518151909260209284929081908501845e82019081520301902090565b15610ac457565b60405162461bcd60e51b815260206004820152601860248201527f4d69736d6174636820696e206669656c6420636f756e747300000000000000006044820152606490fd5b8051821015610b1d5760209160051b010190565b634e487b7160e01b5f52603260045260245ffd5b15610b3857565b60405162461bcd60e51b815260206004820152601760248201527f4f6e6c792070617469656e742063616e206d6f646966790000000000000000006044820152606490fdfea2646970667358221220390db10fc9df92088fd2b1c61e9143bbe6a1b2b9827357e89e36f3ade537f61c64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x15 JUMPI PUSH2 0xBB3 SWAP1 DUP2 PUSH2 0x1A DUP3 CODECOPY RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x11 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1B424E7A EQ PUSH2 0x734 JUMPI DUP1 PUSH4 0x3C2BC6A1 EQ PUSH2 0x688 JUMPI DUP1 PUSH4 0x63893E46 EQ PUSH2 0x55F JUMPI DUP1 PUSH4 0x65DD152C EQ PUSH2 0x457 JUMPI DUP1 PUSH4 0x65E87A19 EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0xB1131795 EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0xB38DEFF0 EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0xB39E07E4 EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0xD3D188A1 EQ PUSH2 0x191 JUMPI PUSH4 0xD9A5EC1B EQ PUSH2 0x87 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x18D JUMPI PUSH2 0x95 CALLDATASIZE PUSH2 0xA34 JUMP JUMPDEST DUP2 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH2 0xB6 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD AND CALLER EQ PUSH2 0xB31 JUMP JUMPDEST PUSH2 0xC3 PUSH1 0x1 SLOAD DUP4 LT PUSH2 0xA5A JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE PUSH1 0x3 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x148 JUMPI PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP1 DUP5 MSTORE PUSH1 0x3 SWAP5 SWAP1 SWAP5 ADD DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP1 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x125883B94692BAEBECAD9F111ED97FFA626523BBBADC6B0EF85EE1B56B9E52D5 SWAP2 LOG2 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F7669646572206E6F7420617574686F72697A6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x18D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18D JUMPI PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0xC0 PUSH1 0x40 PUSH0 KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 DUP3 ADD SLOAD AND SWAP1 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x5 DUP3 ADD SLOAD SWAP1 PUSH1 0x7 PUSH1 0x6 DUP5 ADD SLOAD SWAP4 ADD SLOAD SWAP4 PUSH1 0x40 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x18D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18D JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x21A PUSH1 0x1 SLOAD DUP3 LT PUSH2 0xA5A JUMP JUMPDEST PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 DUP3 ADD SLOAD AND CALLER EQ DUP1 ISZERO PUSH2 0x28E JUMPI JUMPDEST ISZERO PUSH2 0x258 JUMPI DUP1 PUSH1 0x6 PUSH1 0x2 PUSH1 0x40 SWAP4 ADD SLOAD SWAP2 ADD SLOAD DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x23A JUMP JUMPDEST CALLVALUE PUSH2 0x18D JUMPI PUSH2 0x2B6 CALLDATASIZE PUSH2 0x90D JUMP JUMPDEST DUP2 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH2 0x2D7 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD AND CALLER EQ PUSH2 0xB31 JUMP JUMPDEST PUSH2 0x2E4 PUSH1 0x1 SLOAD DUP4 LT PUSH2 0xA5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x310 PUSH1 0x20 DUP3 DUP2 DUP1 DUP3 ADD SWAP6 DUP1 MLOAD SWAP2 DUP3 SWAP2 ADD DUP8 MCOPY DUP2 ADD PUSH0 DUP4 DUP3 ADD MSTORE SUB ADD PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x881 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x7 PUSH1 0x40 PUSH0 KECCAK256 ADD SSTORE PUSH0 DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x18D JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18D JUMPI PUSH1 0x20 PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x18D JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18D JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x18D JUMPI PUSH2 0x37A SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x958 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x18D JUMPI SWAP1 PUSH2 0x39C DUP5 SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x9B5 JUMP JUMPDEST SWAP1 DUP4 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH2 0x3BE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD AND CALLER EQ PUSH2 0xB31 JUMP JUMPDEST PUSH2 0x3CB PUSH1 0x1 SLOAD DUP6 LT PUSH2 0xA5A JUMP JUMPDEST PUSH2 0x3D8 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xABD JUMP JUMPDEST DUP4 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP4 DUP4 PUSH1 0x2 DUP7 ADD SSTORE TIMESTAMP PUSH1 0x6 DUP7 ADD SSTORE PUSH1 0x4 PUSH0 SWAP6 ADD SWAP5 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x429 JUMPI DUP1 PUSH2 0x40D PUSH1 0x1 SWAP3 DUP6 PUSH2 0xB09 JUMP JUMPDEST MLOAD PUSH2 0x422 DUP9 PUSH2 0x41C DUP5 DUP10 PUSH2 0xB09 JUMP JUMPDEST MLOAD PUSH2 0xA9E JUMP JUMPDEST SSTORE ADD PUSH2 0x3F7 JUMP JUMPDEST POP PUSH32 0xFEF1E979D0B74E703CE41335E4ADC7465BE6B6511CE6870D8D76B85A2CD987C PUSH1 0x20 DUP6 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 STOP JUMPDEST CALLVALUE PUSH2 0x18D JUMPI PUSH2 0x465 CALLDATASIZE PUSH2 0xA34 JUMP JUMPDEST DUP2 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH2 0x486 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD AND CALLER EQ PUSH2 0xB31 JUMP JUMPDEST PUSH2 0x493 PUSH1 0x1 SLOAD DUP4 LT PUSH2 0xA5A JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE PUSH1 0x3 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x51A JUMPI PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP1 DUP5 MSTORE PUSH1 0x3 SWAP5 SWAP1 SWAP5 ADD DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE SWAP1 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x3C3A9147A1FC73DD51A32F4D10C43D457E8CB826EB6F35CAC6349EB965BA82B4 SWAP2 LOG2 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F766964657220616C726561647920617574686F72697A65640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x18D JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18D JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x18D JUMPI PUSH2 0x593 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x958 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x18D JUMPI PUSH2 0x5B4 DUP4 SWAP2 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x9B5 JUMP JUMPDEST PUSH2 0x5C1 DUP4 MLOAD DUP3 MLOAD EQ PUSH2 0xABD JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP3 DUP4 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP4 DUP1 DUP6 SSTORE PUSH1 0x1 DUP6 ADD CALLER PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE DUP4 PUSH1 0x2 DUP7 ADD SSTORE TIMESTAMP PUSH1 0x6 DUP7 ADD SSTORE PUSH1 0x4 PUSH0 SWAP6 ADD SWAP5 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x62E JUMPI DUP1 PUSH2 0x618 PUSH1 0x1 SWAP3 DUP6 PUSH2 0xB09 JUMP JUMPDEST MLOAD PUSH2 0x627 DUP9 PUSH2 0x41C DUP5 DUP10 PUSH2 0xB09 JUMP JUMPDEST SSTORE ADD PUSH2 0x602 JUMP JUMPDEST POP DUP4 PUSH1 0x1 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0x674 JUMPI PUSH32 0xBBF4486CE56A8BB18798D25A2EF88158D76AAC87BFB156491906D126855F4428 SWAP2 PUSH1 0x1 PUSH1 0x40 SWAP3 ADD PUSH1 0x1 SSTORE DUP2 MLOAD SWAP1 CALLER DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG2 STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x18D JUMPI PUSH2 0x696 CALLDATASIZE PUSH2 0x90D JUMP JUMPDEST SWAP1 PUSH2 0x6A4 PUSH1 0x1 SLOAD DUP3 LT PUSH2 0xA5A JUMP JUMPDEST PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH1 0x40 MLOAD PUSH2 0x6DB PUSH1 0x20 DUP3 DUP2 DUP1 DUP3 ADD SWAP6 DUP1 MLOAD SWAP2 DUP3 SWAP2 ADD DUP8 MCOPY DUP2 ADD PUSH0 DUP4 DUP3 ADD MSTORE SUB ADD PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x881 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH1 0x7 DUP3 ADD SLOAD SUB PUSH2 0x6F7 JUMPI PUSH1 0x2 PUSH1 0x20 SWAP2 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x24B73B30B634B21032B6B2B933B2B731BC902824A7 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x18D JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18D JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x18D JUMPI PUSH2 0x768 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x8B7 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x18D JUMPI PUSH2 0x789 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x8B7 JUMP JUMPDEST SWAP1 PUSH2 0x797 PUSH1 0x1 SLOAD DUP3 LT PUSH2 0xA5A JUMP JUMPDEST PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB CALLER AND PUSH0 MSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND DUP1 PUSH2 0x86A JUMPI JUMPDEST ISZERO PUSH2 0x810 JUMPI PUSH1 0x20 SWAP3 PUSH1 0x4 PUSH2 0x806 SWAP3 PUSH1 0x40 MLOAD PUSH2 0x7FB DUP8 DUP3 DUP2 DUP1 DUP3 ADD SWAP6 DUP1 MLOAD SWAP2 DUP3 SWAP2 ADD DUP8 MCOPY DUP2 ADD PUSH0 DUP4 DUP3 ADD MSTORE SUB ADD PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x881 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP4 ADD SWAP1 PUSH2 0xA9E JUMP JUMPDEST SLOAD EQ PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920617574686F72697A65642070726F7669646572732063616E207665 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x72696679207265636F726473 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO PUSH2 0x7C2 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x8A3 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x18D JUMPI DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x8A3 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x8EC PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0x881 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x18D JUMPI DUP2 PUSH0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x40 PUSH1 0x3 NOT DUP4 ADD SLT PUSH2 0x18D JUMPI PUSH1 0x4 CALLDATALOAD SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x18D JUMPI PUSH2 0x93D SWAP2 PUSH1 0x4 ADD PUSH2 0x8B7 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x8A3 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x18D JUMPI DUP2 CALLDATALOAD PUSH2 0x96F DUP2 PUSH2 0x940 JUMP JUMPDEST SWAP3 PUSH2 0x97D PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x881 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x18D JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x9A5 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x998 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x18D JUMPI DUP2 CALLDATALOAD PUSH2 0x9CC DUP2 PUSH2 0x940 JUMP JUMPDEST SWAP3 PUSH2 0x9DA PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x881 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP2 DUP4 DUP4 GT PUSH2 0x18D JUMPI PUSH1 0x20 DUP3 ADD SWAP1 JUMPDEST DUP4 DUP3 LT PUSH2 0xA06 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x18D JUMPI PUSH1 0x20 SWAP2 PUSH2 0xA29 DUP8 DUP5 DUP1 SWAP5 DUP9 ADD ADD PUSH2 0x8B7 JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x9F7 JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x18D JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x18D JUMPI SWAP1 JUMP JUMPDEST ISZERO PUSH2 0xA61 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x149958DBDC9908191BD95CC81B9BDD08195E1A5CDD PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP2 MLOAD SWAP1 SWAP3 PUSH1 0x20 SWAP3 DUP5 SWAP3 SWAP1 DUP2 SWAP1 DUP6 ADD DUP5 MCOPY DUP3 ADD SWAP1 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0xAC4 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D69736D6174636820696E206669656C6420636F756E74730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0xB1D JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ISZERO PUSH2 0xB38 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792070617469656E742063616E206D6F64696679000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY 0xD 0xB1 0xF 0xC9 0xDF SWAP3 ADDMOD DUP16 0xD2 0xB1 0xC6 0x1E SWAP2 NUMBER 0xBB 0xE6 LOG1 0xB2 0xB9 DUP3 PUSH20 0x57E89E36F3ADE537F61C64736F6C634300081A00 CALLER ",
							"sourceMap": "61:5664:0:-:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode_array_bytes32_dyn": {
									"entryPoint": 2392,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_array_string_dyn": {
									"entryPoint": 2485,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_string": {
									"entryPoint": 2231,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_uint256t_address": {
									"entryPoint": 2612,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"abi_decode_uint256t_string": {
									"entryPoint": 2317,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"array_allocation_size_array_bytes32_dyn": {
									"entryPoint": 2368,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 2177,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"memory_array_index_access_bytes32_dyn": {
									"entryPoint": 2825,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"packed_hashed_string_uint256_to_string_uint": {
									"entryPoint": 2718,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"require_helper_stringliteral_1afb": {
									"entryPoint": 2865,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"require_helper_stringliteral_752d": {
									"entryPoint": 2650,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"require_helper_stringliteral_e57a": {
									"entryPoint": 2749,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361015610011575f80fd5b5f3560e01c80631b424e7a146107345780633c2bc6a11461068857806363893e461461055f57806365dd152c1461045757806365e87a1914610343578063b113179514610326578063b38deff0146102a8578063b39e07e4146101f9578063d3d188a1146101915763d9a5ec1b14610087575f80fd5b3461018d5761009536610a34565b815f525f6020526100b660018060a01b03600160405f200154163314610b31565b6100c36001548310610a5a565b5f828152602081815260408083206001600160a01b038516845260030190915290205460ff1615610148575f828152602081815260408083206001600160a01b03909416808452600394909401825291829020805460ff1916905590519182527f125883b94692baebecad9f111ed97ffa626523bbbadc6b0ef85ee1b56b9e52d591a2005b60405162461bcd60e51b815260206004820152601760248201527f50726f7669646572206e6f7420617574686f72697a65640000000000000000006044820152606490fd5b5f80fd5b3461018d57602036600319011261018d576004355f525f60205260c060405f2080549060018060a01b036001820154169060028101546005820154906007600684015493015493604051958652602086015260408501526060840152608083015260a0820152f35b3461018d57602036600319011261018d5760043561021a6001548210610a5a565b5f525f60205260405f2060018060a01b036001820154163314801561028e575b15610258578060066002604093015491015482519182526020820152f35b60405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606490fd5b50335f90815260038201602052604090205460ff1661023a565b3461018d576102b63661090d565b815f525f6020526102d760018060a01b03600160405f200154163314610b31565b6102e46001548310610a5a565b6040516103106020828180820195805191829101875e81015f838201520301601f198101835282610881565b519020905f525f602052600760405f2001555f80f35b3461018d575f36600319011261018d576020600154604051908152f35b3461018d57608036600319011261018d5760243560043560443567ffffffffffffffff811161018d5761037a903690600401610958565b60643567ffffffffffffffff811161018d579061039c849236906004016109b5565b90835f525f6020526103be60018060a01b03600160405f200154163314610b31565b6103cb6001548510610a5a565b6103d88151835114610abd565b835f525f60205260405f209383600286015542600686015560045f9501945b8351811015610429578061040d60019285610b09565b516104228861041c8489610b09565b51610a9e565b55016103f7565b507f0fef1e979d0b74e703ce41335e4adc7465be6b6511ce6870d8d76b85a2cd987c602085604051908152a2005b3461018d5761046536610a34565b815f525f60205261048660018060a01b03600160405f200154163314610b31565b6104936001548310610a5a565b5f828152602081815260408083206001600160a01b038516845260030190915290205460ff1661051a575f828152602081815260408083206001600160a01b03909416808452600394909401825291829020805460ff1916600117905590519182527f3c3a9147a1fc73dd51a32f4d10c43d457e8cb826eb6f35cac6349eb965ba82b491a2005b60405162461bcd60e51b815260206004820152601b60248201527f50726f766964657220616c726561647920617574686f72697a656400000000006044820152606490fd5b3461018d57606036600319011261018d5760043560243567ffffffffffffffff811161018d57610593903690600401610958565b60443567ffffffffffffffff811161018d576105b4839136906004016109b5565b6105c18351825114610abd565b60015492835f525f60205260405f209380855560018501336bffffffffffffffffffffffff60a01b82541617905583600286015542600686015560045f9501945b835181101561062e578061061860019285610b09565b516106278861041c8489610b09565b5501610602565b50836001545f198114610674577fbbf4486ce56a8bb18798d25a2ef88158d76aac87bfb156491906d126855f4428916001604092016001558151903382526020820152a2005b634e487b7160e01b5f52601160045260245ffd5b3461018d576106963661090d565b906106a46001548210610a5a565b5f525f60205260405f20906040516106db6020828180820195805191829101875e81015f838201520301601f198101835282610881565b5190206007820154036106f75760026020910154604051908152f35b60405162461bcd60e51b815260206004820152601560248201527424b73b30b634b21032b6b2b933b2b731bc902824a760591b6044820152606490fd5b3461018d57606036600319011261018d5760043560243567ffffffffffffffff811161018d576107689036906004016108b7565b9060443567ffffffffffffffff811161018d576107899036906004016108b7565b906107976001548210610a5a565b5f525f60205260405f209060018060a01b0333165f526003820160205260ff60405f2054168061086a575b15610810576020926004610806926040516107fb87828180820195805191829101875e81015f838201520301601f198101835282610881565b519020930190610a9e565b5414604051908152f35b60405162461bcd60e51b815260206004820152602c60248201527f4f6e6c7920617574686f72697a65642070726f7669646572732063616e20766560448201526b72696679207265636f72647360a01b6064820152608490fd5b5060018201546001600160a01b03163314156107c2565b90601f8019910116810190811067ffffffffffffffff8211176108a357604052565b634e487b7160e01b5f52604160045260245ffd5b81601f8201121561018d5780359067ffffffffffffffff82116108a357604051926108ec601f8401601f191660200185610881565b8284526020838301011161018d57815f926020809301838601378301015290565b90604060031983011261018d57600435916024359067ffffffffffffffff821161018d5761093d916004016108b7565b90565b67ffffffffffffffff81116108a35760051b60200190565b9080601f8301121561018d57813561096f81610940565b9261097d6040519485610881565b81845260208085019260051b82010192831161018d57602001905b8282106109a55750505090565b8135815260209182019101610998565b9080601f8301121561018d5781356109cc81610940565b926109da6040519485610881565b81845260208085019260051b8201019183831161018d5760208201905b838210610a0657505050505090565b813567ffffffffffffffff811161018d57602091610a29878480948801016108b7565b8152019101906109f7565b604090600319011261018d57600435906024356001600160a01b038116810361018d5790565b15610a6157565b60405162461bcd60e51b8152602060048201526015602482015274149958dbdc9908191bd95cc81b9bdd08195e1a5cdd605a1b6044820152606490fd5b6040518151909260209284929081908501845e82019081520301902090565b15610ac457565b60405162461bcd60e51b815260206004820152601860248201527f4d69736d6174636820696e206669656c6420636f756e747300000000000000006044820152606490fd5b8051821015610b1d5760209160051b010190565b634e487b7160e01b5f52603260045260245ffd5b15610b3857565b60405162461bcd60e51b815260206004820152601760248201527f4f6e6c792070617469656e742063616e206d6f646966790000000000000000006044820152606490fdfea2646970667358221220390db10fc9df92088fd2b1c61e9143bbe6a1b2b9827357e89e36f3ade537f61c64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x11 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1B424E7A EQ PUSH2 0x734 JUMPI DUP1 PUSH4 0x3C2BC6A1 EQ PUSH2 0x688 JUMPI DUP1 PUSH4 0x63893E46 EQ PUSH2 0x55F JUMPI DUP1 PUSH4 0x65DD152C EQ PUSH2 0x457 JUMPI DUP1 PUSH4 0x65E87A19 EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0xB1131795 EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0xB38DEFF0 EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0xB39E07E4 EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0xD3D188A1 EQ PUSH2 0x191 JUMPI PUSH4 0xD9A5EC1B EQ PUSH2 0x87 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x18D JUMPI PUSH2 0x95 CALLDATASIZE PUSH2 0xA34 JUMP JUMPDEST DUP2 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH2 0xB6 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD AND CALLER EQ PUSH2 0xB31 JUMP JUMPDEST PUSH2 0xC3 PUSH1 0x1 SLOAD DUP4 LT PUSH2 0xA5A JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE PUSH1 0x3 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x148 JUMPI PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP1 DUP5 MSTORE PUSH1 0x3 SWAP5 SWAP1 SWAP5 ADD DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP1 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x125883B94692BAEBECAD9F111ED97FFA626523BBBADC6B0EF85EE1B56B9E52D5 SWAP2 LOG2 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F7669646572206E6F7420617574686F72697A6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x18D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18D JUMPI PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0xC0 PUSH1 0x40 PUSH0 KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 DUP3 ADD SLOAD AND SWAP1 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x5 DUP3 ADD SLOAD SWAP1 PUSH1 0x7 PUSH1 0x6 DUP5 ADD SLOAD SWAP4 ADD SLOAD SWAP4 PUSH1 0x40 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x18D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18D JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x21A PUSH1 0x1 SLOAD DUP3 LT PUSH2 0xA5A JUMP JUMPDEST PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 DUP3 ADD SLOAD AND CALLER EQ DUP1 ISZERO PUSH2 0x28E JUMPI JUMPDEST ISZERO PUSH2 0x258 JUMPI DUP1 PUSH1 0x6 PUSH1 0x2 PUSH1 0x40 SWAP4 ADD SLOAD SWAP2 ADD SLOAD DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x23A JUMP JUMPDEST CALLVALUE PUSH2 0x18D JUMPI PUSH2 0x2B6 CALLDATASIZE PUSH2 0x90D JUMP JUMPDEST DUP2 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH2 0x2D7 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD AND CALLER EQ PUSH2 0xB31 JUMP JUMPDEST PUSH2 0x2E4 PUSH1 0x1 SLOAD DUP4 LT PUSH2 0xA5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x310 PUSH1 0x20 DUP3 DUP2 DUP1 DUP3 ADD SWAP6 DUP1 MLOAD SWAP2 DUP3 SWAP2 ADD DUP8 MCOPY DUP2 ADD PUSH0 DUP4 DUP3 ADD MSTORE SUB ADD PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x881 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x7 PUSH1 0x40 PUSH0 KECCAK256 ADD SSTORE PUSH0 DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x18D JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18D JUMPI PUSH1 0x20 PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x18D JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18D JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x18D JUMPI PUSH2 0x37A SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x958 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x18D JUMPI SWAP1 PUSH2 0x39C DUP5 SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x9B5 JUMP JUMPDEST SWAP1 DUP4 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH2 0x3BE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD AND CALLER EQ PUSH2 0xB31 JUMP JUMPDEST PUSH2 0x3CB PUSH1 0x1 SLOAD DUP6 LT PUSH2 0xA5A JUMP JUMPDEST PUSH2 0x3D8 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xABD JUMP JUMPDEST DUP4 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP4 DUP4 PUSH1 0x2 DUP7 ADD SSTORE TIMESTAMP PUSH1 0x6 DUP7 ADD SSTORE PUSH1 0x4 PUSH0 SWAP6 ADD SWAP5 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x429 JUMPI DUP1 PUSH2 0x40D PUSH1 0x1 SWAP3 DUP6 PUSH2 0xB09 JUMP JUMPDEST MLOAD PUSH2 0x422 DUP9 PUSH2 0x41C DUP5 DUP10 PUSH2 0xB09 JUMP JUMPDEST MLOAD PUSH2 0xA9E JUMP JUMPDEST SSTORE ADD PUSH2 0x3F7 JUMP JUMPDEST POP PUSH32 0xFEF1E979D0B74E703CE41335E4ADC7465BE6B6511CE6870D8D76B85A2CD987C PUSH1 0x20 DUP6 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 STOP JUMPDEST CALLVALUE PUSH2 0x18D JUMPI PUSH2 0x465 CALLDATASIZE PUSH2 0xA34 JUMP JUMPDEST DUP2 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH2 0x486 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD AND CALLER EQ PUSH2 0xB31 JUMP JUMPDEST PUSH2 0x493 PUSH1 0x1 SLOAD DUP4 LT PUSH2 0xA5A JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE PUSH1 0x3 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x51A JUMPI PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP1 DUP5 MSTORE PUSH1 0x3 SWAP5 SWAP1 SWAP5 ADD DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE SWAP1 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x3C3A9147A1FC73DD51A32F4D10C43D457E8CB826EB6F35CAC6349EB965BA82B4 SWAP2 LOG2 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F766964657220616C726561647920617574686F72697A65640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x18D JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18D JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x18D JUMPI PUSH2 0x593 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x958 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x18D JUMPI PUSH2 0x5B4 DUP4 SWAP2 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x9B5 JUMP JUMPDEST PUSH2 0x5C1 DUP4 MLOAD DUP3 MLOAD EQ PUSH2 0xABD JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP3 DUP4 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP4 DUP1 DUP6 SSTORE PUSH1 0x1 DUP6 ADD CALLER PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE DUP4 PUSH1 0x2 DUP7 ADD SSTORE TIMESTAMP PUSH1 0x6 DUP7 ADD SSTORE PUSH1 0x4 PUSH0 SWAP6 ADD SWAP5 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x62E JUMPI DUP1 PUSH2 0x618 PUSH1 0x1 SWAP3 DUP6 PUSH2 0xB09 JUMP JUMPDEST MLOAD PUSH2 0x627 DUP9 PUSH2 0x41C DUP5 DUP10 PUSH2 0xB09 JUMP JUMPDEST SSTORE ADD PUSH2 0x602 JUMP JUMPDEST POP DUP4 PUSH1 0x1 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0x674 JUMPI PUSH32 0xBBF4486CE56A8BB18798D25A2EF88158D76AAC87BFB156491906D126855F4428 SWAP2 PUSH1 0x1 PUSH1 0x40 SWAP3 ADD PUSH1 0x1 SSTORE DUP2 MLOAD SWAP1 CALLER DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG2 STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x18D JUMPI PUSH2 0x696 CALLDATASIZE PUSH2 0x90D JUMP JUMPDEST SWAP1 PUSH2 0x6A4 PUSH1 0x1 SLOAD DUP3 LT PUSH2 0xA5A JUMP JUMPDEST PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH1 0x40 MLOAD PUSH2 0x6DB PUSH1 0x20 DUP3 DUP2 DUP1 DUP3 ADD SWAP6 DUP1 MLOAD SWAP2 DUP3 SWAP2 ADD DUP8 MCOPY DUP2 ADD PUSH0 DUP4 DUP3 ADD MSTORE SUB ADD PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x881 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH1 0x7 DUP3 ADD SLOAD SUB PUSH2 0x6F7 JUMPI PUSH1 0x2 PUSH1 0x20 SWAP2 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x24B73B30B634B21032B6B2B933B2B731BC902824A7 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x18D JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18D JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x18D JUMPI PUSH2 0x768 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x8B7 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x18D JUMPI PUSH2 0x789 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x8B7 JUMP JUMPDEST SWAP1 PUSH2 0x797 PUSH1 0x1 SLOAD DUP3 LT PUSH2 0xA5A JUMP JUMPDEST PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB CALLER AND PUSH0 MSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND DUP1 PUSH2 0x86A JUMPI JUMPDEST ISZERO PUSH2 0x810 JUMPI PUSH1 0x20 SWAP3 PUSH1 0x4 PUSH2 0x806 SWAP3 PUSH1 0x40 MLOAD PUSH2 0x7FB DUP8 DUP3 DUP2 DUP1 DUP3 ADD SWAP6 DUP1 MLOAD SWAP2 DUP3 SWAP2 ADD DUP8 MCOPY DUP2 ADD PUSH0 DUP4 DUP3 ADD MSTORE SUB ADD PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x881 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP4 ADD SWAP1 PUSH2 0xA9E JUMP JUMPDEST SLOAD EQ PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920617574686F72697A65642070726F7669646572732063616E207665 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x72696679207265636F726473 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO PUSH2 0x7C2 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x8A3 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x18D JUMPI DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x8A3 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x8EC PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0x881 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x18D JUMPI DUP2 PUSH0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x40 PUSH1 0x3 NOT DUP4 ADD SLT PUSH2 0x18D JUMPI PUSH1 0x4 CALLDATALOAD SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x18D JUMPI PUSH2 0x93D SWAP2 PUSH1 0x4 ADD PUSH2 0x8B7 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x8A3 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x18D JUMPI DUP2 CALLDATALOAD PUSH2 0x96F DUP2 PUSH2 0x940 JUMP JUMPDEST SWAP3 PUSH2 0x97D PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x881 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x18D JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x9A5 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x998 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x18D JUMPI DUP2 CALLDATALOAD PUSH2 0x9CC DUP2 PUSH2 0x940 JUMP JUMPDEST SWAP3 PUSH2 0x9DA PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x881 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP2 DUP4 DUP4 GT PUSH2 0x18D JUMPI PUSH1 0x20 DUP3 ADD SWAP1 JUMPDEST DUP4 DUP3 LT PUSH2 0xA06 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x18D JUMPI PUSH1 0x20 SWAP2 PUSH2 0xA29 DUP8 DUP5 DUP1 SWAP5 DUP9 ADD ADD PUSH2 0x8B7 JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x9F7 JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x18D JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x18D JUMPI SWAP1 JUMP JUMPDEST ISZERO PUSH2 0xA61 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x149958DBDC9908191BD95CC81B9BDD08195E1A5CDD PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP2 MLOAD SWAP1 SWAP3 PUSH1 0x20 SWAP3 DUP5 SWAP3 SWAP1 DUP2 SWAP1 DUP6 ADD DUP5 MCOPY DUP3 ADD SWAP1 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0xAC4 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D69736D6174636820696E206669656C6420636F756E74730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0xB1D JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ISZERO PUSH2 0xB38 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792070617469656E742063616E206D6F64696679000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY 0xD 0xB1 0xF 0xC9 0xDF SWAP3 ADDMOD DUP16 0xD2 0xB1 0xC6 0x1E SWAP2 NUMBER 0xBB 0xE6 LOG1 0xB2 0xB9 DUP3 PUSH20 0x57E89E36F3ADE537F61C64736F6C634300081A00 CALLER ",
							"sourceMap": "61:5664:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;916:82;61:5664;;;;;938:32;61:5664;;;938:32;61:5664;;924:10;:46;916:82;:::i;:::-;3238:60;938:32;61:5664;3246:26;;3238:60;:::i;:::-;61:5664;;;;;;;;;;;;-1:-1:-1;;;;;61:5664:0;;;;3317:46;;61:5664;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;61:5664:0;;;;;;3317:46;3423;;;;61:5664;;;;;;;;-1:-1:-1;;61:5664:0;;;;;;;;3504:36;;;61:5664;;;;-1:-1:-1;;;61:5664:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;61:5664:0;;;;;;;;;;;;;;;;;;;;;;;;466:55;;61:5664;;466:55;;;;61:5664;466:55;;;61:5664;466:55;;;;;61:5664;466:55;;61:5664;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;61:5664:0;;;;;;4084:60;61:5664;;4092:26;;4084:60;:::i;:::-;61:5664;;;;;;;;;;;;;;4269:12;;61:5664;;4255:10;:26;:82;;;;61:5664;;;;4408:15;4425:16;4408:15;61:5664;4408:15;;61:5664;4425:16;;61:5664;;;;;;;;;;;;;;-1:-1:-1;;;61:5664:0;;;;;;;;;;;;-1:-1:-1;;;61:5664:0;;;;;;;4255:82;-1:-1:-1;4255:10:0;-1:-1:-1;61:5664:0;;;4299:26;;;61:5664;;;;;;;;4255:82;;61:5664;;;;;;;:::i;:::-;;;;;;;916:82;61:5664;;;;;938:32;61:5664;;;938:32;61:5664;;924:10;:46;916:82;:::i;:::-;3715:60;938:32;61:5664;3723:26;;3715:60;:::i;:::-;61:5664;;3842:22;61:5664;3842:22;;;;;61:5664;;;;;;;;;;;;;;;;3842:22;;5620:29;;3842:22;;;;;;:::i;:::-;61:5664;3832:33;;61:5664;;;;;;3786:43;61:5664;;;3786:43;61:5664;;;;;;;;;;-1:-1:-1;;61:5664:0;;;;;528:28;61:5664;;;;;;;;;;;;;-1:-1:-1;;61:5664:0;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;916:82;61:5664;;;;;;;;;938:32;61:5664;;924:10;:46;916:82;:::i;:::-;2055:60;61:5664;;2063:26;;2055:60;:::i;:::-;2126:78;61:5664;;;;2134:41;2126:78;:::i;:::-;61:5664;;;;;;;;;2293:15;;;;;61:5664;2350:15;2331:16;;;61:5664;;;2447:18;;2386:125;2427:3;61:5664;;2403:22;;;;;2484:15;;61:5664;2484:15;;;:::i;:::-;61:5664;;2466:14;;;;;:::i;:::-;;61:5664;:::i;:::-;;;2391:10;;2403:22;;2536:36;61:5664;2403:22;61:5664;;;;;2536:36;61:5664;;;;;;;;:::i;:::-;;;;;;;916:82;61:5664;;;;;938:32;61:5664;;;938:32;61:5664;;924:10;:46;916:82;:::i;:::-;2750:60;938:32;61:5664;2758:26;;2750:60;:::i;:::-;61:5664;;;;;;;;;;;;-1:-1:-1;;;;;61:5664:0;;;;2830:46;;61:5664;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;61:5664:0;;;;;;2830:46;2940;;;;61:5664;;;;;;;;-1:-1:-1;;61:5664:0;;;;;;;;;;3020:36;;;61:5664;;;;-1:-1:-1;;;61:5664:0;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;61:5664:0;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;1214:78;61:5664;;;;1222:41;1214:78;:::i;:::-;61:5664;;;;;;;;;;;;;;;;;1463:12;;1478:10;61:5664;;;;;;;;;1499:15;;;;61:5664;1556:15;1537:16;;;61:5664;;;1653:18;;1592:125;1633:3;61:5664;;1609:22;;;;;1690:15;;61:5664;1690:15;;;:::i;:::-;61:5664;;1672:14;;;;;:::i;61:5664::-;;;1597:10;;1609:22;;;61:5664;;;;;;;;1768:45;61:5664;;;;;;;;;1478:10;;61:5664;;;;;;1768:45;61:5664;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4634:60;4655:13;61:5664;4642:26;;4634:60;:::i;:::-;61:5664;;;;;;;;;;;4815:22;61:5664;4815:22;;;;;61:5664;;;;;;;;;;;;;;;;4815:22;;5620:29;;4815:22;;;;;;:::i;:::-;61:5664;4805:33;;4842:23;;;61:5664;4805:60;61:5664;;4942:15;61:5664;4942:15;;61:5664;;;;;;;;;;-1:-1:-1;;;61:5664:0;;;;;;;;;;;;-1:-1:-1;;;61:5664:0;;;;;;;;;;;;;-1:-1:-1;;61:5664:0;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;5182:60;61:5664;;5190:26;;5182:60;:::i;:::-;61:5664;;;;;;;;5426:38;61:5664;;;;;5453:10;61:5664;-1:-1:-1;61:5664:0;5426:26;;;61:5664;;;;-1:-1:-1;61:5664:0;;;5426:68;;;61:5664;;;;;;;;;;;5620:29;;;;;;;61:5664;;;;;;;;;;;;;;;;5620:29;;;;;;;;;;:::i;:::-;61:5664;5610:40;;5668:18;;61:5664;;:::i;:::-;;5668:46;61:5664;;;;;;;;;-1:-1:-1;;;61:5664:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;61:5664:0;;;;;;;5426:68;-1:-1:-1;61:5664:0;5482:12;;61:5664;-1:-1:-1;;;;;61:5664:0;5453:10;5468:26;;5426:68;;61:5664;;;5620:29;;61:5664;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;61:5664:0;;;;;-1:-1:-1;61:5664:0;;;;;;;;;;;;;;;;;;;;;;5620:29;61:5664;;-1:-1:-1;;61:5664:0;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;61:5664:0;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;61:5664:0;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;61:5664:0;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;61:5664:0;;;;;;;;;;;;-1:-1:-1;;;61:5664:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;61:5664:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;61:5664:0;;;;;;;;;;;;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "599000",
								"executionCost": "639",
								"totalCost": "599639"
							},
							"external": {
								"addPatientRecord(bytes32,bytes32[],string[])": "infinite",
								"emergencyAccess(uint256,string)": "infinite",
								"getRecordReference(uint256)": "11115",
								"grantAccess(uint256,address)": "32742",
								"nextPatientId()": "2358",
								"patientRecords(uint256)": "13141",
								"revokeAccess(uint256,address)": "32868",
								"setEmergencyPin(uint256,string)": "infinite",
								"updatePatientRecord(uint256,bytes32,bytes32[],string[])": "infinite",
								"verifyRecordField(uint256,string,string)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 61,
									"end": 5725,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 61,
									"end": 5725,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 61,
									"end": 5725,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 61,
									"end": 5725,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 61,
									"end": 5725,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 61,
									"end": 5725,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 61,
									"end": 5725,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 61,
									"end": 5725,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 5725,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 61,
									"end": 5725,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 61,
									"end": 5725,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 5725,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 61,
									"end": 5725,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 61,
									"end": 5725,
									"name": "RETURN",
									"source": 0
								},
								{
									"begin": 61,
									"end": 5725,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 61,
									"end": 5725,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 61,
									"end": 5725,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 5725,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 61,
									"end": 5725,
									"name": "REVERT",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220390db10fc9df92088fd2b1c61e9143bbe6a1b2b9827357e89e36f3ade537f61c64736f6c634300081a0033",
									".code": [
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "1B424E7A"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "3C2BC6A1"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "63893E46"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "65DD152C"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "65E87A19"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "B1131795"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "B38DEFF0"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "B39E07E4"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "D3D188A1"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "D9A5EC1B"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 61,
											"end": 5725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 916,
											"end": 998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 938,
											"end": 970,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 938,
											"end": 970,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 924,
											"end": 934,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 924,
											"end": 970,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 916,
											"end": 998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 916,
											"end": 998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 916,
											"end": 998,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 916,
											"end": 998,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3238,
											"end": 3298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 938,
											"end": 970,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3246,
											"end": 3272,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3246,
											"end": 3272,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3238,
											"end": 3298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3238,
											"end": 3298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3238,
											"end": 3298,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 3238,
											"end": 3298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3317,
											"end": 3363,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3317,
											"end": 3363,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3317,
											"end": 3363,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3423,
											"end": 3469,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 3423,
											"end": 3469,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3423,
											"end": 3469,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 3423,
											"end": 3469,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3504,
											"end": 3540,
											"name": "PUSH",
											"source": 0,
											"value": "125883B94692BAEBECAD9F111ED97FFA626523BBBADC6B0EF85EE1B56B9E52D5"
										},
										{
											"begin": 3504,
											"end": 3540,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3504,
											"end": 3540,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "50726F7669646572206E6F7420617574686F72697A6564000000000000000000"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 466,
											"end": 521,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 466,
											"end": 521,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 466,
											"end": 521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 466,
											"end": 521,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 466,
											"end": 521,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 466,
											"end": 521,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 466,
											"end": 521,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 466,
											"end": 521,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 466,
											"end": 521,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 466,
											"end": 521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 466,
											"end": 521,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 466,
											"end": 521,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 466,
											"end": 521,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 466,
											"end": 521,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 466,
											"end": 521,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 466,
											"end": 521,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 4084,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4092,
											"end": 4118,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4092,
											"end": 4118,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4084,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4084,
											"end": 4144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4084,
											"end": 4144,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 4084,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4269,
											"end": 4281,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4269,
											"end": 4281,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4255,
											"end": 4265,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4255,
											"end": 4281,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4255,
											"end": 4337,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4255,
											"end": 4337,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4255,
											"end": 4337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 4255,
											"end": 4337,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4408,
											"end": 4423,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4425,
											"end": 4441,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4408,
											"end": 4423,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4408,
											"end": 4423,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4408,
											"end": 4423,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4425,
											"end": 4441,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4425,
											"end": 4441,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "139BDD08185D5D1A1BDC9A5E9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4255,
											"end": 4337,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 4255,
											"end": 4337,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4255,
											"end": 4265,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4299,
											"end": 4325,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 4299,
											"end": 4325,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4299,
											"end": 4325,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4255,
											"end": 4337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 4255,
											"end": 4337,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 61,
											"end": 5725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 916,
											"end": 998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 938,
											"end": 970,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 938,
											"end": 970,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 924,
											"end": 934,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 924,
											"end": 970,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 916,
											"end": 998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 916,
											"end": 998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 916,
											"end": 998,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 916,
											"end": 998,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3715,
											"end": 3775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 938,
											"end": 970,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3723,
											"end": 3749,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3723,
											"end": 3749,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3715,
											"end": 3775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3715,
											"end": 3775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3715,
											"end": 3775,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 3715,
											"end": 3775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3842,
											"end": 3864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3842,
											"end": 3864,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3842,
											"end": 3864,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3842,
											"end": 3864,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3842,
											"end": 3864,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3842,
											"end": 3864,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MCOPY",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3842,
											"end": 3864,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3842,
											"end": 3864,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5620,
											"end": 5649,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5620,
											"end": 5649,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3842,
											"end": 3864,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3842,
											"end": 3864,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3842,
											"end": 3864,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3842,
											"end": 3864,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3842,
											"end": 3864,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3842,
											"end": 3864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3842,
											"end": 3864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3842,
											"end": 3864,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3842,
											"end": 3864,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3832,
											"end": 3865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3832,
											"end": 3865,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3829,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3829,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 528,
											"end": 556,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 61,
											"end": 5725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 61,
											"end": 5725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 916,
											"end": 998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 938,
											"end": 970,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 924,
											"end": 934,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 924,
											"end": 970,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 916,
											"end": 998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 916,
											"end": 998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 916,
											"end": 998,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 916,
											"end": 998,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2055,
											"end": 2115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2089,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2089,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2055,
											"end": 2115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2055,
											"end": 2115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2055,
											"end": 2115,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2055,
											"end": 2115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2175,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2126,
											"end": 2204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2204,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2126,
											"end": 2204,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2308,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2308,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2308,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2293,
											"end": 2308,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2365,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 2331,
											"end": 2347,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2331,
											"end": 2347,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2331,
											"end": 2347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2447,
											"end": 2465,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 2447,
											"end": 2465,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2511,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 2427,
											"end": 2430,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2427,
											"end": 2430,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2403,
											"end": 2425,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2403,
											"end": 2425,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2403,
											"end": 2425,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2403,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2403,
											"end": 2425,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2499,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2484,
											"end": 2499,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2499,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2484,
											"end": 2499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2499,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2484,
											"end": 2499,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2466,
											"end": 2480,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2466,
											"end": 2480,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2480,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2466,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2466,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2480,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 61,
											"end": 5725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2391,
											"end": 2401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2391,
											"end": 2401,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2403,
											"end": 2425,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2403,
											"end": 2425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2403,
											"end": 2425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2536,
											"end": 2572,
											"name": "PUSH",
											"source": 0,
											"value": "FEF1E979D0B74E703CE41335E4ADC7465BE6B6511CE6870D8D76B85A2CD987C"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2403,
											"end": 2425,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2536,
											"end": 2572,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 61,
											"end": 5725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 916,
											"end": 998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 938,
											"end": 970,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 938,
											"end": 970,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 924,
											"end": 934,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 924,
											"end": 970,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 916,
											"end": 998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 916,
											"end": 998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 916,
											"end": 998,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 916,
											"end": 998,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2750,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 938,
											"end": 970,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2758,
											"end": 2784,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2758,
											"end": 2784,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2750,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2750,
											"end": 2810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2750,
											"end": 2810,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2750,
											"end": 2810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2876,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2830,
											"end": 2876,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2876,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2940,
											"end": 2986,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 2940,
											"end": 2986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2940,
											"end": 2986,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 2940,
											"end": 2986,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3056,
											"name": "PUSH",
											"source": 0,
											"value": "3C3A9147A1FC73DD51A32F4D10C43D457E8CB826EB6F35CAC6349EB965BA82B4"
										},
										{
											"begin": 3020,
											"end": 3056,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3056,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "50726F766964657220616C726561647920617574686F72697A65640000000000"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 61,
											"end": 5725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 61,
											"end": 5725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1214,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1222,
											"end": 1263,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1214,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1214,
											"end": 1292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1214,
											"end": 1292,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1214,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1463,
											"end": 1475,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1463,
											"end": 1475,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1478,
											"end": 1488,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1499,
											"end": 1514,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1499,
											"end": 1514,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1499,
											"end": 1514,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1499,
											"end": 1514,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1556,
											"end": 1571,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1553,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1537,
											"end": 1553,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1553,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1653,
											"end": 1671,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 1653,
											"end": 1671,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1592,
											"end": 1717,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 1633,
											"end": 1636,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1633,
											"end": 1636,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1609,
											"end": 1631,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1609,
											"end": 1631,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1609,
											"end": 1631,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1609,
											"end": 1631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1609,
											"end": 1631,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1690,
											"end": 1705,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1690,
											"end": 1705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1690,
											"end": 1705,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1690,
											"end": 1705,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1690,
											"end": 1705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1690,
											"end": 1705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1690,
											"end": 1705,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1690,
											"end": 1705,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1672,
											"end": 1686,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 1672,
											"end": 1686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1672,
											"end": 1686,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1672,
											"end": 1686,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 1672,
											"end": 1686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1672,
											"end": 1686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1597,
											"end": 1607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1597,
											"end": 1607,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1609,
											"end": 1631,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1609,
											"end": 1631,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1609,
											"end": 1631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1609,
											"end": 1631,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1768,
											"end": 1813,
											"name": "PUSH",
											"source": 0,
											"value": "BBF4486CE56A8BB18798D25A2EF88158D76AAC87BFB156491906D126855F4428"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1478,
											"end": 1488,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1478,
											"end": 1488,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1768,
											"end": 1813,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B71"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 61,
											"end": 5725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4634,
											"end": 4694,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 4655,
											"end": 4668,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4668,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4668,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4634,
											"end": 4694,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4634,
											"end": 4694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4634,
											"end": 4694,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 4634,
											"end": 4694,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4815,
											"end": 4837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4815,
											"end": 4837,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4815,
											"end": 4837,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4815,
											"end": 4837,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4815,
											"end": 4837,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4815,
											"end": 4837,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MCOPY",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4815,
											"end": 4837,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4815,
											"end": 4837,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5620,
											"end": 5649,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5620,
											"end": 5649,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 4815,
											"end": 4837,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4815,
											"end": 4837,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4815,
											"end": 4837,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4815,
											"end": 4837,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4815,
											"end": 4837,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4815,
											"end": 4837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4815,
											"end": 4837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4815,
											"end": 4837,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 4815,
											"end": 4837,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4805,
											"end": 4838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4805,
											"end": 4838,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4842,
											"end": 4865,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4842,
											"end": 4865,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4842,
											"end": 4865,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4805,
											"end": 4865,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4942,
											"end": 4957,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4942,
											"end": 4957,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4942,
											"end": 4957,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "24B73B30B634B21032B6B2B933B2B731BC902824A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "59"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 61,
											"end": 5725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 61,
											"end": 5725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5182,
											"end": 5242,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5190,
											"end": 5216,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5190,
											"end": 5216,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5182,
											"end": 5242,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5182,
											"end": 5242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5182,
											"end": 5242,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 5182,
											"end": 5242,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5426,
											"end": 5464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5463,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5426,
											"end": 5452,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5426,
											"end": 5452,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5426,
											"end": 5452,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5426,
											"end": 5494,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5426,
											"end": 5494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 5426,
											"end": 5494,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5620,
											"end": 5649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 5620,
											"end": 5649,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5620,
											"end": 5649,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5620,
											"end": 5649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5620,
											"end": 5649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5620,
											"end": 5649,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5620,
											"end": 5649,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MCOPY",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5620,
											"end": 5649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5620,
											"end": 5649,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5620,
											"end": 5649,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5620,
											"end": 5649,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 5620,
											"end": 5649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5620,
											"end": 5649,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5620,
											"end": 5649,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5620,
											"end": 5649,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5620,
											"end": 5649,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5620,
											"end": 5649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5620,
											"end": 5649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5620,
											"end": 5649,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 5620,
											"end": 5649,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5610,
											"end": 5650,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5610,
											"end": 5650,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5668,
											"end": 5686,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 5668,
											"end": 5686,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 61,
											"end": 5725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5668,
											"end": 5714,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "2C"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "4F6E6C7920617574686F72697A65642070726F7669646572732063616E207665"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72696679207265636F726473"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5426,
											"end": 5494,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 5426,
											"end": 5494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5482,
											"end": 5494,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5482,
											"end": 5494,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5463,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5468,
											"end": 5494,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5468,
											"end": 5494,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5426,
											"end": 5494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 5426,
											"end": 5494,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5620,
											"end": 5649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5620,
											"end": 5649,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B71"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 5620,
											"end": 5649,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 5725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 61,
											"end": 5725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 5725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 5725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 5725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 5725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 61,
											"end": 5725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "149958DBDC9908191BD95CC81B9BDD08195E1A5CDD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MCOPY",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "4D69736D6174636820696E206669656C6420636F756E74730000000000000000"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B71"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "4F6E6C792070617469656E742063616E206D6F64696679000000000000000000"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5725,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"healthr.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addPatientRecord(bytes32,bytes32[],string[])": "63893e46",
							"emergencyAccess(uint256,string)": "3c2bc6a1",
							"getRecordReference(uint256)": "b39e07e4",
							"grantAccess(uint256,address)": "65dd152c",
							"nextPatientId()": "b1131795",
							"patientRecords(uint256)": "d3d188a1",
							"revokeAccess(uint256,address)": "d9a5ec1b",
							"setEmergencyPin(uint256,string)": "b38deff0",
							"updatePatientRecord(uint256,bytes32,bytes32[],string[])": "65e87a19",
							"verifyRecordField(uint256,string,string)": "1b424e7a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"patientId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"}],\"name\":\"AccessGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"patientId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"}],\"name\":\"AccessRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"patientId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"ipfsHash\",\"type\":\"bytes32\"}],\"name\":\"RecordAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"patientId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"ipfsHash\",\"type\":\"bytes32\"}],\"name\":\"RecordUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_ipfsHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"_fieldHashes\",\"type\":\"bytes32[]\"},{\"internalType\":\"string[]\",\"name\":\"_fieldNames\",\"type\":\"string[]\"}],\"name\":\"addPatientRecord\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_patientId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_pin\",\"type\":\"string\"}],\"name\":\"emergencyAccess\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"ipfsHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_patientId\",\"type\":\"uint256\"}],\"name\":\"getRecordReference\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"ipfsHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_patientId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_provider\",\"type\":\"address\"}],\"name\":\"grantAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextPatientId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"patientRecords\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"patientId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"ipfsHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"accessLevel\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"emergencyPinHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_patientId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_provider\",\"type\":\"address\"}],\"name\":\"revokeAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_patientId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_pin\",\"type\":\"string\"}],\"name\":\"setEmergencyPin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_patientId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_ipfsHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"_fieldHashes\",\"type\":\"bytes32[]\"},{\"internalType\":\"string[]\",\"name\":\"_fieldNames\",\"type\":\"string[]\"}],\"name\":\"updatePatientRecord\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_patientId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_fieldName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_fieldValue\",\"type\":\"string\"}],\"name\":\"verifyRecordField\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"healthr.sol\":\"Healthr\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"healthr.sol\":{\"keccak256\":\"0x7a29d9e458e45b453560ece96dc5c9aec8e8ea154ac61c59d9319641a4e2d6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1909b359916c90618dbb34c2dca2fbd755da0e639ff2c0ef22178a6d83d7decc\",\"dweb:/ipfs/QmYmL1GuzZa2tkp66CNHEP6WGeqSyzoHhv4QvGHgFwYodj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 27,
								"contract": "healthr.sol:Healthr",
								"label": "patientRecords",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_struct(PatientRecord)22_storage)"
							},
							{
								"astId": 29,
								"contract": "healthr.sol:Healthr",
								"label": "nextPatientId",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_string_memory_ptr,t_bytes32)": {
								"encoding": "mapping",
								"key": "t_string_memory_ptr",
								"label": "mapping(string => bytes32)",
								"numberOfBytes": "32",
								"value": "t_bytes32"
							},
							"t_mapping(t_uint256,t_struct(PatientRecord)22_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Healthr.PatientRecord)",
								"numberOfBytes": "32",
								"value": "t_struct(PatientRecord)22_storage"
							},
							"t_string_memory_ptr": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(PatientRecord)22_storage": {
								"encoding": "inplace",
								"label": "struct Healthr.PatientRecord",
								"members": [
									{
										"astId": 3,
										"contract": "healthr.sol:Healthr",
										"label": "patientId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 5,
										"contract": "healthr.sol:Healthr",
										"label": "owner",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 7,
										"contract": "healthr.sol:Healthr",
										"label": "ipfsHash",
										"offset": 0,
										"slot": "2",
										"type": "t_bytes32"
									},
									{
										"astId": 11,
										"contract": "healthr.sol:Healthr",
										"label": "authorizedProviders",
										"offset": 0,
										"slot": "3",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 15,
										"contract": "healthr.sol:Healthr",
										"label": "fieldHashes",
										"offset": 0,
										"slot": "4",
										"type": "t_mapping(t_string_memory_ptr,t_bytes32)"
									},
									{
										"astId": 17,
										"contract": "healthr.sol:Healthr",
										"label": "accessLevel",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 19,
										"contract": "healthr.sol:Healthr",
										"label": "timestamp",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 21,
										"contract": "healthr.sol:Healthr",
										"label": "emergencyPinHash",
										"offset": 0,
										"slot": "7",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"healthr.sol": {
				"ast": {
					"absolutePath": "healthr.sol",
					"exportedSymbols": {
						"Healthr": [
							506
						]
					},
					"id": 507,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Healthr",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 506,
							"linearizedBaseContracts": [
								506
							],
							"name": "Healthr",
							"nameLocation": "70:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Healthr.PatientRecord",
									"id": 22,
									"members": [
										{
											"constant": false,
											"id": 3,
											"mutability": "mutable",
											"name": "patientId",
											"nameLocation": "125:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 22,
											"src": "117:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "117:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5,
											"mutability": "mutable",
											"name": "owner",
											"nameLocation": "153:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 22,
											"src": "145:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 4,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "145:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 7,
											"mutability": "mutable",
											"name": "ipfsHash",
											"nameLocation": "177:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 22,
											"src": "169:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 6,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "169:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 11,
											"mutability": "mutable",
											"name": "authorizedProviders",
											"nameLocation": "261:19:0",
											"nodeType": "VariableDeclaration",
											"scope": 22,
											"src": "236:44:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 10,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "244:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "236:24:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 9,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "255:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 15,
											"mutability": "mutable",
											"name": "fieldHashes",
											"nameLocation": "318:11:0",
											"nodeType": "VariableDeclaration",
											"scope": 22,
											"src": "291:38:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bytes32_$",
												"typeString": "mapping(string => bytes32)"
											},
											"typeName": {
												"id": 14,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 12,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "299:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"nodeType": "Mapping",
												"src": "291:26:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bytes32_$",
													"typeString": "mapping(string => bytes32)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 13,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "309:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 17,
											"mutability": "mutable",
											"name": "accessLevel",
											"nameLocation": "376:11:0",
											"nodeType": "VariableDeclaration",
											"scope": 22,
											"src": "368:19:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 16,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "368:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 19,
											"mutability": "mutable",
											"name": "timestamp",
											"nameLocation": "406:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 22,
											"src": "398:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 18,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "398:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 21,
											"mutability": "mutable",
											"name": "emergencyPinHash",
											"nameLocation": "434:16:0",
											"nodeType": "VariableDeclaration",
											"scope": 22,
											"src": "426:24:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 20,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "426:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PatientRecord",
									"nameLocation": "92:13:0",
									"nodeType": "StructDefinition",
									"scope": 506,
									"src": "85:373:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d3d188a1",
									"id": 27,
									"mutability": "mutable",
									"name": "patientRecords",
									"nameLocation": "507:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 506,
									"src": "466:55:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PatientRecord_$22_storage_$",
										"typeString": "mapping(uint256 => struct Healthr.PatientRecord)"
									},
									"typeName": {
										"id": 26,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 23,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "474:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "466:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PatientRecord_$22_storage_$",
											"typeString": "mapping(uint256 => struct Healthr.PatientRecord)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 25,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 24,
												"name": "PatientRecord",
												"nameLocations": [
													"485:13:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 22,
												"src": "485:13:0"
											},
											"referencedDeclaration": 22,
											"src": "485:13:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_PatientRecord_$22_storage_ptr",
												"typeString": "struct Healthr.PatientRecord"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b1131795",
									"id": 29,
									"mutability": "mutable",
									"name": "nextPatientId",
									"nameLocation": "543:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 506,
									"src": "528:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 28,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "528:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "bbf4486ce56a8bb18798d25a2ef88158d76aac87bfb156491906d126855f4428",
									"id": 37,
									"name": "RecordAdded",
									"nameLocation": "571:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"indexed": true,
												"mutability": "mutable",
												"name": "patientId",
												"nameLocation": "599:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "583:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 30,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "583:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 33,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "618:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "610:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "610:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 35,
												"indexed": false,
												"mutability": "mutable",
												"name": "ipfsHash",
												"nameLocation": "633:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "625:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 34,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "625:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "582:60:0"
									},
									"src": "565:78:0"
								},
								{
									"anonymous": false,
									"eventSelector": "0fef1e979d0b74e703ce41335e4adc7465be6b6511ce6870d8d76b85a2cd987c",
									"id": 43,
									"name": "RecordUpdated",
									"nameLocation": "655:13:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"indexed": true,
												"mutability": "mutable",
												"name": "patientId",
												"nameLocation": "685:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "669:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "669:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 41,
												"indexed": false,
												"mutability": "mutable",
												"name": "ipfsHash",
												"nameLocation": "704:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "696:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 40,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "696:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "668:45:0"
									},
									"src": "649:65:0"
								},
								{
									"anonymous": false,
									"eventSelector": "3c3a9147a1fc73dd51a32f4d10c43d457e8cb826eb6f35cac6349eb965ba82b4",
									"id": 49,
									"name": "AccessGranted",
									"nameLocation": "726:13:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"indexed": true,
												"mutability": "mutable",
												"name": "patientId",
												"nameLocation": "756:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "740:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 44,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "740:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 47,
												"indexed": false,
												"mutability": "mutable",
												"name": "provider",
												"nameLocation": "775:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "767:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "767:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "739:45:0"
									},
									"src": "720:65:0"
								},
								{
									"anonymous": false,
									"eventSelector": "125883b94692baebecad9f111ed97ffa626523bbbadc6b0ef85ee1b56b9e52d5",
									"id": 55,
									"name": "AccessRevoked",
									"nameLocation": "797:13:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"indexed": true,
												"mutability": "mutable",
												"name": "patientId",
												"nameLocation": "827:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 55,
												"src": "811:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 50,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "811:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"indexed": false,
												"mutability": "mutable",
												"name": "provider",
												"nameLocation": "846:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 55,
												"src": "838:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "838:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "810:45:0"
									},
									"src": "791:65:0"
								},
								{
									"body": {
										"id": 71,
										"nodeType": "Block",
										"src": "905:113:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 66,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 60,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "924:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 61,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "928:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "924:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 62,
																		"name": "patientRecords",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 27,
																		"src": "938:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PatientRecord_$22_storage_$",
																			"typeString": "mapping(uint256 => struct Healthr.PatientRecord storage ref)"
																		}
																	},
																	"id": 64,
																	"indexExpression": {
																		"id": 63,
																		"name": "_patientId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 57,
																		"src": "953:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "938:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PatientRecord_$22_storage",
																		"typeString": "struct Healthr.PatientRecord storage ref"
																	}
																},
																"id": 65,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "965:5:0",
																"memberName": "owner",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 5,
																"src": "938:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "924:46:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c792070617469656e742063616e206d6f64696679",
															"id": 67,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "972:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1afbd0296ccb66d243bcb8262addfbaa02222b77a87e72941d249c71d381b08c",
																"typeString": "literal_string \"Only patient can modify\""
															},
															"value": "Only patient can modify"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1afbd0296ccb66d243bcb8262addfbaa02222b77a87e72941d249c71d381b08c",
																"typeString": "literal_string \"Only patient can modify\""
															}
														],
														"id": 59,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "916:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 68,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "916:82:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 69,
												"nodeType": "ExpressionStatement",
												"src": "916:82:0"
											},
											{
												"id": 70,
												"nodeType": "PlaceholderStatement",
												"src": "1009:1:0"
											}
										]
									},
									"id": 72,
									"name": "onlyPatient",
									"nameLocation": "873:11:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "_patientId",
												"nameLocation": "893:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "885:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "885:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "884:20:0"
									},
									"src": "864:154:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 164,
										"nodeType": "Block",
										"src": "1203:618:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 88,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 84,
																	"name": "_fieldHashes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 77,
																	"src": "1222:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																		"typeString": "bytes32[] memory"
																	}
																},
																"id": 85,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1235:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "1222:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 86,
																	"name": "_fieldNames",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 80,
																	"src": "1245:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																		"typeString": "string memory[] memory"
																	}
																},
																"id": 87,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1257:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "1245:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1222:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d69736d6174636820696e206669656c6420636f756e7473",
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1265:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e57ad95da8eb27cea009bd53dfef5f8127bdf8965c3972aed1f0cabe8425e6e5",
																"typeString": "literal_string \"Mismatch in field counts\""
															},
															"value": "Mismatch in field counts"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e57ad95da8eb27cea009bd53dfef5f8127bdf8965c3972aed1f0cabe8425e6e5",
																"typeString": "literal_string \"Mismatch in field counts\""
															}
														],
														"id": 83,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1214:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1214:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "1214:78:0"
											},
											{
												"assignments": [
													93
												],
												"declarations": [
													{
														"constant": false,
														"id": 93,
														"mutability": "mutable",
														"name": "patientId",
														"nameLocation": "1311:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 164,
														"src": "1303:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 92,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1303:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 95,
												"initialValue": {
													"id": 94,
													"name": "nextPatientId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 29,
													"src": "1323:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1303:33:0"
											},
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "record",
														"nameLocation": "1379:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 164,
														"src": "1357:28:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PatientRecord_$22_storage_ptr",
															"typeString": "struct Healthr.PatientRecord"
														},
														"typeName": {
															"id": 97,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 96,
																"name": "PatientRecord",
																"nameLocations": [
																	"1357:13:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 22,
																"src": "1357:13:0"
															},
															"referencedDeclaration": 22,
															"src": "1357:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PatientRecord_$22_storage_ptr",
																"typeString": "struct Healthr.PatientRecord"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 102,
												"initialValue": {
													"baseExpression": {
														"id": 99,
														"name": "patientRecords",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1388:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PatientRecord_$22_storage_$",
															"typeString": "mapping(uint256 => struct Healthr.PatientRecord storage ref)"
														}
													},
													"id": 101,
													"indexExpression": {
														"id": 100,
														"name": "patientId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 93,
														"src": "1403:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1388:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PatientRecord_$22_storage",
														"typeString": "struct Healthr.PatientRecord storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1357:56:0"
											},
											{
												"expression": {
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 103,
															"name": "record",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "1424:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PatientRecord_$22_storage_ptr",
																"typeString": "struct Healthr.PatientRecord storage pointer"
															}
														},
														"id": 105,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1431:9:0",
														"memberName": "patientId",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "1424:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 106,
														"name": "patientId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 93,
														"src": "1443:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1424:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 108,
												"nodeType": "ExpressionStatement",
												"src": "1424:28:0"
											},
											{
												"expression": {
													"id": 114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 109,
															"name": "record",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "1463:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PatientRecord_$22_storage_ptr",
																"typeString": "struct Healthr.PatientRecord storage pointer"
															}
														},
														"id": 111,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1470:5:0",
														"memberName": "owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "1463:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 112,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1478:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 113,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1482:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1478:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1463:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 115,
												"nodeType": "ExpressionStatement",
												"src": "1463:25:0"
											},
											{
												"expression": {
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 116,
															"name": "record",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "1499:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PatientRecord_$22_storage_ptr",
																"typeString": "struct Healthr.PatientRecord storage pointer"
															}
														},
														"id": 118,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1506:8:0",
														"memberName": "ipfsHash",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 7,
														"src": "1499:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 119,
														"name": "_ipfsHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 74,
														"src": "1517:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "1499:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 121,
												"nodeType": "ExpressionStatement",
												"src": "1499:27:0"
											},
											{
												"expression": {
													"id": 127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 122,
															"name": "record",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "1537:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PatientRecord_$22_storage_ptr",
																"typeString": "struct Healthr.PatientRecord storage pointer"
															}
														},
														"id": 124,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1544:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 19,
														"src": "1537:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 125,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1556:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 126,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1562:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1556:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1537:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 128,
												"nodeType": "ExpressionStatement",
												"src": "1537:34:0"
											},
											{
												"body": {
													"id": 152,
													"nodeType": "Block",
													"src": "1638:79:0",
													"statements": [
														{
															"expression": {
																"id": 150,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"id": 140,
																			"name": "record",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 98,
																			"src": "1653:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PatientRecord_$22_storage_ptr",
																				"typeString": "struct Healthr.PatientRecord storage pointer"
																			}
																		},
																		"id": 145,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1660:11:0",
																		"memberName": "fieldHashes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 15,
																		"src": "1653:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bytes32_$",
																			"typeString": "mapping(string memory => bytes32)"
																		}
																	},
																	"id": 146,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 142,
																			"name": "_fieldNames",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 80,
																			"src": "1672:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																				"typeString": "string memory[] memory"
																			}
																		},
																		"id": 144,
																		"indexExpression": {
																			"id": 143,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 130,
																			"src": "1684:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1672:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1653:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 147,
																		"name": "_fieldHashes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 77,
																		"src": "1690:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																			"typeString": "bytes32[] memory"
																		}
																	},
																	"id": 149,
																	"indexExpression": {
																		"id": 148,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 130,
																		"src": "1703:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1690:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "1653:52:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 151,
															"nodeType": "ExpressionStatement",
															"src": "1653:52:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 133,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "1609:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 134,
															"name": "_fieldNames",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "1613:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																"typeString": "string memory[] memory"
															}
														},
														"id": 135,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1625:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1613:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1609:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 153,
												"initializationExpression": {
													"assignments": [
														130
													],
													"declarations": [
														{
															"constant": false,
															"id": 130,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1602:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 153,
															"src": "1597:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 129,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "1597:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 132,
													"initialValue": {
														"hexValue": "30",
														"id": 131,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1606:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1597:10:0"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 138,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1633:3:0",
														"subExpression": {
															"id": 137,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 130,
															"src": "1633:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 139,
													"nodeType": "ExpressionStatement",
													"src": "1633:3:0"
												},
												"nodeType": "ForStatement",
												"src": "1592:125:0"
											},
											{
												"expression": {
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "1737:15:0",
													"subExpression": {
														"id": 154,
														"name": "nextPatientId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "1737:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 156,
												"nodeType": "ExpressionStatement",
												"src": "1737:15:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 158,
															"name": "patientId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 93,
															"src": "1780:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 159,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1791:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1795:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1791:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 161,
															"name": "_ipfsHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 74,
															"src": "1803:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 157,
														"name": "RecordAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 37,
														"src": "1768:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_bytes32_$returns$__$",
															"typeString": "function (uint256,address,bytes32)"
														}
													},
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1768:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 163,
												"nodeType": "EmitStatement",
												"src": "1763:50:0"
											}
										]
									},
									"functionSelector": "63893e46",
									"id": 165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addPatientRecord",
									"nameLocation": "1084:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "_ipfsHash",
												"nameLocation": "1109:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "1101:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 73,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1101:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "_fieldHashes",
												"nameLocation": "1137:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "1120:29:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 75,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "1120:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 76,
													"nodeType": "ArrayTypeName",
													"src": "1120:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "_fieldNames",
												"nameLocation": "1167:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "1151:27:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
													"typeString": "string[]"
												},
												"typeName": {
													"baseType": {
														"id": 78,
														"name": "string",
														"nodeType": "ElementaryTypeName",
														"src": "1151:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage_ptr",
															"typeString": "string"
														}
													},
													"id": 79,
													"nodeType": "ArrayTypeName",
													"src": "1151:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
														"typeString": "string[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1100:79:0"
									},
									"returnParameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1203:0:0"
									},
									"scope": 506,
									"src": "1075:746:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 247,
										"nodeType": "Block",
										"src": "2044:536:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 182,
																"name": "_patientId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 167,
																"src": "2063:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 183,
																"name": "nextPatientId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "2076:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2063:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265636f726420646f6573206e6f74206578697374",
															"id": 185,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2091:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_752d09c2eab74c4a5f1bd63acead0a9ceb7b9a35d294a71b52bc967447850096",
																"typeString": "literal_string \"Record does not exist\""
															},
															"value": "Record does not exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_752d09c2eab74c4a5f1bd63acead0a9ceb7b9a35d294a71b52bc967447850096",
																"typeString": "literal_string \"Record does not exist\""
															}
														],
														"id": 181,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2055:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2055:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "2055:60:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 193,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 189,
																	"name": "_fieldHashes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 172,
																	"src": "2134:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																		"typeString": "bytes32[] memory"
																	}
																},
																"id": 190,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2147:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2134:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 191,
																	"name": "_fieldNames",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 175,
																	"src": "2157:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																		"typeString": "string memory[] memory"
																	}
																},
																"id": 192,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2169:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2157:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2134:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d69736d6174636820696e206669656c6420636f756e7473",
															"id": 194,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2177:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e57ad95da8eb27cea009bd53dfef5f8127bdf8965c3972aed1f0cabe8425e6e5",
																"typeString": "literal_string \"Mismatch in field counts\""
															},
															"value": "Mismatch in field counts"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e57ad95da8eb27cea009bd53dfef5f8127bdf8965c3972aed1f0cabe8425e6e5",
																"typeString": "literal_string \"Mismatch in field counts\""
															}
														],
														"id": 188,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2126:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2126:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 196,
												"nodeType": "ExpressionStatement",
												"src": "2126:78:0"
											},
											{
												"assignments": [
													199
												],
												"declarations": [
													{
														"constant": false,
														"id": 199,
														"mutability": "mutable",
														"name": "record",
														"nameLocation": "2247:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 247,
														"src": "2225:28:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PatientRecord_$22_storage_ptr",
															"typeString": "struct Healthr.PatientRecord"
														},
														"typeName": {
															"id": 198,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 197,
																"name": "PatientRecord",
																"nameLocations": [
																	"2225:13:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 22,
																"src": "2225:13:0"
															},
															"referencedDeclaration": 22,
															"src": "2225:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PatientRecord_$22_storage_ptr",
																"typeString": "struct Healthr.PatientRecord"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 203,
												"initialValue": {
													"baseExpression": {
														"id": 200,
														"name": "patientRecords",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "2256:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PatientRecord_$22_storage_$",
															"typeString": "mapping(uint256 => struct Healthr.PatientRecord storage ref)"
														}
													},
													"id": 202,
													"indexExpression": {
														"id": 201,
														"name": "_patientId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "2271:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2256:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PatientRecord_$22_storage",
														"typeString": "struct Healthr.PatientRecord storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2225:57:0"
											},
											{
												"expression": {
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 204,
															"name": "record",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "2293:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PatientRecord_$22_storage_ptr",
																"typeString": "struct Healthr.PatientRecord storage pointer"
															}
														},
														"id": 206,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2300:8:0",
														"memberName": "ipfsHash",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 7,
														"src": "2293:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 207,
														"name": "_ipfsHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "2311:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2293:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "2293:27:0"
											},
											{
												"expression": {
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 210,
															"name": "record",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "2331:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PatientRecord_$22_storage_ptr",
																"typeString": "struct Healthr.PatientRecord storage pointer"
															}
														},
														"id": 212,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2338:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 19,
														"src": "2331:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 213,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2350:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 214,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2356:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2350:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2331:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 216,
												"nodeType": "ExpressionStatement",
												"src": "2331:34:0"
											},
											{
												"body": {
													"id": 240,
													"nodeType": "Block",
													"src": "2432:79:0",
													"statements": [
														{
															"expression": {
																"id": 238,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"id": 228,
																			"name": "record",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 199,
																			"src": "2447:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PatientRecord_$22_storage_ptr",
																				"typeString": "struct Healthr.PatientRecord storage pointer"
																			}
																		},
																		"id": 233,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2454:11:0",
																		"memberName": "fieldHashes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 15,
																		"src": "2447:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bytes32_$",
																			"typeString": "mapping(string memory => bytes32)"
																		}
																	},
																	"id": 234,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 230,
																			"name": "_fieldNames",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 175,
																			"src": "2466:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																				"typeString": "string memory[] memory"
																			}
																		},
																		"id": 232,
																		"indexExpression": {
																			"id": 231,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 218,
																			"src": "2478:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2466:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2447:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 235,
																		"name": "_fieldHashes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 172,
																		"src": "2484:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																			"typeString": "bytes32[] memory"
																		}
																	},
																	"id": 237,
																	"indexExpression": {
																		"id": 236,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 218,
																		"src": "2497:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2484:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "2447:52:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 239,
															"nodeType": "ExpressionStatement",
															"src": "2447:52:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 221,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 218,
														"src": "2403:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 222,
															"name": "_fieldNames",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "2407:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																"typeString": "string memory[] memory"
															}
														},
														"id": 223,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2419:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2407:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2403:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 241,
												"initializationExpression": {
													"assignments": [
														218
													],
													"declarations": [
														{
															"constant": false,
															"id": 218,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2396:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 241,
															"src": "2391:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 217,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "2391:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 220,
													"initialValue": {
														"hexValue": "30",
														"id": 219,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2400:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2391:10:0"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 226,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2427:3:0",
														"subExpression": {
															"id": 225,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "2427:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 227,
													"nodeType": "ExpressionStatement",
													"src": "2427:3:0"
												},
												"nodeType": "ForStatement",
												"src": "2386:125:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 243,
															"name": "_patientId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "2550:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 244,
															"name": "_ipfsHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "2562:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 242,
														"name": "RecordUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 43,
														"src": "2536:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_bytes32_$returns$__$",
															"typeString": "function (uint256,bytes32)"
														}
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2536:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 246,
												"nodeType": "EmitStatement",
												"src": "2531:41:0"
											}
										]
									},
									"functionSelector": "65e87a19",
									"id": 248,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 178,
													"name": "_patientId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "2026:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 179,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 177,
												"name": "onlyPatient",
												"nameLocations": [
													"2014:11:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 72,
												"src": "2014:11:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2014:23:0"
										}
									],
									"name": "updatePatientRecord",
									"nameLocation": "1868:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "_patientId",
												"nameLocation": "1896:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "1888:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1888:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "_ipfsHash",
												"nameLocation": "1916:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "1908:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 168,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1908:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "_fieldHashes",
												"nameLocation": "1944:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "1927:29:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 170,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "1927:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 171,
													"nodeType": "ArrayTypeName",
													"src": "1927:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "_fieldNames",
												"nameLocation": "1974:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "1958:27:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
													"typeString": "string[]"
												},
												"typeName": {
													"baseType": {
														"id": 173,
														"name": "string",
														"nodeType": "ElementaryTypeName",
														"src": "1958:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage_ptr",
															"typeString": "string"
														}
													},
													"id": 174,
													"nodeType": "ArrayTypeName",
													"src": "1958:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
														"typeString": "string[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1887:99:0"
									},
									"returnParameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2044:0:0"
									},
									"scope": 506,
									"src": "1859:721:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 290,
										"nodeType": "Block",
										"src": "2739:325:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 259,
																"name": "_patientId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 250,
																"src": "2758:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 260,
																"name": "nextPatientId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "2771:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2758:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265636f726420646f6573206e6f74206578697374",
															"id": 262,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2786:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_752d09c2eab74c4a5f1bd63acead0a9ceb7b9a35d294a71b52bc967447850096",
																"typeString": "literal_string \"Record does not exist\""
															},
															"value": "Record does not exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_752d09c2eab74c4a5f1bd63acead0a9ceb7b9a35d294a71b52bc967447850096",
																"typeString": "literal_string \"Record does not exist\""
															}
														],
														"id": 258,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2750:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2750:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 264,
												"nodeType": "ExpressionStatement",
												"src": "2750:60:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2829:58:0",
															"subExpression": {
																"baseExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 266,
																			"name": "patientRecords",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 27,
																			"src": "2830:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PatientRecord_$22_storage_$",
																				"typeString": "mapping(uint256 => struct Healthr.PatientRecord storage ref)"
																			}
																		},
																		"id": 268,
																		"indexExpression": {
																			"id": 267,
																			"name": "_patientId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 250,
																			"src": "2845:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2830:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PatientRecord_$22_storage",
																			"typeString": "struct Healthr.PatientRecord storage ref"
																		}
																	},
																	"id": 269,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2857:19:0",
																	"memberName": "authorizedProviders",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 11,
																	"src": "2830:46:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 271,
																"indexExpression": {
																	"id": 270,
																	"name": "_provider",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 252,
																	"src": "2877:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2830:57:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726f766964657220616c726561647920617574686f72697a6564",
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2889:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_18062ff471b9a33099a67084ab8e7f2145a1b46b4f565c3de108915bfd89f67a",
																"typeString": "literal_string \"Provider already authorized\""
															},
															"value": "Provider already authorized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_18062ff471b9a33099a67084ab8e7f2145a1b46b4f565c3de108915bfd89f67a",
																"typeString": "literal_string \"Provider already authorized\""
															}
														],
														"id": 265,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2821:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2821:98:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 275,
												"nodeType": "ExpressionStatement",
												"src": "2821:98:0"
											},
											{
												"expression": {
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"baseExpression": {
																	"id": 276,
																	"name": "patientRecords",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 27,
																	"src": "2940:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PatientRecord_$22_storage_$",
																		"typeString": "mapping(uint256 => struct Healthr.PatientRecord storage ref)"
																	}
																},
																"id": 278,
																"indexExpression": {
																	"id": 277,
																	"name": "_patientId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 250,
																	"src": "2955:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2940:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PatientRecord_$22_storage",
																	"typeString": "struct Healthr.PatientRecord storage ref"
																}
															},
															"id": 279,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2967:19:0",
															"memberName": "authorizedProviders",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 11,
															"src": "2940:46:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 281,
														"indexExpression": {
															"id": 280,
															"name": "_provider",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 252,
															"src": "2987:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2940:57:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 282,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3000:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2940:64:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 284,
												"nodeType": "ExpressionStatement",
												"src": "2940:64:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 286,
															"name": "_patientId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 250,
															"src": "3034:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 287,
															"name": "_provider",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 252,
															"src": "3046:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 285,
														"name": "AccessGranted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 49,
														"src": "3020:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (uint256,address)"
														}
													},
													"id": 288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3020:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 289,
												"nodeType": "EmitStatement",
												"src": "3015:41:0"
											}
										]
									},
									"functionSelector": "65dd152c",
									"id": 291,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 255,
													"name": "_patientId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 250,
													"src": "2721:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 256,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 254,
												"name": "onlyPatient",
												"nameLocations": [
													"2709:11:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 72,
												"src": "2709:11:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2709:23:0"
										}
									],
									"name": "grantAccess",
									"nameLocation": "2631:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "_patientId",
												"nameLocation": "2651:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "2643:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2643:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "_provider",
												"nameLocation": "2671:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "2663:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2663:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2642:39:0"
									},
									"returnParameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2739:0:0"
									},
									"scope": 506,
									"src": "2622:442:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 332,
										"nodeType": "Block",
										"src": "3227:321:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 302,
																"name": "_patientId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 293,
																"src": "3246:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 303,
																"name": "nextPatientId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "3259:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3246:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265636f726420646f6573206e6f74206578697374",
															"id": 305,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3274:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_752d09c2eab74c4a5f1bd63acead0a9ceb7b9a35d294a71b52bc967447850096",
																"typeString": "literal_string \"Record does not exist\""
															},
															"value": "Record does not exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_752d09c2eab74c4a5f1bd63acead0a9ceb7b9a35d294a71b52bc967447850096",
																"typeString": "literal_string \"Record does not exist\""
															}
														],
														"id": 301,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3238:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3238:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 307,
												"nodeType": "ExpressionStatement",
												"src": "3238:60:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 309,
																		"name": "patientRecords",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 27,
																		"src": "3317:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PatientRecord_$22_storage_$",
																			"typeString": "mapping(uint256 => struct Healthr.PatientRecord storage ref)"
																		}
																	},
																	"id": 311,
																	"indexExpression": {
																		"id": 310,
																		"name": "_patientId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 293,
																		"src": "3332:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3317:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PatientRecord_$22_storage",
																		"typeString": "struct Healthr.PatientRecord storage ref"
																	}
																},
																"id": 312,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3344:19:0",
																"memberName": "authorizedProviders",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 11,
																"src": "3317:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 314,
															"indexExpression": {
																"id": 313,
																"name": "_provider",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 295,
																"src": "3364:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3317:57:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726f7669646572206e6f7420617574686f72697a6564",
															"id": 315,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3376:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6ab62a68bfff85b4512ab9c27ef663ae4fca6c23e2fe8e3c1cd2ce9afe13db2c",
																"typeString": "literal_string \"Provider not authorized\""
															},
															"value": "Provider not authorized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6ab62a68bfff85b4512ab9c27ef663ae4fca6c23e2fe8e3c1cd2ce9afe13db2c",
																"typeString": "literal_string \"Provider not authorized\""
															}
														],
														"id": 308,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3309:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3309:93:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 317,
												"nodeType": "ExpressionStatement",
												"src": "3309:93:0"
											},
											{
												"expression": {
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"baseExpression": {
																	"id": 318,
																	"name": "patientRecords",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 27,
																	"src": "3423:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PatientRecord_$22_storage_$",
																		"typeString": "mapping(uint256 => struct Healthr.PatientRecord storage ref)"
																	}
																},
																"id": 320,
																"indexExpression": {
																	"id": 319,
																	"name": "_patientId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 293,
																	"src": "3438:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3423:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PatientRecord_$22_storage",
																	"typeString": "struct Healthr.PatientRecord storage ref"
																}
															},
															"id": 321,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3450:19:0",
															"memberName": "authorizedProviders",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 11,
															"src": "3423:46:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 323,
														"indexExpression": {
															"id": 322,
															"name": "_provider",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 295,
															"src": "3470:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3423:57:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 324,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3483:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "3423:65:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 326,
												"nodeType": "ExpressionStatement",
												"src": "3423:65:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 328,
															"name": "_patientId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 293,
															"src": "3518:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 329,
															"name": "_provider",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 295,
															"src": "3530:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 327,
														"name": "AccessRevoked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 55,
														"src": "3504:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (uint256,address)"
														}
													},
													"id": 330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3504:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 331,
												"nodeType": "EmitStatement",
												"src": "3499:41:0"
											}
										]
									},
									"functionSelector": "d9a5ec1b",
									"id": 333,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 298,
													"name": "_patientId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 293,
													"src": "3209:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 299,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 297,
												"name": "onlyPatient",
												"nameLocations": [
													"3197:11:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 72,
												"src": "3197:11:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3197:23:0"
										}
									],
									"name": "revokeAccess",
									"nameLocation": "3118:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "_patientId",
												"nameLocation": "3139:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "3131:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3131:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "_provider",
												"nameLocation": "3159:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "3151:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3151:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3130:39:0"
									},
									"returnParameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3227:0:0"
									},
									"scope": 506,
									"src": "3109:439:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "3704:169:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 344,
																"name": "_patientId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 335,
																"src": "3723:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 345,
																"name": "nextPatientId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "3736:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3723:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265636f726420646f6573206e6f74206578697374",
															"id": 347,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3751:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_752d09c2eab74c4a5f1bd63acead0a9ceb7b9a35d294a71b52bc967447850096",
																"typeString": "literal_string \"Record does not exist\""
															},
															"value": "Record does not exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_752d09c2eab74c4a5f1bd63acead0a9ceb7b9a35d294a71b52bc967447850096",
																"typeString": "literal_string \"Record does not exist\""
															}
														],
														"id": 343,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3715:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3715:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 349,
												"nodeType": "ExpressionStatement",
												"src": "3715:60:0"
											},
											{
												"expression": {
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 350,
																"name": "patientRecords",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "3786:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PatientRecord_$22_storage_$",
																	"typeString": "mapping(uint256 => struct Healthr.PatientRecord storage ref)"
																}
															},
															"id": 352,
															"indexExpression": {
																"id": 351,
																"name": "_patientId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 335,
																"src": "3801:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3786:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PatientRecord_$22_storage",
																"typeString": "struct Healthr.PatientRecord storage ref"
															}
														},
														"id": 353,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3813:16:0",
														"memberName": "emergencyPinHash",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 21,
														"src": "3786:43:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 357,
																		"name": "_pin",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 337,
																		"src": "3859:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 355,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "3842:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 356,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "3846:12:0",
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "3842:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 358,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3842:22:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 354,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "3832:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 359,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3832:33:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3786:79:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 361,
												"nodeType": "ExpressionStatement",
												"src": "3786:79:0"
											}
										]
									},
									"functionSelector": "b38deff0",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 340,
													"name": "_patientId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 335,
													"src": "3686:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 341,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 339,
												"name": "onlyPatient",
												"nameLocations": [
													"3674:11:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 72,
												"src": "3674:11:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3674:23:0"
										}
									],
									"name": "setEmergencyPin",
									"nameLocation": "3591:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "_patientId",
												"nameLocation": "3615:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "3607:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3607:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "_pin",
												"nameLocation": "3641:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "3627:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 336,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3627:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3606:40:0"
									},
									"returnParameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3704:0:0"
									},
									"scope": 506,
									"src": "3582:291:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 407,
										"nodeType": "Block",
										"src": "4073:377:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 373,
																"name": "_patientId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 365,
																"src": "4092:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 374,
																"name": "nextPatientId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "4105:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4092:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265636f726420646f6573206e6f74206578697374",
															"id": 376,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4120:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_752d09c2eab74c4a5f1bd63acead0a9ceb7b9a35d294a71b52bc967447850096",
																"typeString": "literal_string \"Record does not exist\""
															},
															"value": "Record does not exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_752d09c2eab74c4a5f1bd63acead0a9ceb7b9a35d294a71b52bc967447850096",
																"typeString": "literal_string \"Record does not exist\""
															}
														],
														"id": 372,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4084:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4084:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 378,
												"nodeType": "ExpressionStatement",
												"src": "4084:60:0"
											},
											{
												"assignments": [
													381
												],
												"declarations": [
													{
														"constant": false,
														"id": 381,
														"mutability": "mutable",
														"name": "record",
														"nameLocation": "4177:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 407,
														"src": "4155:28:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PatientRecord_$22_storage_ptr",
															"typeString": "struct Healthr.PatientRecord"
														},
														"typeName": {
															"id": 380,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 379,
																"name": "PatientRecord",
																"nameLocations": [
																	"4155:13:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 22,
																"src": "4155:13:0"
															},
															"referencedDeclaration": 22,
															"src": "4155:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PatientRecord_$22_storage_ptr",
																"typeString": "struct Healthr.PatientRecord"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 385,
												"initialValue": {
													"baseExpression": {
														"id": 382,
														"name": "patientRecords",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "4186:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PatientRecord_$22_storage_$",
															"typeString": "mapping(uint256 => struct Healthr.PatientRecord storage ref)"
														}
													},
													"id": 384,
													"indexExpression": {
														"id": 383,
														"name": "_patientId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 365,
														"src": "4201:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4186:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PatientRecord_$22_storage",
														"typeString": "struct Healthr.PatientRecord storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4155:57:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 391,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 387,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4255:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4259:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4255:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 389,
																		"name": "record",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 381,
																		"src": "4269:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PatientRecord_$22_storage_ptr",
																			"typeString": "struct Healthr.PatientRecord storage pointer"
																		}
																	},
																	"id": 390,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4276:5:0",
																	"memberName": "owner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 5,
																	"src": "4269:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4255:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"baseExpression": {
																	"expression": {
																		"id": 392,
																		"name": "record",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 381,
																		"src": "4299:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PatientRecord_$22_storage_ptr",
																			"typeString": "struct Healthr.PatientRecord storage pointer"
																		}
																	},
																	"id": 393,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4306:19:0",
																	"memberName": "authorizedProviders",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 11,
																	"src": "4299:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 396,
																"indexExpression": {
																	"expression": {
																		"id": 394,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4326:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 395,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4330:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4326:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4299:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4255:82:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420617574686f72697a6564",
															"id": 398,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4352:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
																"typeString": "literal_string \"Not authorized\""
															},
															"value": "Not authorized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
																"typeString": "literal_string \"Not authorized\""
															}
														],
														"id": 386,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4233:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4233:146:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 400,
												"nodeType": "ExpressionStatement",
												"src": "4233:146:0"
											},
											{
												"expression": {
													"components": [
														{
															"expression": {
																"id": 401,
																"name": "record",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 381,
																"src": "4408:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PatientRecord_$22_storage_ptr",
																	"typeString": "struct Healthr.PatientRecord storage pointer"
																}
															},
															"id": 402,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4415:8:0",
															"memberName": "ipfsHash",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 7,
															"src": "4408:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 403,
																"name": "record",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 381,
																"src": "4425:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PatientRecord_$22_storage_ptr",
																	"typeString": "struct Healthr.PatientRecord storage pointer"
																}
															},
															"id": 404,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4432:9:0",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 19,
															"src": "4425:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 405,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "4407:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bytes32_$_t_uint256_$",
														"typeString": "tuple(bytes32,uint256)"
													}
												},
												"functionReturnParameters": 371,
												"id": 406,
												"nodeType": "Return",
												"src": "4400:42:0"
											}
										]
									},
									"functionSelector": "b39e07e4",
									"id": 408,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRecordReference",
									"nameLocation": "3940:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "_patientId",
												"nameLocation": "3967:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "3959:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3959:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3958:20:0"
									},
									"returnParameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "ipfsHash",
												"nameLocation": "4038:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "4030:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 367,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4030:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "4056:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "4048:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4048:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4029:37:0"
									},
									"scope": 506,
									"src": "3931:519:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 447,
										"nodeType": "Block",
										"src": "4623:342:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 420,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 418,
																"name": "_patientId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 410,
																"src": "4642:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 419,
																"name": "nextPatientId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "4655:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4642:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265636f726420646f6573206e6f74206578697374",
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4670:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_752d09c2eab74c4a5f1bd63acead0a9ceb7b9a35d294a71b52bc967447850096",
																"typeString": "literal_string \"Record does not exist\""
															},
															"value": "Record does not exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_752d09c2eab74c4a5f1bd63acead0a9ceb7b9a35d294a71b52bc967447850096",
																"typeString": "literal_string \"Record does not exist\""
															}
														],
														"id": 417,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4634:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4634:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 423,
												"nodeType": "ExpressionStatement",
												"src": "4634:60:0"
											},
											{
												"assignments": [
													426
												],
												"declarations": [
													{
														"constant": false,
														"id": 426,
														"mutability": "mutable",
														"name": "record",
														"nameLocation": "4727:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 447,
														"src": "4705:28:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PatientRecord_$22_storage_ptr",
															"typeString": "struct Healthr.PatientRecord"
														},
														"typeName": {
															"id": 425,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 424,
																"name": "PatientRecord",
																"nameLocations": [
																	"4705:13:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 22,
																"src": "4705:13:0"
															},
															"referencedDeclaration": 22,
															"src": "4705:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PatientRecord_$22_storage_ptr",
																"typeString": "struct Healthr.PatientRecord"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 430,
												"initialValue": {
													"baseExpression": {
														"id": 427,
														"name": "patientRecords",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "4736:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PatientRecord_$22_storage_$",
															"typeString": "mapping(uint256 => struct Healthr.PatientRecord storage ref)"
														}
													},
													"id": 429,
													"indexExpression": {
														"id": 428,
														"name": "_patientId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 410,
														"src": "4751:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4736:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PatientRecord_$22_storage",
														"typeString": "struct Healthr.PatientRecord storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4705:57:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 435,
																				"name": "_pin",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 412,
																				"src": "4832:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			],
																			"expression": {
																				"id": 433,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4815:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 434,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4819:12:0",
																			"memberName": "encodePacked",
																			"nodeType": "MemberAccess",
																			"src": "4815:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 436,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4815:22:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 432,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967288,
																	"src": "4805:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (bytes memory) pure returns (bytes32)"
																	}
																},
																"id": 437,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4805:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 438,
																	"name": "record",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 426,
																	"src": "4842:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PatientRecord_$22_storage_ptr",
																		"typeString": "struct Healthr.PatientRecord storage pointer"
																	}
																},
																"id": 439,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4849:16:0",
																"memberName": "emergencyPinHash",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 21,
																"src": "4842:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "4805:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420656d657267656e63792050494e",
															"id": 441,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4880:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3952c6c3dff42b68e9b2bdc9cb3c10afb8deabb16ed413af9cf3b0fd10f1addd",
																"typeString": "literal_string \"Invalid emergency PIN\""
															},
															"value": "Invalid emergency PIN"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3952c6c3dff42b68e9b2bdc9cb3c10afb8deabb16ed413af9cf3b0fd10f1addd",
																"typeString": "literal_string \"Invalid emergency PIN\""
															}
														],
														"id": 431,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4783:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4783:131:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 443,
												"nodeType": "ExpressionStatement",
												"src": "4783:131:0"
											},
											{
												"expression": {
													"expression": {
														"id": 444,
														"name": "record",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "4942:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PatientRecord_$22_storage_ptr",
															"typeString": "struct Healthr.PatientRecord storage pointer"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4949:8:0",
													"memberName": "ipfsHash",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 7,
													"src": "4942:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 416,
												"id": 446,
												"nodeType": "Return",
												"src": "4935:22:0"
											}
										]
									},
									"functionSelector": "3c2bc6a1",
									"id": 448,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "emergencyAccess",
									"nameLocation": "4492:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "_patientId",
												"nameLocation": "4516:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "4508:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 409,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4508:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "_pin",
												"nameLocation": "4542:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "4528:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 411,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4528:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4507:40:0"
									},
									"returnParameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "ipfsHash",
												"nameLocation": "4607:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "4599:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 414,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4599:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4598:18:0"
									},
									"scope": 506,
									"src": "4483:482:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 504,
										"nodeType": "Block",
										"src": "5171:551:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 460,
																"name": "_patientId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 450,
																"src": "5190:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 461,
																"name": "nextPatientId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "5203:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5190:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265636f726420646f6573206e6f74206578697374",
															"id": 463,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5218:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_752d09c2eab74c4a5f1bd63acead0a9ceb7b9a35d294a71b52bc967447850096",
																"typeString": "literal_string \"Record does not exist\""
															},
															"value": "Record does not exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_752d09c2eab74c4a5f1bd63acead0a9ceb7b9a35d294a71b52bc967447850096",
																"typeString": "literal_string \"Record does not exist\""
															}
														],
														"id": 459,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5182:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 465,
												"nodeType": "ExpressionStatement",
												"src": "5182:60:0"
											},
											{
												"assignments": [
													468
												],
												"declarations": [
													{
														"constant": false,
														"id": 468,
														"mutability": "mutable",
														"name": "record",
														"nameLocation": "5275:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 504,
														"src": "5253:28:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PatientRecord_$22_storage_ptr",
															"typeString": "struct Healthr.PatientRecord"
														},
														"typeName": {
															"id": 467,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 466,
																"name": "PatientRecord",
																"nameLocations": [
																	"5253:13:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 22,
																"src": "5253:13:0"
															},
															"referencedDeclaration": 22,
															"src": "5253:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PatientRecord_$22_storage_ptr",
																"typeString": "struct Healthr.PatientRecord"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 472,
												"initialValue": {
													"baseExpression": {
														"id": 469,
														"name": "patientRecords",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "5284:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PatientRecord_$22_storage_$",
															"typeString": "mapping(uint256 => struct Healthr.PatientRecord storage ref)"
														}
													},
													"id": 471,
													"indexExpression": {
														"id": 470,
														"name": "_patientId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 450,
														"src": "5299:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5284:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PatientRecord_$22_storage",
														"typeString": "struct Healthr.PatientRecord storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5253:57:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"expression": {
																		"id": 474,
																		"name": "record",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 468,
																		"src": "5426:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PatientRecord_$22_storage_ptr",
																			"typeString": "struct Healthr.PatientRecord storage pointer"
																		}
																	},
																	"id": 475,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5433:19:0",
																	"memberName": "authorizedProviders",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 11,
																	"src": "5426:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 478,
																"indexExpression": {
																	"expression": {
																		"id": 476,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "5453:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 477,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5457:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "5453:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5426:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 479,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "5468:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 480,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5472:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "5468:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"expression": {
																		"id": 481,
																		"name": "record",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 468,
																		"src": "5482:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PatientRecord_$22_storage_ptr",
																			"typeString": "struct Healthr.PatientRecord storage pointer"
																		}
																	},
																	"id": 482,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5489:5:0",
																	"memberName": "owner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 5,
																	"src": "5482:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "5468:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5426:68:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c7920617574686f72697a65642070726f7669646572732063616e20766572696679207265636f726473",
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5509:46:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_98ca94c5942fba9d0539ebeb675dcb20ad9aa43feebcb08a3253bbb61ed6f56f",
																"typeString": "literal_string \"Only authorized providers can verify records\""
															},
															"value": "Only authorized providers can verify records"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_98ca94c5942fba9d0539ebeb675dcb20ad9aa43feebcb08a3253bbb61ed6f56f",
																"typeString": "literal_string \"Only authorized providers can verify records\""
															}
														],
														"id": 473,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5404:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5404:162:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 487,
												"nodeType": "ExpressionStatement",
												"src": "5404:162:0"
											},
											{
												"assignments": [
													489
												],
												"declarations": [
													{
														"constant": false,
														"id": 489,
														"mutability": "mutable",
														"name": "expectedHash",
														"nameLocation": "5595:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 504,
														"src": "5587:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 488,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5587:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 496,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 493,
																	"name": "_fieldValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 454,
																	"src": "5637:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"id": 491,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "5620:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 492,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "5624:12:0",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "5620:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5620:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 490,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "5610:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5610:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5587:63:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"expression": {
																"id": 497,
																"name": "record",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 468,
																"src": "5668:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PatientRecord_$22_storage_ptr",
																	"typeString": "struct Healthr.PatientRecord storage pointer"
																}
															},
															"id": 498,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5675:11:0",
															"memberName": "fieldHashes",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 15,
															"src": "5668:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bytes32_$",
																"typeString": "mapping(string memory => bytes32)"
															}
														},
														"id": 500,
														"indexExpression": {
															"id": 499,
															"name": "_fieldName",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 452,
															"src": "5687:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5668:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 501,
														"name": "expectedHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 489,
														"src": "5702:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5668:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 458,
												"id": 503,
												"nodeType": "Return",
												"src": "5661:53:0"
											}
										]
									},
									"functionSelector": "1b424e7a",
									"id": 505,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyRecordField",
									"nameLocation": "5017:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "_patientId",
												"nameLocation": "5043:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "5035:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5035:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "_fieldName",
												"nameLocation": "5069:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "5055:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 451,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5055:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "_fieldValue",
												"nameLocation": "5095:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "5081:25:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 453,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5081:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5034:73:0"
									},
									"returnParameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "5159:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 456,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5159:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5158:6:0"
									},
									"scope": 506,
									"src": "5008:714:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 507,
							"src": "61:5664:0",
							"usedErrors": [],
							"usedEvents": [
								37,
								43,
								49,
								55
							]
						}
					],
					"src": "33:5692:0"
				},
				"id": 0
			}
		}
	}
}