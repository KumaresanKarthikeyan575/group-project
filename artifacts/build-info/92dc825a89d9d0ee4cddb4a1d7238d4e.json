{
	"id": "92dc825a89d9d0ee4cddb4a1d7238d4e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"viaIR": true,
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"health.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\ncontract Health {\r\n    struct PatientRecord {\r\n        uint256 patientId;\r\n        address owner;\r\n        bytes32 ipfsHash; // Reference to complete off-chain data\r\n        mapping(address => bool) authorizedProviders;\r\n        mapping(string => bytes32) fieldHashes; // Store hash of each field\r\n        uint256 accessLevel;\r\n        uint256 timestamp;\r\n        bytes32 emergencyPinHash;\r\n    }\r\n\r\n    mapping(uint256 => PatientRecord) public patientRecords;\r\n    uint256 public nextPatientId;\r\n\r\n    event RecordAdded(uint256 indexed patientId, address owner, bytes32 ipfsHash);\r\n    event RecordUpdated(uint256 indexed patientId, bytes32 ipfsHash);\r\n    event AccessGranted(uint256 indexed patientId, address provider);\r\n    event AccessRevoked(uint256 indexed patientId, address provider);\r\n\r\n    modifier onlyPatient(uint256 _patientId) {\r\n        require(msg.sender == patientRecords[_patientId].owner, \"Only patient can modify\");\r\n        _;\r\n    }\r\n\r\n    // Add new patient record with field hashes\r\n    function addPatientRecord(bytes32 _ipfsHash, bytes32[] memory _fieldHashes, string[] memory _fieldNames) \r\n        public \r\n    {\r\n        require(_fieldHashes.length == _fieldNames.length, \"Mismatch in field counts\");\r\n        uint256 patientId = nextPatientId;\r\n        \r\n        PatientRecord storage record = patientRecords[patientId];\r\n        record.patientId = patientId;\r\n        record.owner = msg.sender;\r\n        record.ipfsHash = _ipfsHash;\r\n        record.timestamp = block.timestamp;\r\n        \r\n        for (uint i = 0; i < _fieldNames.length; i++) {\r\n            record.fieldHashes[_fieldNames[i]] = _fieldHashes[i];\r\n        }\r\n        \r\n        nextPatientId++;\r\n        emit RecordAdded(patientId, msg.sender, _ipfsHash);\r\n    }\r\n\r\n    // Update patient record\r\n    function updatePatientRecord(uint256 _patientId, bytes32 _ipfsHash, bytes32[] memory _fieldHashes, string[] memory _fieldNames) \r\n        public \r\n        onlyPatient(_patientId) \r\n    {\r\n        require(_patientId < nextPatientId, \"Record does not exist\");\r\n        require(_fieldHashes.length == _fieldNames.length, \"Mismatch in field counts\");\r\n        \r\n        PatientRecord storage record = patientRecords[_patientId];\r\n        record.ipfsHash = _ipfsHash;\r\n        record.timestamp = block.timestamp;\r\n        \r\n        for (uint i = 0; i < _fieldNames.length; i++) {\r\n            record.fieldHashes[_fieldNames[i]] = _fieldHashes[i];\r\n        }\r\n        \r\n        emit RecordUpdated(_patientId, _ipfsHash);\r\n    }\r\n\r\n    // Grant access to providers\r\n    function grantAccess(uint256 _patientId, address _provider) \r\n        public \r\n        onlyPatient(_patientId) \r\n    {\r\n        require(_patientId < nextPatientId, \"Record does not exist\");\r\n        require(!patientRecords[_patientId].authorizedProviders[_provider], \"Provider already authorized\");\r\n        \r\n        patientRecords[_patientId].authorizedProviders[_provider] = true;\r\n        emit AccessGranted(_patientId, _provider);\r\n    }\r\n\r\n    // Revoke access from providers\r\n    function revokeAccess(uint256 _patientId, address _provider) \r\n        public \r\n        onlyPatient(_patientId) \r\n    {\r\n        require(_patientId < nextPatientId, \"Record does not exist\");\r\n        require(patientRecords[_patientId].authorizedProviders[_provider], \"Provider not authorized\");\r\n        \r\n        patientRecords[_patientId].authorizedProviders[_provider] = false;\r\n        emit AccessRevoked(_patientId, _provider);\r\n    }\r\n\r\n    // Set emergency PIN\r\n    function setEmergencyPin(uint256 _patientId, string memory _pin) \r\n        public \r\n        onlyPatient(_patientId) \r\n    {\r\n        require(_patientId < nextPatientId, \"Record does not exist\");\r\n        patientRecords[_patientId].emergencyPinHash = keccak256(abi.encodePacked(_pin));\r\n    }\r\n\r\n    // Get record reference for authorized users\r\n    function getRecordReference(uint256 _patientId) \r\n        public \r\n        view \r\n        returns (bytes32 ipfsHash, uint256 timestamp) \r\n    {\r\n        require(_patientId < nextPatientId, \"Record does not exist\");\r\n        PatientRecord storage record = patientRecords[_patientId];\r\n        \r\n        require(\r\n            msg.sender == record.owner || \r\n            record.authorizedProviders[msg.sender],\r\n            \"Not authorized\"\r\n        );\r\n        \r\n        return (record.ipfsHash, record.timestamp);\r\n    }\r\n\r\n    // Emergency access\r\n    function emergencyAccess(uint256 _patientId, string memory _pin) \r\n        public \r\n        view \r\n        returns (bytes32 ipfsHash) \r\n    {\r\n        require(_patientId < nextPatientId, \"Record does not exist\");\r\n        PatientRecord storage record = patientRecords[_patientId];\r\n        \r\n        require(\r\n            keccak256(abi.encodePacked(_pin)) == record.emergencyPinHash,\r\n            \"Invalid emergency PIN\"\r\n        );\r\n        \r\n        return record.ipfsHash;\r\n    }\r\n\r\n    // Verify specific data field\r\n    function verifyRecordField(uint256 _patientId, string memory _fieldName, string memory _fieldValue) \r\n        public \r\n        view \r\n        returns (bool) \r\n    {\r\n        require(_patientId < nextPatientId, \"Record does not exist\");\r\n        PatientRecord storage record = patientRecords[_patientId];\r\n        \r\n        require(\r\n            msg.sender == record.owner || \r\n            record.authorizedProviders[msg.sender],\r\n            \"Not authorized\"\r\n        );\r\n        \r\n        bytes32 expectedHash = keccak256(abi.encodePacked(_fieldValue));\r\n        return record.fieldHashes[_fieldName] == expectedHash;\r\n    }\r\n}"
			}
		}
	},
	"output": {
		"contracts": {
			"health.sol": {
				"Health": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "patientId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "provider",
									"type": "address"
								}
							],
							"name": "AccessGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "patientId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "provider",
									"type": "address"
								}
							],
							"name": "AccessRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "patientId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "ipfsHash",
									"type": "bytes32"
								}
							],
							"name": "RecordAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "patientId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "ipfsHash",
									"type": "bytes32"
								}
							],
							"name": "RecordUpdated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_ipfsHash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32[]",
									"name": "_fieldHashes",
									"type": "bytes32[]"
								},
								{
									"internalType": "string[]",
									"name": "_fieldNames",
									"type": "string[]"
								}
							],
							"name": "addPatientRecord",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_patientId",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "_pin",
									"type": "string"
								}
							],
							"name": "emergencyAccess",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "ipfsHash",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_patientId",
									"type": "uint256"
								}
							],
							"name": "getRecordReference",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "ipfsHash",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_patientId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_provider",
									"type": "address"
								}
							],
							"name": "grantAccess",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nextPatientId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "patientRecords",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "patientId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "ipfsHash",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "accessLevel",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "emergencyPinHash",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_patientId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_provider",
									"type": "address"
								}
							],
							"name": "revokeAccess",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_patientId",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "_pin",
									"type": "string"
								}
							],
							"name": "setEmergencyPin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_patientId",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "_ipfsHash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32[]",
									"name": "_fieldHashes",
									"type": "bytes32[]"
								},
								{
									"internalType": "string[]",
									"name": "_fieldNames",
									"type": "string[]"
								}
							],
							"name": "updatePatientRecord",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_patientId",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "_fieldName",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_fieldValue",
									"type": "string"
								}
							],
							"name": "verifyRecordField",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"health.sol\":61:5635  contract Health {... */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  return\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"health.sol\":61:5635  contract Health {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_14, iszero(lt(calldatasize, 0x04)))\n      0x00\n      dup1\n      revert\n    tag_14:\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1b424e7a\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x3c2bc6a1\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x63893e46\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x65dd152c\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x65e87a19\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xb1131795\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xb38deff0\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xb39e07e4\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xd3d188a1\n      eq\n      tag_32\n      jumpi\n      0xd9a5ec1b\n      eq\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      jumpi(tag_36, callvalue)\n      tag_38\n      calldatasize\n      tag_7\n      jump\t// in\n    tag_38:\n      dup2\n      0x00\n      mstore\n      mstore(0x20, 0x00)\n        /* \"health.sol\":915:997  require(msg.sender == patientRecords[_patientId].owner, \"Only patient can modify\") */\n      tag_39\n        /* \"health.sol\":61:5635  contract Health {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n        /* \"health.sol\":937:969  patientRecords[_patientId].owner */\n      0x01\n        /* \"health.sol\":61:5635  contract Health {... */\n      keccak256(0x00, 0x40)\n        /* \"health.sol\":937:969  patientRecords[_patientId].owner */\n      add\n        /* \"health.sol\":61:5635  contract Health {... */\n      sload\n      and\n        /* \"health.sol\":923:933  msg.sender */\n      caller\n        /* \"health.sol\":923:969  msg.sender == patientRecords[_patientId].owner */\n      eq\n        /* \"health.sol\":915:997  require(msg.sender == patientRecords[_patientId].owner, \"Only patient can modify\") */\n      tag_13\n      jump\t// in\n    tag_39:\n        /* \"health.sol\":3237:3297  require(_patientId < nextPatientId, \"Record does not exist\") */\n      tag_40\n        /* \"health.sol\":937:969  patientRecords[_patientId].owner */\n      0x01\n        /* \"health.sol\":61:5635  contract Health {... */\n      sload\n        /* \"health.sol\":3245:3271  _patientId < nextPatientId */\n      dup4\n      lt\n        /* \"health.sol\":3237:3297  require(_patientId < nextPatientId, \"Record does not exist\") */\n      tag_8\n      jump\t// in\n    tag_40:\n        /* \"health.sol\":61:5635  contract Health {... */\n      0x00\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n      dup6\n      and\n      dup5\n      mstore\n        /* \"health.sol\":3316:3362  patientRecords[_patientId].authorizedProviders */\n      0x03\n      add\n        /* \"health.sol\":61:5635  contract Health {... */\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap5\n      and\n      dup1\n      dup5\n      mstore\n        /* \"health.sol\":3316:3362  patientRecords[_patientId].authorizedProviders */\n      0x03\n        /* \"health.sol\":3422:3468  patientRecords[_patientId].authorizedProviders */\n      swap5\n      swap1\n      swap5\n      add\n        /* \"health.sol\":61:5635  contract Health {... */\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n      swap1\n      mload\n      swap2\n      dup3\n      mstore\n        /* \"health.sol\":3503:3539  AccessRevoked(_patientId, _provider) */\n      0x125883b94692baebecad9f111ed97ffa626523bbbadc6b0ef85ee1b56b9e52d5\n      swap2\n      log2\n        /* \"health.sol\":61:5635  contract Health {... */\n      stop\n    tag_41:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x17\n      0x24\n      dup3\n      add\n      mstore\n      0x50726f7669646572206e6f7420617574686f72697a6564000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_36:\n      0x00\n      dup1\n      revert\n    tag_32:\n      jumpi(tag_36, callvalue)\n      jumpi(tag_36, slt(add(not(0x03), calldatasize), 0x20))\n      mstore(0x00, calldataload(0x04))\n      mstore(0x20, 0x00)\n      0xc0\n      keccak256(0x00, 0x40)\n      dup1\n      sload\n      swap1\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      0x01\n        /* \"health.sol\":465:520  mapping(uint256 => PatientRecord) public patientRecords */\n      dup3\n      add\n        /* \"health.sol\":61:5635  contract Health {... */\n      sload\n      and\n        /* \"health.sol\":465:520  mapping(uint256 => PatientRecord) public patientRecords */\n      swap1\n      0x02\n      dup2\n      add\n        /* \"health.sol\":61:5635  contract Health {... */\n      sload\n        /* \"health.sol\":465:520  mapping(uint256 => PatientRecord) public patientRecords */\n      0x05\n      dup3\n      add\n        /* \"health.sol\":61:5635  contract Health {... */\n      sload\n        /* \"health.sol\":465:520  mapping(uint256 => PatientRecord) public patientRecords */\n      swap1\n      0x07\n      0x06\n      dup5\n      add\n        /* \"health.sol\":61:5635  contract Health {... */\n      sload\n        /* \"health.sol\":465:520  mapping(uint256 => PatientRecord) public patientRecords */\n      swap4\n      add\n        /* \"health.sol\":61:5635  contract Health {... */\n      sload\n      swap4\n      mload(0x40)\n      swap6\n      dup7\n      mstore\n      0x20\n      dup7\n      add\n      mstore\n      0x40\n      dup6\n      add\n      mstore\n      0x60\n      dup5\n      add\n      mstore\n      0x80\n      dup4\n      add\n      mstore\n      0xa0\n      dup3\n      add\n      mstore\n      return\n    tag_30:\n      jumpi(tag_36, callvalue)\n      jumpi(tag_36, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n        /* \"health.sol\":4083:4143  require(_patientId < nextPatientId, \"Record does not exist\") */\n      tag_51\n        /* \"health.sol\":61:5635  contract Health {... */\n      sload(0x01)\n        /* \"health.sol\":4091:4117  _patientId < nextPatientId */\n      dup3\n      lt\n        /* \"health.sol\":4083:4143  require(_patientId < nextPatientId, \"Record does not exist\") */\n      tag_8\n      jump\t// in\n    tag_51:\n        /* \"health.sol\":61:5635  contract Health {... */\n      0x00\n      mstore\n      mstore(0x20, 0x00)\n      0x40\n      dup1\n      0x00\n      keccak256\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      0x01\n        /* \"health.sol\":4268:4280  record.owner */\n      dup3\n      add\n        /* \"health.sol\":61:5635  contract Health {... */\n      sload\n      and\n        /* \"health.sol\":4254:4264  msg.sender */\n      caller\n        /* \"health.sol\":4254:4280  msg.sender == record.owner */\n      eq\n        /* \"health.sol\":4254:4336  msg.sender == record.owner || ... */\n      dup1\n      iszero\n      tag_52\n      jumpi\n        /* \"health.sol\":61:5635  contract Health {... */\n    tag_53:\n        /* \"health.sol\":4232:4378  require(... */\n      tag_54\n      swap1\n      tag_9\n      jump\t// in\n    tag_54:\n        /* \"health.sol\":4424:4440  record.timestamp */\n      0x06\n        /* \"health.sol\":4407:4422  record.ipfsHash */\n      0x02\n      dup3\n      add\n        /* \"health.sol\":61:5635  contract Health {... */\n      sload\n        /* \"health.sol\":4424:4440  record.timestamp */\n      swap2\n      add\n        /* \"health.sol\":61:5635  contract Health {... */\n      sload\n      dup3\n      mload\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      mstore\n      return\n        /* \"health.sol\":4254:4336  msg.sender == record.owner || ... */\n    tag_52:\n      pop\n        /* \"health.sol\":4254:4264  msg.sender */\n      caller\n      0x00\n        /* \"health.sol\":61:5635  contract Health {... */\n      swap1\n      dup2\n      mstore\n        /* \"health.sol\":4298:4324  record.authorizedProviders */\n      0x03\n      dup3\n      add\n        /* \"health.sol\":61:5635  contract Health {... */\n      0x20\n      mstore\n      dup3\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"health.sol\":4254:4336  msg.sender == record.owner || ... */\n      jump(tag_53)\n        /* \"health.sol\":61:5635  contract Health {... */\n    tag_28:\n      jumpi(tag_36, callvalue)\n      tag_57\n      calldatasize\n      tag_3\n      jump\t// in\n    tag_57:\n      dup2\n      0x00\n      mstore\n      mstore(0x20, 0x00)\n        /* \"health.sol\":915:997  require(msg.sender == patientRecords[_patientId].owner, \"Only patient can modify\") */\n      tag_58\n        /* \"health.sol\":61:5635  contract Health {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n        /* \"health.sol\":937:969  patientRecords[_patientId].owner */\n      0x01\n        /* \"health.sol\":61:5635  contract Health {... */\n      keccak256(0x00, 0x40)\n        /* \"health.sol\":937:969  patientRecords[_patientId].owner */\n      add\n        /* \"health.sol\":61:5635  contract Health {... */\n      sload\n      and\n        /* \"health.sol\":923:933  msg.sender */\n      caller\n        /* \"health.sol\":923:969  msg.sender == patientRecords[_patientId].owner */\n      eq\n        /* \"health.sol\":915:997  require(msg.sender == patientRecords[_patientId].owner, \"Only patient can modify\") */\n      tag_13\n      jump\t// in\n    tag_58:\n        /* \"health.sol\":3714:3774  require(_patientId < nextPatientId, \"Record does not exist\") */\n      tag_59\n        /* \"health.sol\":937:969  patientRecords[_patientId].owner */\n      0x01\n        /* \"health.sol\":61:5635  contract Health {... */\n      sload\n        /* \"health.sol\":3722:3748  _patientId < nextPatientId */\n      dup4\n      lt\n        /* \"health.sol\":3714:3774  require(_patientId < nextPatientId, \"Record does not exist\") */\n      tag_8\n      jump\t// in\n    tag_59:\n        /* \"health.sol\":61:5635  contract Health {... */\n      mload(0x40)\n        /* \"health.sol\":3841:3863  abi.encodePacked(_pin) */\n      tag_60\n        /* \"health.sol\":61:5635  contract Health {... */\n      0x20\n        /* \"health.sol\":3841:3863  abi.encodePacked(_pin) */\n      dup3\n      dup2\n      dup1\n      dup3\n      add\n        /* \"health.sol\":61:5635  contract Health {... */\n      swap6\n      dup1\n      mload\n      swap2\n      dup3\n      swap2\n      add\n      dup8\n      mcopy\n      dup2\n      add\n      0x00\n      dup4\n      dup3\n      add\n      mstore\n        /* \"health.sol\":3841:3863  abi.encodePacked(_pin) */\n      sub\n      add\n        /* \"health.sol\":5530:5559  abi.encodePacked(_fieldValue) */\n      not(0x1f)\n        /* \"health.sol\":3841:3863  abi.encodePacked(_pin) */\n      dup2\n      add\n      dup4\n      mstore\n      dup3\n      tag_1\n      jump\t// in\n    tag_60:\n        /* \"health.sol\":61:5635  contract Health {... */\n      mload\n        /* \"health.sol\":3831:3864  keccak256(abi.encodePacked(_pin)) */\n      swap1\n      keccak256\n        /* \"health.sol\":61:5635  contract Health {... */\n      swap1\n      0x00\n      mstore\n      mstore(0x20, 0x00)\n        /* \"health.sol\":3785:3828  patientRecords[_patientId].emergencyPinHash */\n      0x07\n        /* \"health.sol\":61:5635  contract Health {... */\n      keccak256(0x00, 0x40)\n        /* \"health.sol\":3785:3828  patientRecords[_patientId].emergencyPinHash */\n      add\n        /* \"health.sol\":61:5635  contract Health {... */\n      sstore\n      0x00\n      dup1\n      return\n    tag_26:\n      jumpi(tag_36, callvalue)\n      jumpi(tag_36, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"health.sol\":527:555  uint256 public nextPatientId */\n      0x01\n        /* \"health.sol\":61:5635  contract Health {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_24:\n      jumpi(tag_36, callvalue)\n      jumpi(tag_36, slt(add(not(0x03), calldatasize), 0x80))\n      calldataload(0x24)\n      calldataload(0x04)\n      calldataload(0x44)\n      0xffffffffffffffff\n      dup2\n      gt\n      tag_36\n      jumpi\n      tag_71\n      swap1\n      calldatasize\n      swap1\n      0x04\n      add\n      tag_5\n      jump\t// in\n    tag_71:\n      calldataload(0x64)\n      0xffffffffffffffff\n      dup2\n      gt\n      tag_36\n      jumpi\n      swap1\n      tag_74\n      dup5\n      swap3\n      calldatasize\n      swap1\n      0x04\n      add\n      tag_6\n      jump\t// in\n    tag_74:\n      swap1\n      dup4\n      0x00\n      mstore\n      mstore(0x20, 0x00)\n        /* \"health.sol\":915:997  require(msg.sender == patientRecords[_patientId].owner, \"Only patient can modify\") */\n      tag_75\n        /* \"health.sol\":61:5635  contract Health {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      0x01\n      keccak256(0x00, 0x40)\n        /* \"health.sol\":937:969  patientRecords[_patientId].owner */\n      add\n        /* \"health.sol\":61:5635  contract Health {... */\n      sload\n      and\n        /* \"health.sol\":923:933  msg.sender */\n      caller\n        /* \"health.sol\":923:969  msg.sender == patientRecords[_patientId].owner */\n      eq\n        /* \"health.sol\":915:997  require(msg.sender == patientRecords[_patientId].owner, \"Only patient can modify\") */\n      tag_13\n      jump\t// in\n    tag_75:\n        /* \"health.sol\":2054:2114  require(_patientId < nextPatientId, \"Record does not exist\") */\n      tag_76\n        /* \"health.sol\":61:5635  contract Health {... */\n      sload(0x01)\n        /* \"health.sol\":2062:2088  _patientId < nextPatientId */\n      dup6\n      lt\n        /* \"health.sol\":2054:2114  require(_patientId < nextPatientId, \"Record does not exist\") */\n      tag_8\n      jump\t// in\n    tag_76:\n        /* \"health.sol\":2125:2203  require(_fieldHashes.length == _fieldNames.length, \"Mismatch in field counts\") */\n      tag_77\n        /* \"health.sol\":61:5635  contract Health {... */\n      dup2\n      mload\n      dup4\n      mload\n        /* \"health.sol\":2133:2174  _fieldHashes.length == _fieldNames.length */\n      eq\n        /* \"health.sol\":2125:2203  require(_fieldHashes.length == _fieldNames.length, \"Mismatch in field counts\") */\n      tag_11\n      jump\t// in\n    tag_77:\n        /* \"health.sol\":61:5635  contract Health {... */\n      dup4\n      0x00\n      mstore\n      mstore(0x20, 0x00)\n      keccak256(0x00, 0x40)\n        /* \"health.sol\":2292:2307  record.ipfsHash */\n      swap4\n      dup4\n      0x02\n      dup7\n      add\n        /* \"health.sol\":61:5635  contract Health {... */\n      sstore\n        /* \"health.sol\":2349:2364  block.timestamp */\n      timestamp\n        /* \"health.sol\":2330:2346  record.timestamp */\n      0x06\n      dup7\n      add\n        /* \"health.sol\":61:5635  contract Health {... */\n      sstore\n      0x04\n      0x00\n        /* \"health.sol\":2446:2464  record.fieldHashes */\n      swap6\n      add\n        /* \"health.sol\":2385:2510  for (uint i = 0; i < _fieldNames.length; i++) {... */\n      swap5\n        /* \"health.sol\":2426:2429  i++ */\n    tag_78:\n        /* \"health.sol\":61:5635  contract Health {... */\n      dup4\n      mload\n        /* \"health.sol\":2402:2424  i < _fieldNames.length */\n      dup2\n      lt\n      iszero\n      tag_79\n      jumpi\n        /* \"health.sol\":2483:2498  _fieldHashes[i] */\n      dup1\n      tag_81\n        /* \"health.sol\":61:5635  contract Health {... */\n      0x01\n        /* \"health.sol\":2483:2498  _fieldHashes[i] */\n      swap3\n      dup6\n      tag_12\n      jump\t// in\n    tag_81:\n        /* \"health.sol\":61:5635  contract Health {... */\n      mload\n      tag_82\n        /* \"health.sol\":2465:2479  _fieldNames[i] */\n      dup9\n      tag_83\n      dup5\n      dup10\n      tag_12\n      jump\t// in\n    tag_83:\n      mload\n        /* \"health.sol\":61:5635  contract Health {... */\n      tag_10\n      jump\t// in\n    tag_82:\n      sstore\n      add\n        /* \"health.sol\":2390:2400  uint i = 0 */\n      jump(tag_78)\n        /* \"health.sol\":2402:2424  i < _fieldNames.length */\n    tag_79:\n      pop\n        /* \"health.sol\":2535:2571  RecordUpdated(_patientId, _ipfsHash) */\n      0x0fef1e979d0b74e703ce41335e4adc7465be6b6511ce6870d8d76b85a2cd987c\n        /* \"health.sol\":61:5635  contract Health {... */\n      0x20\n        /* \"health.sol\":2402:2424  i < _fieldNames.length */\n      dup6\n        /* \"health.sol\":61:5635  contract Health {... */\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n        /* \"health.sol\":2535:2571  RecordUpdated(_patientId, _ipfsHash) */\n      log2\n        /* \"health.sol\":61:5635  contract Health {... */\n      stop\n    tag_22:\n      jumpi(tag_36, callvalue)\n      tag_86\n      calldatasize\n      tag_7\n      jump\t// in\n    tag_86:\n      dup2\n      0x00\n      mstore\n      mstore(0x20, 0x00)\n        /* \"health.sol\":915:997  require(msg.sender == patientRecords[_patientId].owner, \"Only patient can modify\") */\n      tag_87\n        /* \"health.sol\":61:5635  contract Health {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n        /* \"health.sol\":937:969  patientRecords[_patientId].owner */\n      0x01\n        /* \"health.sol\":61:5635  contract Health {... */\n      keccak256(0x00, 0x40)\n        /* \"health.sol\":937:969  patientRecords[_patientId].owner */\n      add\n        /* \"health.sol\":61:5635  contract Health {... */\n      sload\n      and\n        /* \"health.sol\":923:933  msg.sender */\n      caller\n        /* \"health.sol\":923:969  msg.sender == patientRecords[_patientId].owner */\n      eq\n        /* \"health.sol\":915:997  require(msg.sender == patientRecords[_patientId].owner, \"Only patient can modify\") */\n      tag_13\n      jump\t// in\n    tag_87:\n        /* \"health.sol\":2749:2809  require(_patientId < nextPatientId, \"Record does not exist\") */\n      tag_88\n        /* \"health.sol\":937:969  patientRecords[_patientId].owner */\n      0x01\n        /* \"health.sol\":61:5635  contract Health {... */\n      sload\n        /* \"health.sol\":2757:2783  _patientId < nextPatientId */\n      dup4\n      lt\n        /* \"health.sol\":2749:2809  require(_patientId < nextPatientId, \"Record does not exist\") */\n      tag_8\n      jump\t// in\n    tag_88:\n        /* \"health.sol\":61:5635  contract Health {... */\n      0x00\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n      dup6\n      and\n      dup5\n      mstore\n        /* \"health.sol\":2829:2875  patientRecords[_patientId].authorizedProviders */\n      0x03\n      add\n        /* \"health.sol\":61:5635  contract Health {... */\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      tag_89\n      jumpi\n      0x00\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap5\n      and\n      dup1\n      dup5\n      mstore\n        /* \"health.sol\":2829:2875  patientRecords[_patientId].authorizedProviders */\n      0x03\n        /* \"health.sol\":2939:2985  patientRecords[_patientId].authorizedProviders */\n      swap5\n      swap1\n      swap5\n      add\n        /* \"health.sol\":61:5635  contract Health {... */\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n      dup1\n      sload\n      not(0xff)\n      and\n      0x01\n      or\n      swap1\n      sstore\n      swap1\n      mload\n      swap2\n      dup3\n      mstore\n        /* \"health.sol\":3019:3055  AccessGranted(_patientId, _provider) */\n      0x3c3a9147a1fc73dd51a32f4d10c43d457e8cb826eb6f35cac6349eb965ba82b4\n      swap2\n      log2\n        /* \"health.sol\":61:5635  contract Health {... */\n      stop\n    tag_89:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x50726f766964657220616c726561647920617574686f72697a65640000000000\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_20:\n      jumpi(tag_36, callvalue)\n      jumpi(tag_36, slt(add(not(0x03), calldatasize), 0x60))\n      calldataload(0x04)\n      calldataload(0x24)\n      0xffffffffffffffff\n      dup2\n      gt\n      tag_36\n      jumpi\n      tag_97\n      swap1\n      calldatasize\n      swap1\n      0x04\n      add\n      tag_5\n      jump\t// in\n    tag_97:\n      calldataload(0x44)\n      0xffffffffffffffff\n      dup2\n      gt\n      tag_36\n      jumpi\n      tag_100\n      dup4\n      swap2\n      calldatasize\n      swap1\n      0x04\n      add\n      tag_6\n      jump\t// in\n    tag_100:\n        /* \"health.sol\":1213:1291  require(_fieldHashes.length == _fieldNames.length, \"Mismatch in field counts\") */\n      tag_101\n        /* \"health.sol\":61:5635  contract Health {... */\n      dup4\n      mload\n      dup3\n      mload\n        /* \"health.sol\":1221:1262  _fieldHashes.length == _fieldNames.length */\n      eq\n        /* \"health.sol\":1213:1291  require(_fieldHashes.length == _fieldNames.length, \"Mismatch in field counts\") */\n      tag_11\n      jump\t// in\n    tag_101:\n        /* \"health.sol\":61:5635  contract Health {... */\n      sload(0x01)\n      swap3\n      dup4\n      0x00\n      mstore\n      mstore(0x20, 0x00)\n      keccak256(0x00, 0x40)\n      swap4\n      dup1\n      dup6\n      sstore\n      0x01\n        /* \"health.sol\":1462:1474  record.owner */\n      dup6\n      add\n        /* \"health.sol\":1477:1487  msg.sender */\n      caller\n        /* \"health.sol\":61:5635  contract Health {... */\n      shl(0xa0, 0xffffffffffffffffffffffff)\n      dup3\n      sload\n      and\n      or\n      swap1\n      sstore\n        /* \"health.sol\":1498:1513  record.ipfsHash */\n      dup4\n      0x02\n      dup7\n      add\n        /* \"health.sol\":61:5635  contract Health {... */\n      sstore\n        /* \"health.sol\":1555:1570  block.timestamp */\n      timestamp\n        /* \"health.sol\":1536:1552  record.timestamp */\n      0x06\n      dup7\n      add\n        /* \"health.sol\":61:5635  contract Health {... */\n      sstore\n      0x04\n      0x00\n        /* \"health.sol\":1652:1670  record.fieldHashes */\n      swap6\n      add\n        /* \"health.sol\":1591:1716  for (uint i = 0; i < _fieldNames.length; i++) {... */\n      swap5\n        /* \"health.sol\":1632:1635  i++ */\n    tag_102:\n        /* \"health.sol\":61:5635  contract Health {... */\n      dup4\n      mload\n        /* \"health.sol\":1608:1630  i < _fieldNames.length */\n      dup2\n      lt\n      iszero\n      tag_103\n      jumpi\n        /* \"health.sol\":1689:1704  _fieldHashes[i] */\n      dup1\n      tag_105\n        /* \"health.sol\":61:5635  contract Health {... */\n      0x01\n        /* \"health.sol\":1689:1704  _fieldHashes[i] */\n      swap3\n      dup6\n      tag_12\n      jump\t// in\n    tag_105:\n        /* \"health.sol\":61:5635  contract Health {... */\n      mload\n      tag_106\n        /* \"health.sol\":1671:1685  _fieldNames[i] */\n      dup9\n      tag_83\n      dup5\n      dup10\n      tag_12\n      jump\t// in\n        /* \"health.sol\":61:5635  contract Health {... */\n    tag_106:\n      sstore\n      add\n        /* \"health.sol\":1596:1606  uint i = 0 */\n      jump(tag_102)\n        /* \"health.sol\":1608:1630  i < _fieldNames.length */\n    tag_103:\n      pop\n      dup4\n        /* \"health.sol\":61:5635  contract Health {... */\n      sload(0x01)\n      not(0x00)\n      dup2\n      eq\n      tag_108\n      jumpi\n        /* \"health.sol\":1767:1812  RecordAdded(patientId, msg.sender, _ipfsHash) */\n      0xbbf4486ce56a8bb18798d25a2ef88158d76aac87bfb156491906d126855f4428\n        /* \"health.sol\":61:5635  contract Health {... */\n      swap2\n      0x01\n      0x40\n      swap3\n      add\n      0x01\n      sstore\n      dup2\n      mload\n        /* \"health.sol\":1477:1487  msg.sender */\n      swap1\n      caller\n        /* \"health.sol\":61:5635  contract Health {... */\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      mstore\n        /* \"health.sol\":1767:1812  RecordAdded(patientId, msg.sender, _ipfsHash) */\n      log2\n        /* \"health.sol\":61:5635  contract Health {... */\n      stop\n    tag_108:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x11)\n      revert(0x00, 0x24)\n    tag_18:\n      jumpi(tag_36, callvalue)\n      tag_112\n      calldatasize\n      tag_3\n      jump\t// in\n    tag_112:\n      swap1\n        /* \"health.sol\":4633:4693  require(_patientId < nextPatientId, \"Record does not exist\") */\n      tag_113\n        /* \"health.sol\":4654:4667  nextPatientId */\n      0x01\n        /* \"health.sol\":61:5635  contract Health {... */\n      sload\n        /* \"health.sol\":4641:4667  _patientId < nextPatientId */\n      dup3\n      lt\n        /* \"health.sol\":4633:4693  require(_patientId < nextPatientId, \"Record does not exist\") */\n      tag_8\n      jump\t// in\n    tag_113:\n        /* \"health.sol\":61:5635  contract Health {... */\n      0x00\n      mstore\n      mstore(0x20, 0x00)\n      keccak256(0x00, 0x40)\n      swap1\n      mload(0x40)\n        /* \"health.sol\":4814:4836  abi.encodePacked(_pin) */\n      tag_114\n        /* \"health.sol\":61:5635  contract Health {... */\n      0x20\n        /* \"health.sol\":4814:4836  abi.encodePacked(_pin) */\n      dup3\n      dup2\n      dup1\n      dup3\n      add\n        /* \"health.sol\":61:5635  contract Health {... */\n      swap6\n      dup1\n      mload\n      swap2\n      dup3\n      swap2\n      add\n      dup8\n      mcopy\n      dup2\n      add\n      0x00\n      dup4\n      dup3\n      add\n      mstore\n        /* \"health.sol\":4814:4836  abi.encodePacked(_pin) */\n      sub\n      add\n        /* \"health.sol\":5530:5559  abi.encodePacked(_fieldValue) */\n      not(0x1f)\n        /* \"health.sol\":4814:4836  abi.encodePacked(_pin) */\n      dup2\n      add\n      dup4\n      mstore\n      dup3\n      tag_1\n      jump\t// in\n    tag_114:\n        /* \"health.sol\":61:5635  contract Health {... */\n      mload\n        /* \"health.sol\":4804:4837  keccak256(abi.encodePacked(_pin)) */\n      swap1\n      keccak256\n        /* \"health.sol\":4841:4864  record.emergencyPinHash */\n      0x07\n      dup3\n      add\n        /* \"health.sol\":61:5635  contract Health {... */\n      sload\n        /* \"health.sol\":4804:4864  keccak256(abi.encodePacked(_pin)) == record.emergencyPinHash */\n      sub\n        /* \"health.sol\":61:5635  contract Health {... */\n      tag_115\n      jumpi\n        /* \"health.sol\":4941:4956  record.ipfsHash */\n      0x02\n        /* \"health.sol\":61:5635  contract Health {... */\n      0x20\n        /* \"health.sol\":4941:4956  record.ipfsHash */\n      swap2\n      add\n        /* \"health.sol\":61:5635  contract Health {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_115:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x15\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x59, 0x24b73b30b634b21032b6b2b933b2b731bc902824a7)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_16:\n      jumpi(tag_36, callvalue)\n      jumpi(tag_36, slt(add(not(0x03), calldatasize), 0x60))\n      calldataload(0x04)\n      calldataload(0x24)\n      0xffffffffffffffff\n      dup2\n      gt\n      tag_36\n      jumpi\n      tag_123\n      swap1\n      calldatasize\n      swap1\n      0x04\n      add\n      tag_2\n      jump\t// in\n    tag_123:\n      swap1\n      calldataload(0x44)\n      0xffffffffffffffff\n      dup2\n      gt\n      tag_36\n      jumpi\n      0x20\n      swap3\n      tag_126\n      tag_127\n      swap3\n      calldatasize\n      swap1\n      0x04\n      add\n      tag_2\n      jump\t// in\n    tag_126:\n      swap3\n        /* \"health.sol\":5181:5241  require(_patientId < nextPatientId, \"Record does not exist\") */\n      tag_128\n        /* \"health.sol\":61:5635  contract Health {... */\n      sload(0x01)\n        /* \"health.sol\":5189:5215  _patientId < nextPatientId */\n      dup3\n      lt\n        /* \"health.sol\":5181:5241  require(_patientId < nextPatientId, \"Record does not exist\") */\n      tag_8\n      jump\t// in\n    tag_128:\n        /* \"health.sol\":61:5635  contract Health {... */\n      0x00\n      mstore\n      0x00\n      dup5\n      mstore\n      0x04\n      keccak256(0x00, 0x40)\n      swap4\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      0x01\n        /* \"health.sol\":5366:5378  record.owner */\n      dup7\n      add\n        /* \"health.sol\":61:5635  contract Health {... */\n      sload\n      and\n        /* \"health.sol\":5352:5362  msg.sender */\n      caller\n        /* \"health.sol\":5352:5378  msg.sender == record.owner */\n      eq\n        /* \"health.sol\":5352:5434  msg.sender == record.owner || ... */\n      dup1\n      iszero\n      tag_129\n      jumpi\n        /* \"health.sol\":61:5635  contract Health {... */\n    tag_130:\n        /* \"health.sol\":5330:5476  require(... */\n      tag_131\n      swap1\n      tag_9\n      jump\t// in\n    tag_131:\n        /* \"health.sol\":61:5635  contract Health {... */\n      mload(0x40)\n        /* \"health.sol\":5530:5559  abi.encodePacked(_fieldValue) */\n      tag_132\n      dup8\n      dup3\n      dup2\n      dup1\n      dup3\n      add\n        /* \"health.sol\":61:5635  contract Health {... */\n      swap6\n      dup1\n      mload\n      swap2\n      dup3\n      swap2\n      add\n      dup8\n      mcopy\n      dup2\n      add\n      0x00\n      dup4\n      dup3\n      add\n      mstore\n        /* \"health.sol\":5530:5559  abi.encodePacked(_fieldValue) */\n      sub\n      add\n      not(0x1f)\n      dup2\n      add\n      dup4\n      mstore\n      dup3\n      tag_1\n      jump\t// in\n    tag_132:\n        /* \"health.sol\":61:5635  contract Health {... */\n      mload\n        /* \"health.sol\":5520:5560  keccak256(abi.encodePacked(_fieldValue)) */\n      swap1\n      keccak256\n        /* \"health.sol\":5578:5596  record.fieldHashes */\n      swap4\n      add\n        /* \"health.sol\":61:5635  contract Health {... */\n      swap1\n      tag_10\n      jump\t// in\n    tag_127:\n      sload\n        /* \"health.sol\":5578:5624  record.fieldHashes[_fieldName] == expectedHash */\n      eq\n        /* \"health.sol\":61:5635  contract Health {... */\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n        /* \"health.sol\":5352:5434  msg.sender == record.owner || ... */\n    tag_129:\n      pop\n        /* \"health.sol\":5352:5362  msg.sender */\n      caller\n      0x00\n        /* \"health.sol\":61:5635  contract Health {... */\n      swap1\n      dup2\n      mstore\n        /* \"health.sol\":5396:5422  record.authorizedProviders */\n      0x03\n      dup7\n      add\n        /* \"health.sol\":61:5635  contract Health {... */\n      dup8\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"health.sol\":5352:5434  msg.sender == record.owner || ... */\n      jump(tag_130)\n        /* \"health.sol\":61:5635  contract Health {... */\n    tag_1:\n      swap1\n      0x1f\n        /* \"health.sol\":5530:5559  abi.encodePacked(_fieldValue) */\n      dup1\n      not\n        /* \"health.sol\":61:5635  contract Health {... */\n      swap2\n      add\n      and\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_133\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_133:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_2:\n      dup2\n      0x1f\n      dup3\n      add\n      slt\n      iszero\n      tag_36\n      jumpi\n      dup1\n      calldataload\n      swap1\n      0xffffffffffffffff\n      dup3\n      gt\n      tag_133\n      jumpi\n      mload(0x40)\n      swap3\n      tag_139\n        /* \"health.sol\":5530:5559  abi.encodePacked(_fieldValue) */\n      0x1f\n        /* \"health.sol\":61:5635  contract Health {... */\n      dup5\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup6\n      tag_1\n      jump\t// in\n    tag_139:\n      dup3\n      dup5\n      mstore\n      0x20\n      dup4\n      dup4\n      add\n      add\n      gt\n      tag_36\n      jumpi\n      dup2\n      0x00\n      swap3\n      0x20\n      dup1\n      swap4\n      add\n      dup4\n      dup7\n      add\n      calldatacopy\n      dup4\n      add\n      add\n      mstore\n      swap1\n      jump\t// out\n    tag_3:\n      swap1\n      0x40\n      not(0x03)\n      dup4\n      add\n      slt\n      tag_36\n      jumpi\n      calldataload(0x04)\n      swap2\n      calldataload(0x24)\n      swap1\n      0xffffffffffffffff\n      dup3\n      gt\n      tag_36\n      jumpi\n      tag_146\n      swap2\n      0x04\n      add\n      tag_2\n      jump\t// in\n    tag_146:\n      swap1\n      jump\t// out\n    tag_4:\n      0xffffffffffffffff\n      dup2\n      gt\n      tag_133\n      jumpi\n      0x05\n      shl\n      0x20\n      add\n      swap1\n      jump\t// out\n    tag_5:\n      swap1\n      dup1\n      0x1f\n      dup4\n      add\n      slt\n      iszero\n      tag_36\n      jumpi\n      dup2\n      calldataload\n      tag_151\n      dup2\n      tag_4\n      jump\t// in\n    tag_151:\n      swap3\n      tag_152\n      mload(0x40)\n      swap5\n      dup6\n      tag_1\n      jump\t// in\n    tag_152:\n      dup2\n      dup5\n      mstore\n      0x20\n      dup1\n      dup6\n      add\n      swap3\n      0x05\n      shl\n      dup3\n      add\n      add\n      swap3\n      dup4\n      gt\n      tag_36\n      jumpi\n      0x20\n      add\n      swap1\n    tag_155:\n      dup3\n      dup3\n      lt\n      tag_156\n      jumpi\n      pop\n      pop\n      pop\n      swap1\n      jump\t// out\n    tag_156:\n      dup2\n      calldataload\n      dup2\n      mstore\n      0x20\n      swap2\n      dup3\n      add\n      swap2\n      add\n      jump(tag_155)\n    tag_6:\n      swap1\n      dup1\n      0x1f\n      dup4\n      add\n      slt\n      iszero\n      tag_36\n      jumpi\n      dup2\n      calldataload\n      tag_160\n      dup2\n      tag_4\n      jump\t// in\n    tag_160:\n      swap3\n      tag_161\n      mload(0x40)\n      swap5\n      dup6\n      tag_1\n      jump\t// in\n    tag_161:\n      dup2\n      dup5\n      mstore\n      0x20\n      dup1\n      dup6\n      add\n      swap3\n      0x05\n      shl\n      dup3\n      add\n      add\n      swap2\n      dup4\n      dup4\n      gt\n      tag_36\n      jumpi\n      0x20\n      dup3\n      add\n      swap1\n    tag_164:\n      dup4\n      dup3\n      lt\n      tag_165\n      jumpi\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      jump\t// out\n    tag_165:\n      dup2\n      calldataload\n      0xffffffffffffffff\n      dup2\n      gt\n      tag_36\n      jumpi\n      0x20\n      swap2\n      tag_169\n      dup8\n      dup5\n      dup1\n      swap5\n      dup9\n      add\n      add\n      tag_2\n      jump\t// in\n    tag_169:\n      dup2\n      mstore\n      add\n      swap2\n      add\n      swap1\n      jump(tag_164)\n    tag_7:\n      0x40\n      swap1\n      not(0x03)\n      add\n      slt\n      tag_36\n      jumpi\n      calldataload(0x04)\n      swap1\n      calldataload(0x24)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      dup2\n      sub\n      tag_36\n      jumpi\n      swap1\n      jump\t// out\n    tag_8:\n      iszero\n      tag_174\n      jumpi\n      jump\t// out\n    tag_174:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x15\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x5a, 0x149958dbdc9908191bd95cc81b9bdd08195e1a5cdd)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_9:\n      iszero\n      tag_176\n      jumpi\n      jump\t// out\n    tag_176:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0e\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x92, 0x139bdd08185d5d1a1bdc9a5e9959)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_10:\n      mload(0x40)\n      dup2\n      mload\n      swap1\n      swap3\n      0x20\n      swap3\n      dup5\n      swap3\n      swap1\n      dup2\n      swap1\n      dup6\n      add\n      dup5\n      mcopy\n      dup3\n      add\n      swap1\n      dup2\n      mstore\n      sub\n      add\n      swap1\n      keccak256\n      swap1\n      jump\t// out\n    tag_11:\n      iszero\n      tag_178\n      jumpi\n      jump\t// out\n    tag_178:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x18\n      0x24\n      dup3\n      add\n      mstore\n      0x4d69736d6174636820696e206669656c6420636f756e74730000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_12:\n      dup1\n      mload\n      dup3\n      lt\n      iszero\n      tag_180\n      jumpi\n      0x20\n      swap2\n      0x05\n      shl\n      add\n      add\n      swap1\n      jump\t// out\n    tag_180:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_13:\n      iszero\n      tag_182\n      jumpi\n      jump\t// out\n    tag_182:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x17\n      0x24\n      dup3\n      add\n      mstore\n      0x4f6e6c792070617469656e742063616e206d6f64696679000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n\n    auxdata: 0xa2646970667358221220748fa4ea6050d1a8fd87e3a23da4eb6c47e53f2c8096b6c2c24ce70af63384ff64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60808060405234601557610b5b908161001a8239f35b5f80fdfe60806040526004361015610011575f80fd5b5f3560e01c80631b424e7a146106ff5780633c2bc6a11461065357806363893e461461052a57806365dd152c1461042257806365e87a191461030e578063b1131795146102f1578063b38deff014610273578063b39e07e4146101f9578063d3d188a1146101915763d9a5ec1b14610087575f80fd5b3461018d576100953661099f565b815f525f6020526100b660018060a01b03600160405f200154163314610ad9565b6100c360015483106109c5565b5f828152602081815260408083206001600160a01b038516845260030190915290205460ff1615610148575f828152602081815260408083206001600160a01b03909416808452600394909401825291829020805460ff1916905590519182527f125883b94692baebecad9f111ed97ffa626523bbbadc6b0ef85ee1b56b9e52d591a2005b60405162461bcd60e51b815260206004820152601760248201527f50726f7669646572206e6f7420617574686f72697a65640000000000000000006044820152606490fd5b5f80fd5b3461018d57602036600319011261018d576004355f525f60205260c060405f2080549060018060a01b036001820154169060028101546005820154906007600684015493015493604051958652602086015260408501526060840152608083015260a0820152f35b3461018d57602036600319011261018d5760043561021a60015482106109c5565b5f525f6020526040805f2060018060a01b036001820154163314801561025a575b61024490610a09565b6006600282015491015482519182526020820152f35b50335f908152600382016020528290205460ff1661023b565b3461018d5761028136610878565b815f525f6020526102a260018060a01b03600160405f200154163314610ad9565b6102af60015483106109c5565b6040516102db6020828180820195805191829101875e81015f838201520301601f1981018352826107ec565b519020905f525f602052600760405f2001555f80f35b3461018d575f36600319011261018d576020600154604051908152f35b3461018d57608036600319011261018d5760243560043560443567ffffffffffffffff811161018d576103459036906004016108c3565b60643567ffffffffffffffff811161018d579061036784923690600401610920565b90835f525f60205261038960018060a01b03600160405f200154163314610ad9565b61039660015485106109c5565b6103a38151835114610a65565b835f525f60205260405f209383600286015542600686015560045f9501945b83518110156103f457806103d860019285610ab1565b516103ed886103e78489610ab1565b51610a46565b55016103c2565b507f0fef1e979d0b74e703ce41335e4adc7465be6b6511ce6870d8d76b85a2cd987c602085604051908152a2005b3461018d576104303661099f565b815f525f60205261045160018060a01b03600160405f200154163314610ad9565b61045e60015483106109c5565b5f828152602081815260408083206001600160a01b038516845260030190915290205460ff166104e5575f828152602081815260408083206001600160a01b03909416808452600394909401825291829020805460ff1916600117905590519182527f3c3a9147a1fc73dd51a32f4d10c43d457e8cb826eb6f35cac6349eb965ba82b491a2005b60405162461bcd60e51b815260206004820152601b60248201527f50726f766964657220616c726561647920617574686f72697a656400000000006044820152606490fd5b3461018d57606036600319011261018d5760043560243567ffffffffffffffff811161018d5761055e9036906004016108c3565b60443567ffffffffffffffff811161018d5761057f83913690600401610920565b61058c8351825114610a65565b60015492835f525f60205260405f209380855560018501336bffffffffffffffffffffffff60a01b82541617905583600286015542600686015560045f9501945b83518110156105f957806105e360019285610ab1565b516105f2886103e78489610ab1565b55016105cd565b50836001545f19811461063f577fbbf4486ce56a8bb18798d25a2ef88158d76aac87bfb156491906d126855f4428916001604092016001558151903382526020820152a2005b634e487b7160e01b5f52601160045260245ffd5b3461018d5761066136610878565b9061066f60015482106109c5565b5f525f60205260405f20906040516106a66020828180820195805191829101875e81015f838201520301601f1981018352826107ec565b5190206007820154036106c25760026020910154604051908152f35b60405162461bcd60e51b815260206004820152601560248201527424b73b30b634b21032b6b2b933b2b731bc902824a760591b6044820152606490fd5b3461018d57606036600319011261018d5760043560243567ffffffffffffffff811161018d57610733903690600401610822565b9060443567ffffffffffffffff811161018d5760209261075a6107c9923690600401610822565b9261076860015482106109c5565b5f525f8452600460405f209360018060a01b03600186015416331480156107d3575b61079390610a09565b6040516107be87828180820195805191829101875e81015f838201520301601f1981018352826107ec565b519020930190610a46565b5414604051908152f35b50335f908152600386018752604090205460ff1661078a565b90601f8019910116810190811067ffffffffffffffff82111761080e57604052565b634e487b7160e01b5f52604160045260245ffd5b81601f8201121561018d5780359067ffffffffffffffff821161080e5760405192610857601f8401601f1916602001856107ec565b8284526020838301011161018d57815f926020809301838601378301015290565b90604060031983011261018d57600435916024359067ffffffffffffffff821161018d576108a891600401610822565b90565b67ffffffffffffffff811161080e5760051b60200190565b9080601f8301121561018d5781356108da816108ab565b926108e860405194856107ec565b81845260208085019260051b82010192831161018d57602001905b8282106109105750505090565b8135815260209182019101610903565b9080601f8301121561018d578135610937816108ab565b9261094560405194856107ec565b81845260208085019260051b8201019183831161018d5760208201905b83821061097157505050505090565b813567ffffffffffffffff811161018d5760209161099487848094880101610822565b815201910190610962565b604090600319011261018d57600435906024356001600160a01b038116810361018d5790565b156109cc57565b60405162461bcd60e51b8152602060048201526015602482015274149958dbdc9908191bd95cc81b9bdd08195e1a5cdd605a1b6044820152606490fd5b15610a1057565b60405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606490fd5b6040518151909260209284929081908501845e82019081520301902090565b15610a6c57565b60405162461bcd60e51b815260206004820152601860248201527f4d69736d6174636820696e206669656c6420636f756e747300000000000000006044820152606490fd5b8051821015610ac55760209160051b010190565b634e487b7160e01b5f52603260045260245ffd5b15610ae057565b60405162461bcd60e51b815260206004820152601760248201527f4f6e6c792070617469656e742063616e206d6f646966790000000000000000006044820152606490fdfea2646970667358221220748fa4ea6050d1a8fd87e3a23da4eb6c47e53f2c8096b6c2c24ce70af63384ff64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x15 JUMPI PUSH2 0xB5B SWAP1 DUP2 PUSH2 0x1A DUP3 CODECOPY RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x11 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1B424E7A EQ PUSH2 0x6FF JUMPI DUP1 PUSH4 0x3C2BC6A1 EQ PUSH2 0x653 JUMPI DUP1 PUSH4 0x63893E46 EQ PUSH2 0x52A JUMPI DUP1 PUSH4 0x65DD152C EQ PUSH2 0x422 JUMPI DUP1 PUSH4 0x65E87A19 EQ PUSH2 0x30E JUMPI DUP1 PUSH4 0xB1131795 EQ PUSH2 0x2F1 JUMPI DUP1 PUSH4 0xB38DEFF0 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0xB39E07E4 EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0xD3D188A1 EQ PUSH2 0x191 JUMPI PUSH4 0xD9A5EC1B EQ PUSH2 0x87 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x18D JUMPI PUSH2 0x95 CALLDATASIZE PUSH2 0x99F JUMP JUMPDEST DUP2 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH2 0xB6 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD AND CALLER EQ PUSH2 0xAD9 JUMP JUMPDEST PUSH2 0xC3 PUSH1 0x1 SLOAD DUP4 LT PUSH2 0x9C5 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE PUSH1 0x3 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x148 JUMPI PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP1 DUP5 MSTORE PUSH1 0x3 SWAP5 SWAP1 SWAP5 ADD DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP1 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x125883B94692BAEBECAD9F111ED97FFA626523BBBADC6B0EF85EE1B56B9E52D5 SWAP2 LOG2 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F7669646572206E6F7420617574686F72697A6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x18D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18D JUMPI PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0xC0 PUSH1 0x40 PUSH0 KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 DUP3 ADD SLOAD AND SWAP1 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x5 DUP3 ADD SLOAD SWAP1 PUSH1 0x7 PUSH1 0x6 DUP5 ADD SLOAD SWAP4 ADD SLOAD SWAP4 PUSH1 0x40 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x18D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18D JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x21A PUSH1 0x1 SLOAD DUP3 LT PUSH2 0x9C5 JUMP JUMPDEST PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 PUSH0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 DUP3 ADD SLOAD AND CALLER EQ DUP1 ISZERO PUSH2 0x25A JUMPI JUMPDEST PUSH2 0x244 SWAP1 PUSH2 0xA09 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x2 DUP3 ADD SLOAD SWAP2 ADD SLOAD DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x20 MSTORE DUP3 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x23B JUMP JUMPDEST CALLVALUE PUSH2 0x18D JUMPI PUSH2 0x281 CALLDATASIZE PUSH2 0x878 JUMP JUMPDEST DUP2 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH2 0x2A2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD AND CALLER EQ PUSH2 0xAD9 JUMP JUMPDEST PUSH2 0x2AF PUSH1 0x1 SLOAD DUP4 LT PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DB PUSH1 0x20 DUP3 DUP2 DUP1 DUP3 ADD SWAP6 DUP1 MLOAD SWAP2 DUP3 SWAP2 ADD DUP8 MCOPY DUP2 ADD PUSH0 DUP4 DUP3 ADD MSTORE SUB ADD PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x7EC JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x7 PUSH1 0x40 PUSH0 KECCAK256 ADD SSTORE PUSH0 DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x18D JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18D JUMPI PUSH1 0x20 PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x18D JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18D JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x18D JUMPI PUSH2 0x345 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x8C3 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x18D JUMPI SWAP1 PUSH2 0x367 DUP5 SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x920 JUMP JUMPDEST SWAP1 DUP4 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH2 0x389 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD AND CALLER EQ PUSH2 0xAD9 JUMP JUMPDEST PUSH2 0x396 PUSH1 0x1 SLOAD DUP6 LT PUSH2 0x9C5 JUMP JUMPDEST PUSH2 0x3A3 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xA65 JUMP JUMPDEST DUP4 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP4 DUP4 PUSH1 0x2 DUP7 ADD SSTORE TIMESTAMP PUSH1 0x6 DUP7 ADD SSTORE PUSH1 0x4 PUSH0 SWAP6 ADD SWAP5 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x3F4 JUMPI DUP1 PUSH2 0x3D8 PUSH1 0x1 SWAP3 DUP6 PUSH2 0xAB1 JUMP JUMPDEST MLOAD PUSH2 0x3ED DUP9 PUSH2 0x3E7 DUP5 DUP10 PUSH2 0xAB1 JUMP JUMPDEST MLOAD PUSH2 0xA46 JUMP JUMPDEST SSTORE ADD PUSH2 0x3C2 JUMP JUMPDEST POP PUSH32 0xFEF1E979D0B74E703CE41335E4ADC7465BE6B6511CE6870D8D76B85A2CD987C PUSH1 0x20 DUP6 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 STOP JUMPDEST CALLVALUE PUSH2 0x18D JUMPI PUSH2 0x430 CALLDATASIZE PUSH2 0x99F JUMP JUMPDEST DUP2 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH2 0x451 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD AND CALLER EQ PUSH2 0xAD9 JUMP JUMPDEST PUSH2 0x45E PUSH1 0x1 SLOAD DUP4 LT PUSH2 0x9C5 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE PUSH1 0x3 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x4E5 JUMPI PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP1 DUP5 MSTORE PUSH1 0x3 SWAP5 SWAP1 SWAP5 ADD DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE SWAP1 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x3C3A9147A1FC73DD51A32F4D10C43D457E8CB826EB6F35CAC6349EB965BA82B4 SWAP2 LOG2 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F766964657220616C726561647920617574686F72697A65640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x18D JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18D JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x18D JUMPI PUSH2 0x55E SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x8C3 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x18D JUMPI PUSH2 0x57F DUP4 SWAP2 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x920 JUMP JUMPDEST PUSH2 0x58C DUP4 MLOAD DUP3 MLOAD EQ PUSH2 0xA65 JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP3 DUP4 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP4 DUP1 DUP6 SSTORE PUSH1 0x1 DUP6 ADD CALLER PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE DUP4 PUSH1 0x2 DUP7 ADD SSTORE TIMESTAMP PUSH1 0x6 DUP7 ADD SSTORE PUSH1 0x4 PUSH0 SWAP6 ADD SWAP5 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x5F9 JUMPI DUP1 PUSH2 0x5E3 PUSH1 0x1 SWAP3 DUP6 PUSH2 0xAB1 JUMP JUMPDEST MLOAD PUSH2 0x5F2 DUP9 PUSH2 0x3E7 DUP5 DUP10 PUSH2 0xAB1 JUMP JUMPDEST SSTORE ADD PUSH2 0x5CD JUMP JUMPDEST POP DUP4 PUSH1 0x1 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0x63F JUMPI PUSH32 0xBBF4486CE56A8BB18798D25A2EF88158D76AAC87BFB156491906D126855F4428 SWAP2 PUSH1 0x1 PUSH1 0x40 SWAP3 ADD PUSH1 0x1 SSTORE DUP2 MLOAD SWAP1 CALLER DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG2 STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x18D JUMPI PUSH2 0x661 CALLDATASIZE PUSH2 0x878 JUMP JUMPDEST SWAP1 PUSH2 0x66F PUSH1 0x1 SLOAD DUP3 LT PUSH2 0x9C5 JUMP JUMPDEST PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH1 0x40 MLOAD PUSH2 0x6A6 PUSH1 0x20 DUP3 DUP2 DUP1 DUP3 ADD SWAP6 DUP1 MLOAD SWAP2 DUP3 SWAP2 ADD DUP8 MCOPY DUP2 ADD PUSH0 DUP4 DUP3 ADD MSTORE SUB ADD PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x7EC JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH1 0x7 DUP3 ADD SLOAD SUB PUSH2 0x6C2 JUMPI PUSH1 0x2 PUSH1 0x20 SWAP2 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x24B73B30B634B21032B6B2B933B2B731BC902824A7 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x18D JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18D JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x18D JUMPI PUSH2 0x733 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x822 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x18D JUMPI PUSH1 0x20 SWAP3 PUSH2 0x75A PUSH2 0x7C9 SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x822 JUMP JUMPDEST SWAP3 PUSH2 0x768 PUSH1 0x1 SLOAD DUP3 LT PUSH2 0x9C5 JUMP JUMPDEST PUSH0 MSTORE PUSH0 DUP5 MSTORE PUSH1 0x4 PUSH1 0x40 PUSH0 KECCAK256 SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 DUP7 ADD SLOAD AND CALLER EQ DUP1 ISZERO PUSH2 0x7D3 JUMPI JUMPDEST PUSH2 0x793 SWAP1 PUSH2 0xA09 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7BE DUP8 DUP3 DUP2 DUP1 DUP3 ADD SWAP6 DUP1 MLOAD SWAP2 DUP3 SWAP2 ADD DUP8 MCOPY DUP2 ADD PUSH0 DUP4 DUP3 ADD MSTORE SUB ADD PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x7EC JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP4 ADD SWAP1 PUSH2 0xA46 JUMP JUMPDEST SLOAD EQ PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP7 ADD DUP8 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x78A JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x80E JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x18D JUMPI DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x80E JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x857 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0x7EC JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x18D JUMPI DUP2 PUSH0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x40 PUSH1 0x3 NOT DUP4 ADD SLT PUSH2 0x18D JUMPI PUSH1 0x4 CALLDATALOAD SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x18D JUMPI PUSH2 0x8A8 SWAP2 PUSH1 0x4 ADD PUSH2 0x822 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x80E JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x18D JUMPI DUP2 CALLDATALOAD PUSH2 0x8DA DUP2 PUSH2 0x8AB JUMP JUMPDEST SWAP3 PUSH2 0x8E8 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x7EC JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x18D JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x910 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x903 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x18D JUMPI DUP2 CALLDATALOAD PUSH2 0x937 DUP2 PUSH2 0x8AB JUMP JUMPDEST SWAP3 PUSH2 0x945 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x7EC JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP2 DUP4 DUP4 GT PUSH2 0x18D JUMPI PUSH1 0x20 DUP3 ADD SWAP1 JUMPDEST DUP4 DUP3 LT PUSH2 0x971 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x18D JUMPI PUSH1 0x20 SWAP2 PUSH2 0x994 DUP8 DUP5 DUP1 SWAP5 DUP9 ADD ADD PUSH2 0x822 JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x962 JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x18D JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x18D JUMPI SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x9CC JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x149958DBDC9908191BD95CC81B9BDD08195E1A5CDD PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0xA10 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP2 MLOAD SWAP1 SWAP3 PUSH1 0x20 SWAP3 DUP5 SWAP3 SWAP1 DUP2 SWAP1 DUP6 ADD DUP5 MCOPY DUP3 ADD SWAP1 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0xA6C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D69736D6174636820696E206669656C6420636F756E74730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0xAC5 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ISZERO PUSH2 0xAE0 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792070617469656E742063616E206D6F64696679000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0x8FA4EA6050D1A8FD87E3A23DA4EB6C47E53F2C8096 0xB6 0xC2 0xC2 0x4C 0xE7 EXP 0xF6 CALLER DUP5 SELFDESTRUCT PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "61:5574:0:-:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode_array_bytes32_dyn": {
									"entryPoint": 2243,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_array_string_dyn": {
									"entryPoint": 2336,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_string": {
									"entryPoint": 2082,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_uint256t_address": {
									"entryPoint": 2463,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"abi_decode_uint256t_string": {
									"entryPoint": 2168,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"array_allocation_size_array_bytes32_dyn": {
									"entryPoint": 2219,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 2028,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"memory_array_index_access_bytes32_dyn": {
									"entryPoint": 2737,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"packed_hashed_string_uint256_to_string_uint": {
									"entryPoint": 2630,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"require_helper_stringliteral_1afb": {
									"entryPoint": 2777,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"require_helper_stringliteral_752d": {
									"entryPoint": 2501,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"require_helper_stringliteral_e57a": {
									"entryPoint": 2661,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"require_helper_stringliteral_fac3": {
									"entryPoint": 2569,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361015610011575f80fd5b5f3560e01c80631b424e7a146106ff5780633c2bc6a11461065357806363893e461461052a57806365dd152c1461042257806365e87a191461030e578063b1131795146102f1578063b38deff014610273578063b39e07e4146101f9578063d3d188a1146101915763d9a5ec1b14610087575f80fd5b3461018d576100953661099f565b815f525f6020526100b660018060a01b03600160405f200154163314610ad9565b6100c360015483106109c5565b5f828152602081815260408083206001600160a01b038516845260030190915290205460ff1615610148575f828152602081815260408083206001600160a01b03909416808452600394909401825291829020805460ff1916905590519182527f125883b94692baebecad9f111ed97ffa626523bbbadc6b0ef85ee1b56b9e52d591a2005b60405162461bcd60e51b815260206004820152601760248201527f50726f7669646572206e6f7420617574686f72697a65640000000000000000006044820152606490fd5b5f80fd5b3461018d57602036600319011261018d576004355f525f60205260c060405f2080549060018060a01b036001820154169060028101546005820154906007600684015493015493604051958652602086015260408501526060840152608083015260a0820152f35b3461018d57602036600319011261018d5760043561021a60015482106109c5565b5f525f6020526040805f2060018060a01b036001820154163314801561025a575b61024490610a09565b6006600282015491015482519182526020820152f35b50335f908152600382016020528290205460ff1661023b565b3461018d5761028136610878565b815f525f6020526102a260018060a01b03600160405f200154163314610ad9565b6102af60015483106109c5565b6040516102db6020828180820195805191829101875e81015f838201520301601f1981018352826107ec565b519020905f525f602052600760405f2001555f80f35b3461018d575f36600319011261018d576020600154604051908152f35b3461018d57608036600319011261018d5760243560043560443567ffffffffffffffff811161018d576103459036906004016108c3565b60643567ffffffffffffffff811161018d579061036784923690600401610920565b90835f525f60205261038960018060a01b03600160405f200154163314610ad9565b61039660015485106109c5565b6103a38151835114610a65565b835f525f60205260405f209383600286015542600686015560045f9501945b83518110156103f457806103d860019285610ab1565b516103ed886103e78489610ab1565b51610a46565b55016103c2565b507f0fef1e979d0b74e703ce41335e4adc7465be6b6511ce6870d8d76b85a2cd987c602085604051908152a2005b3461018d576104303661099f565b815f525f60205261045160018060a01b03600160405f200154163314610ad9565b61045e60015483106109c5565b5f828152602081815260408083206001600160a01b038516845260030190915290205460ff166104e5575f828152602081815260408083206001600160a01b03909416808452600394909401825291829020805460ff1916600117905590519182527f3c3a9147a1fc73dd51a32f4d10c43d457e8cb826eb6f35cac6349eb965ba82b491a2005b60405162461bcd60e51b815260206004820152601b60248201527f50726f766964657220616c726561647920617574686f72697a656400000000006044820152606490fd5b3461018d57606036600319011261018d5760043560243567ffffffffffffffff811161018d5761055e9036906004016108c3565b60443567ffffffffffffffff811161018d5761057f83913690600401610920565b61058c8351825114610a65565b60015492835f525f60205260405f209380855560018501336bffffffffffffffffffffffff60a01b82541617905583600286015542600686015560045f9501945b83518110156105f957806105e360019285610ab1565b516105f2886103e78489610ab1565b55016105cd565b50836001545f19811461063f577fbbf4486ce56a8bb18798d25a2ef88158d76aac87bfb156491906d126855f4428916001604092016001558151903382526020820152a2005b634e487b7160e01b5f52601160045260245ffd5b3461018d5761066136610878565b9061066f60015482106109c5565b5f525f60205260405f20906040516106a66020828180820195805191829101875e81015f838201520301601f1981018352826107ec565b5190206007820154036106c25760026020910154604051908152f35b60405162461bcd60e51b815260206004820152601560248201527424b73b30b634b21032b6b2b933b2b731bc902824a760591b6044820152606490fd5b3461018d57606036600319011261018d5760043560243567ffffffffffffffff811161018d57610733903690600401610822565b9060443567ffffffffffffffff811161018d5760209261075a6107c9923690600401610822565b9261076860015482106109c5565b5f525f8452600460405f209360018060a01b03600186015416331480156107d3575b61079390610a09565b6040516107be87828180820195805191829101875e81015f838201520301601f1981018352826107ec565b519020930190610a46565b5414604051908152f35b50335f908152600386018752604090205460ff1661078a565b90601f8019910116810190811067ffffffffffffffff82111761080e57604052565b634e487b7160e01b5f52604160045260245ffd5b81601f8201121561018d5780359067ffffffffffffffff821161080e5760405192610857601f8401601f1916602001856107ec565b8284526020838301011161018d57815f926020809301838601378301015290565b90604060031983011261018d57600435916024359067ffffffffffffffff821161018d576108a891600401610822565b90565b67ffffffffffffffff811161080e5760051b60200190565b9080601f8301121561018d5781356108da816108ab565b926108e860405194856107ec565b81845260208085019260051b82010192831161018d57602001905b8282106109105750505090565b8135815260209182019101610903565b9080601f8301121561018d578135610937816108ab565b9261094560405194856107ec565b81845260208085019260051b8201019183831161018d5760208201905b83821061097157505050505090565b813567ffffffffffffffff811161018d5760209161099487848094880101610822565b815201910190610962565b604090600319011261018d57600435906024356001600160a01b038116810361018d5790565b156109cc57565b60405162461bcd60e51b8152602060048201526015602482015274149958dbdc9908191bd95cc81b9bdd08195e1a5cdd605a1b6044820152606490fd5b15610a1057565b60405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606490fd5b6040518151909260209284929081908501845e82019081520301902090565b15610a6c57565b60405162461bcd60e51b815260206004820152601860248201527f4d69736d6174636820696e206669656c6420636f756e747300000000000000006044820152606490fd5b8051821015610ac55760209160051b010190565b634e487b7160e01b5f52603260045260245ffd5b15610ae057565b60405162461bcd60e51b815260206004820152601760248201527f4f6e6c792070617469656e742063616e206d6f646966790000000000000000006044820152606490fdfea2646970667358221220748fa4ea6050d1a8fd87e3a23da4eb6c47e53f2c8096b6c2c24ce70af63384ff64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x11 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1B424E7A EQ PUSH2 0x6FF JUMPI DUP1 PUSH4 0x3C2BC6A1 EQ PUSH2 0x653 JUMPI DUP1 PUSH4 0x63893E46 EQ PUSH2 0x52A JUMPI DUP1 PUSH4 0x65DD152C EQ PUSH2 0x422 JUMPI DUP1 PUSH4 0x65E87A19 EQ PUSH2 0x30E JUMPI DUP1 PUSH4 0xB1131795 EQ PUSH2 0x2F1 JUMPI DUP1 PUSH4 0xB38DEFF0 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0xB39E07E4 EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0xD3D188A1 EQ PUSH2 0x191 JUMPI PUSH4 0xD9A5EC1B EQ PUSH2 0x87 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x18D JUMPI PUSH2 0x95 CALLDATASIZE PUSH2 0x99F JUMP JUMPDEST DUP2 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH2 0xB6 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD AND CALLER EQ PUSH2 0xAD9 JUMP JUMPDEST PUSH2 0xC3 PUSH1 0x1 SLOAD DUP4 LT PUSH2 0x9C5 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE PUSH1 0x3 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x148 JUMPI PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP1 DUP5 MSTORE PUSH1 0x3 SWAP5 SWAP1 SWAP5 ADD DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP1 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x125883B94692BAEBECAD9F111ED97FFA626523BBBADC6B0EF85EE1B56B9E52D5 SWAP2 LOG2 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F7669646572206E6F7420617574686F72697A6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x18D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18D JUMPI PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0xC0 PUSH1 0x40 PUSH0 KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 DUP3 ADD SLOAD AND SWAP1 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x5 DUP3 ADD SLOAD SWAP1 PUSH1 0x7 PUSH1 0x6 DUP5 ADD SLOAD SWAP4 ADD SLOAD SWAP4 PUSH1 0x40 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x18D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18D JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x21A PUSH1 0x1 SLOAD DUP3 LT PUSH2 0x9C5 JUMP JUMPDEST PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 PUSH0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 DUP3 ADD SLOAD AND CALLER EQ DUP1 ISZERO PUSH2 0x25A JUMPI JUMPDEST PUSH2 0x244 SWAP1 PUSH2 0xA09 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x2 DUP3 ADD SLOAD SWAP2 ADD SLOAD DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x20 MSTORE DUP3 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x23B JUMP JUMPDEST CALLVALUE PUSH2 0x18D JUMPI PUSH2 0x281 CALLDATASIZE PUSH2 0x878 JUMP JUMPDEST DUP2 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH2 0x2A2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD AND CALLER EQ PUSH2 0xAD9 JUMP JUMPDEST PUSH2 0x2AF PUSH1 0x1 SLOAD DUP4 LT PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DB PUSH1 0x20 DUP3 DUP2 DUP1 DUP3 ADD SWAP6 DUP1 MLOAD SWAP2 DUP3 SWAP2 ADD DUP8 MCOPY DUP2 ADD PUSH0 DUP4 DUP3 ADD MSTORE SUB ADD PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x7EC JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x7 PUSH1 0x40 PUSH0 KECCAK256 ADD SSTORE PUSH0 DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x18D JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18D JUMPI PUSH1 0x20 PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x18D JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18D JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x18D JUMPI PUSH2 0x345 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x8C3 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x18D JUMPI SWAP1 PUSH2 0x367 DUP5 SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x920 JUMP JUMPDEST SWAP1 DUP4 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH2 0x389 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD AND CALLER EQ PUSH2 0xAD9 JUMP JUMPDEST PUSH2 0x396 PUSH1 0x1 SLOAD DUP6 LT PUSH2 0x9C5 JUMP JUMPDEST PUSH2 0x3A3 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xA65 JUMP JUMPDEST DUP4 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP4 DUP4 PUSH1 0x2 DUP7 ADD SSTORE TIMESTAMP PUSH1 0x6 DUP7 ADD SSTORE PUSH1 0x4 PUSH0 SWAP6 ADD SWAP5 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x3F4 JUMPI DUP1 PUSH2 0x3D8 PUSH1 0x1 SWAP3 DUP6 PUSH2 0xAB1 JUMP JUMPDEST MLOAD PUSH2 0x3ED DUP9 PUSH2 0x3E7 DUP5 DUP10 PUSH2 0xAB1 JUMP JUMPDEST MLOAD PUSH2 0xA46 JUMP JUMPDEST SSTORE ADD PUSH2 0x3C2 JUMP JUMPDEST POP PUSH32 0xFEF1E979D0B74E703CE41335E4ADC7465BE6B6511CE6870D8D76B85A2CD987C PUSH1 0x20 DUP6 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 STOP JUMPDEST CALLVALUE PUSH2 0x18D JUMPI PUSH2 0x430 CALLDATASIZE PUSH2 0x99F JUMP JUMPDEST DUP2 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH2 0x451 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD AND CALLER EQ PUSH2 0xAD9 JUMP JUMPDEST PUSH2 0x45E PUSH1 0x1 SLOAD DUP4 LT PUSH2 0x9C5 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE PUSH1 0x3 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x4E5 JUMPI PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP1 DUP5 MSTORE PUSH1 0x3 SWAP5 SWAP1 SWAP5 ADD DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE SWAP1 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x3C3A9147A1FC73DD51A32F4D10C43D457E8CB826EB6F35CAC6349EB965BA82B4 SWAP2 LOG2 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F766964657220616C726561647920617574686F72697A65640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x18D JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18D JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x18D JUMPI PUSH2 0x55E SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x8C3 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x18D JUMPI PUSH2 0x57F DUP4 SWAP2 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x920 JUMP JUMPDEST PUSH2 0x58C DUP4 MLOAD DUP3 MLOAD EQ PUSH2 0xA65 JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP3 DUP4 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP4 DUP1 DUP6 SSTORE PUSH1 0x1 DUP6 ADD CALLER PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE DUP4 PUSH1 0x2 DUP7 ADD SSTORE TIMESTAMP PUSH1 0x6 DUP7 ADD SSTORE PUSH1 0x4 PUSH0 SWAP6 ADD SWAP5 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x5F9 JUMPI DUP1 PUSH2 0x5E3 PUSH1 0x1 SWAP3 DUP6 PUSH2 0xAB1 JUMP JUMPDEST MLOAD PUSH2 0x5F2 DUP9 PUSH2 0x3E7 DUP5 DUP10 PUSH2 0xAB1 JUMP JUMPDEST SSTORE ADD PUSH2 0x5CD JUMP JUMPDEST POP DUP4 PUSH1 0x1 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0x63F JUMPI PUSH32 0xBBF4486CE56A8BB18798D25A2EF88158D76AAC87BFB156491906D126855F4428 SWAP2 PUSH1 0x1 PUSH1 0x40 SWAP3 ADD PUSH1 0x1 SSTORE DUP2 MLOAD SWAP1 CALLER DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG2 STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x18D JUMPI PUSH2 0x661 CALLDATASIZE PUSH2 0x878 JUMP JUMPDEST SWAP1 PUSH2 0x66F PUSH1 0x1 SLOAD DUP3 LT PUSH2 0x9C5 JUMP JUMPDEST PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH1 0x40 MLOAD PUSH2 0x6A6 PUSH1 0x20 DUP3 DUP2 DUP1 DUP3 ADD SWAP6 DUP1 MLOAD SWAP2 DUP3 SWAP2 ADD DUP8 MCOPY DUP2 ADD PUSH0 DUP4 DUP3 ADD MSTORE SUB ADD PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x7EC JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH1 0x7 DUP3 ADD SLOAD SUB PUSH2 0x6C2 JUMPI PUSH1 0x2 PUSH1 0x20 SWAP2 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x24B73B30B634B21032B6B2B933B2B731BC902824A7 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x18D JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18D JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x18D JUMPI PUSH2 0x733 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x822 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x18D JUMPI PUSH1 0x20 SWAP3 PUSH2 0x75A PUSH2 0x7C9 SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x822 JUMP JUMPDEST SWAP3 PUSH2 0x768 PUSH1 0x1 SLOAD DUP3 LT PUSH2 0x9C5 JUMP JUMPDEST PUSH0 MSTORE PUSH0 DUP5 MSTORE PUSH1 0x4 PUSH1 0x40 PUSH0 KECCAK256 SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 DUP7 ADD SLOAD AND CALLER EQ DUP1 ISZERO PUSH2 0x7D3 JUMPI JUMPDEST PUSH2 0x793 SWAP1 PUSH2 0xA09 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7BE DUP8 DUP3 DUP2 DUP1 DUP3 ADD SWAP6 DUP1 MLOAD SWAP2 DUP3 SWAP2 ADD DUP8 MCOPY DUP2 ADD PUSH0 DUP4 DUP3 ADD MSTORE SUB ADD PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x7EC JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP4 ADD SWAP1 PUSH2 0xA46 JUMP JUMPDEST SLOAD EQ PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP7 ADD DUP8 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x78A JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x80E JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x18D JUMPI DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x80E JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x857 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0x7EC JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x18D JUMPI DUP2 PUSH0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x40 PUSH1 0x3 NOT DUP4 ADD SLT PUSH2 0x18D JUMPI PUSH1 0x4 CALLDATALOAD SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x18D JUMPI PUSH2 0x8A8 SWAP2 PUSH1 0x4 ADD PUSH2 0x822 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x80E JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x18D JUMPI DUP2 CALLDATALOAD PUSH2 0x8DA DUP2 PUSH2 0x8AB JUMP JUMPDEST SWAP3 PUSH2 0x8E8 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x7EC JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x18D JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x910 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x903 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x18D JUMPI DUP2 CALLDATALOAD PUSH2 0x937 DUP2 PUSH2 0x8AB JUMP JUMPDEST SWAP3 PUSH2 0x945 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x7EC JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP2 DUP4 DUP4 GT PUSH2 0x18D JUMPI PUSH1 0x20 DUP3 ADD SWAP1 JUMPDEST DUP4 DUP3 LT PUSH2 0x971 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x18D JUMPI PUSH1 0x20 SWAP2 PUSH2 0x994 DUP8 DUP5 DUP1 SWAP5 DUP9 ADD ADD PUSH2 0x822 JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x962 JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x18D JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x18D JUMPI SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x9CC JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x149958DBDC9908191BD95CC81B9BDD08195E1A5CDD PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0xA10 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP2 MLOAD SWAP1 SWAP3 PUSH1 0x20 SWAP3 DUP5 SWAP3 SWAP1 DUP2 SWAP1 DUP6 ADD DUP5 MCOPY DUP3 ADD SWAP1 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0xA6C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D69736D6174636820696E206669656C6420636F756E74730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0xAC5 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ISZERO PUSH2 0xAE0 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792070617469656E742063616E206D6F64696679000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0x8FA4EA6050D1A8FD87E3A23DA4EB6C47E53F2C8096 0xB6 0xC2 0xC2 0x4C 0xE7 EXP 0xF6 CALLER DUP5 SELFDESTRUCT PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "61:5574:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;915:82;61:5574;;;;;937:32;61:5574;;;937:32;61:5574;;923:10;:46;915:82;:::i;:::-;3237:60;937:32;61:5574;3245:26;;3237:60;:::i;:::-;61:5574;;;;;;;;;;;;-1:-1:-1;;;;;61:5574:0;;;;3316:46;;61:5574;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;61:5574:0;;;;;;3316:46;3422;;;;61:5574;;;;;;;;-1:-1:-1;;61:5574:0;;;;;;;;3503:36;;;61:5574;;;;-1:-1:-1;;;61:5574:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;61:5574:0;;;;;;;;;;;;;;;;;;;;;;;;465:55;;61:5574;;465:55;;;;61:5574;465:55;;;61:5574;465:55;;;;;61:5574;465:55;;61:5574;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;61:5574:0;;;;;;4083:60;61:5574;;4091:26;;4083:60;:::i;:::-;61:5574;;;;;;;;;;;;;;;4268:12;;61:5574;;4254:10;:26;:82;;;;61:5574;4232:146;;;:::i;:::-;4424:16;4407:15;;;61:5574;4424:16;;61:5574;;;;;;;;;;;4254:82;-1:-1:-1;4254:10:0;-1:-1:-1;61:5574:0;;;4298:26;;;61:5574;;;;;;;;4254:82;;61:5574;;;;;;;:::i;:::-;;;;;;;915:82;61:5574;;;;;937:32;61:5574;;;937:32;61:5574;;923:10;:46;915:82;:::i;:::-;3714:60;937:32;61:5574;3722:26;;3714:60;:::i;:::-;61:5574;;3841:22;61:5574;3841:22;;;;;61:5574;;;;;;;;;;;;;;;;3841:22;;5530:29;;3841:22;;;;;;:::i;:::-;61:5574;3831:33;;61:5574;;;;;;3785:43;61:5574;;;3785:43;61:5574;;;;;;;;;;-1:-1:-1;;61:5574:0;;;;;527:28;61:5574;;;;;;;;;;;;;-1:-1:-1;;61:5574:0;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;915:82;61:5574;;;;;;;;;937:32;61:5574;;923:10;:46;915:82;:::i;:::-;2054:60;61:5574;;2062:26;;2054:60;:::i;:::-;2125:78;61:5574;;;;2133:41;2125:78;:::i;:::-;61:5574;;;;;;;;;2292:15;;;;;61:5574;2349:15;2330:16;;;61:5574;;;2446:18;;2385:125;2426:3;61:5574;;2402:22;;;;;2483:15;;61:5574;2483:15;;;:::i;:::-;61:5574;;2465:14;;;;;:::i;:::-;;61:5574;:::i;:::-;;;2390:10;;2402:22;;2535:36;61:5574;2402:22;61:5574;;;;;2535:36;61:5574;;;;;;;;:::i;:::-;;;;;;;915:82;61:5574;;;;;937:32;61:5574;;;937:32;61:5574;;923:10;:46;915:82;:::i;:::-;2749:60;937:32;61:5574;2757:26;;2749:60;:::i;:::-;61:5574;;;;;;;;;;;;-1:-1:-1;;;;;61:5574:0;;;;2829:46;;61:5574;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;61:5574:0;;;;;;2829:46;2939;;;;61:5574;;;;;;;;-1:-1:-1;;61:5574:0;;;;;;;;;;3019:36;;;61:5574;;;;-1:-1:-1;;;61:5574:0;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;61:5574:0;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;1213:78;61:5574;;;;1221:41;1213:78;:::i;:::-;61:5574;;;;;;;;;;;;;;;;;1462:12;;1477:10;61:5574;;;;;;;;;1498:15;;;;61:5574;1555:15;1536:16;;;61:5574;;;1652:18;;1591:125;1632:3;61:5574;;1608:22;;;;;1689:15;;61:5574;1689:15;;;:::i;:::-;61:5574;;1671:14;;;;;:::i;61:5574::-;;;1596:10;;1608:22;;;61:5574;;;;;;;;1767:45;61:5574;;;;;;;;;1477:10;;61:5574;;;;;;1767:45;61:5574;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4633:60;4654:13;61:5574;4641:26;;4633:60;:::i;:::-;61:5574;;;;;;;;;;;4814:22;61:5574;4814:22;;;;;61:5574;;;;;;;;;;;;;;;;4814:22;;5530:29;;4814:22;;;;;;:::i;:::-;61:5574;4804:33;;4841:23;;;61:5574;4804:60;61:5574;;4941:15;61:5574;4941:15;;61:5574;;;;;;;;;;-1:-1:-1;;;61:5574:0;;;;;;;;;;;;-1:-1:-1;;;61:5574:0;;;;;;;;;;;;;-1:-1:-1;;61:5574:0;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;5181:60;61:5574;;5189:26;;5181:60;:::i;:::-;61:5574;;;;;;;;;;;;;;;;5366:12;;61:5574;;5352:10;:26;:82;;;;61:5574;5330:146;;;:::i;:::-;61:5574;;5530:29;;;;;;;61:5574;;;;;;;;;;;;;;;;5530:29;;;;;;;;;;:::i;:::-;61:5574;5520:40;;5578:18;;61:5574;;:::i;:::-;;5578:46;61:5574;;;;;;5352:82;-1:-1:-1;5352:10:0;-1:-1:-1;61:5574:0;;;5396:26;;;61:5574;;;;;;;;5352:82;;61:5574;;;5530:29;;61:5574;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;61:5574:0;;;;;-1:-1:-1;61:5574:0;;;;;;;;;;;;;;;;;;;;;;5530:29;61:5574;;-1:-1:-1;;61:5574:0;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;61:5574:0;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;61:5574:0;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;61:5574:0;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;61:5574:0;;;;;;;;;;;;-1:-1:-1;;;61:5574:0;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;61:5574:0;;;;;;;;;;;;-1:-1:-1;;;61:5574:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;61:5574:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;61:5574:0;;;;;;;;;;;;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "581400",
								"executionCost": "620",
								"totalCost": "582020"
							},
							"external": {
								"addPatientRecord(bytes32,bytes32[],string[])": "infinite",
								"emergencyAccess(uint256,string)": "infinite",
								"getRecordReference(uint256)": "11139",
								"grantAccess(uint256,address)": "32742",
								"nextPatientId()": "2358",
								"patientRecords(uint256)": "13141",
								"revokeAccess(uint256,address)": "32868",
								"setEmergencyPin(uint256,string)": "infinite",
								"updatePatientRecord(uint256,bytes32,bytes32[],string[])": "infinite",
								"verifyRecordField(uint256,string,string)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 61,
									"end": 5635,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 61,
									"end": 5635,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 61,
									"end": 5635,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 61,
									"end": 5635,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 61,
									"end": 5635,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 61,
									"end": 5635,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 61,
									"end": 5635,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 61,
									"end": 5635,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 5635,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 61,
									"end": 5635,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 61,
									"end": 5635,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 5635,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 61,
									"end": 5635,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 61,
									"end": 5635,
									"name": "RETURN",
									"source": 0
								},
								{
									"begin": 61,
									"end": 5635,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 61,
									"end": 5635,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 61,
									"end": 5635,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 5635,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 61,
									"end": 5635,
									"name": "REVERT",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220748fa4ea6050d1a8fd87e3a23da4eb6c47e53f2c8096b6c2c24ce70af63384ff64736f6c634300081a0033",
									".code": [
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "1B424E7A"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "3C2BC6A1"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "63893E46"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "65DD152C"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "65E87A19"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "B1131795"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "B38DEFF0"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "B39E07E4"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "D3D188A1"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "D9A5EC1B"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 61,
											"end": 5635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 915,
											"end": 997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 937,
											"end": 969,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 937,
											"end": 969,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 923,
											"end": 933,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 923,
											"end": 969,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 915,
											"end": 997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 915,
											"end": 997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 915,
											"end": 997,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 915,
											"end": 997,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3237,
											"end": 3297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 937,
											"end": 969,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3245,
											"end": 3271,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3245,
											"end": 3271,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3237,
											"end": 3297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3237,
											"end": 3297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3237,
											"end": 3297,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3237,
											"end": 3297,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3316,
											"end": 3362,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3316,
											"end": 3362,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3316,
											"end": 3362,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3422,
											"end": 3468,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 3422,
											"end": 3468,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3422,
											"end": 3468,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 3422,
											"end": 3468,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3503,
											"end": 3539,
											"name": "PUSH",
											"source": 0,
											"value": "125883B94692BAEBECAD9F111ED97FFA626523BBBADC6B0EF85EE1B56B9E52D5"
										},
										{
											"begin": 3503,
											"end": 3539,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3503,
											"end": 3539,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "50726F7669646572206E6F7420617574686F72697A6564000000000000000000"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 465,
											"end": 520,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 465,
											"end": 520,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 465,
											"end": 520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 465,
											"end": 520,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 465,
											"end": 520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 465,
											"end": 520,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 465,
											"end": 520,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 465,
											"end": 520,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 465,
											"end": 520,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 465,
											"end": 520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 465,
											"end": 520,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 465,
											"end": 520,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 465,
											"end": 520,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 465,
											"end": 520,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 465,
											"end": 520,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 465,
											"end": 520,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 4083,
											"end": 4143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4117,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4117,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4083,
											"end": 4143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4083,
											"end": 4143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4083,
											"end": 4143,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 4083,
											"end": 4143,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4268,
											"end": 4280,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4268,
											"end": 4280,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4254,
											"end": 4264,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4254,
											"end": 4280,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4254,
											"end": 4336,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4254,
											"end": 4336,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4254,
											"end": 4336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 4254,
											"end": 4336,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4232,
											"end": 4378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 4232,
											"end": 4378,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4232,
											"end": 4378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 4232,
											"end": 4378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4232,
											"end": 4378,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 4232,
											"end": 4378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4424,
											"end": 4440,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4407,
											"end": 4422,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4407,
											"end": 4422,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4407,
											"end": 4422,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4424,
											"end": 4440,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4424,
											"end": 4440,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4254,
											"end": 4336,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 4254,
											"end": 4336,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4254,
											"end": 4264,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4298,
											"end": 4324,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 4298,
											"end": 4324,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4298,
											"end": 4324,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4254,
											"end": 4336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 4254,
											"end": 4336,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 61,
											"end": 5635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 915,
											"end": 997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 937,
											"end": 969,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 937,
											"end": 969,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 923,
											"end": 933,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 923,
											"end": 969,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 915,
											"end": 997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 915,
											"end": 997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 915,
											"end": 997,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 915,
											"end": 997,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3714,
											"end": 3774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 937,
											"end": 969,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3722,
											"end": 3748,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3722,
											"end": 3748,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3714,
											"end": 3774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3714,
											"end": 3774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3714,
											"end": 3774,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 3714,
											"end": 3774,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3841,
											"end": 3863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3841,
											"end": 3863,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3841,
											"end": 3863,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3841,
											"end": 3863,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3841,
											"end": 3863,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3841,
											"end": 3863,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MCOPY",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3841,
											"end": 3863,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3841,
											"end": 3863,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5530,
											"end": 5559,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5530,
											"end": 5559,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3841,
											"end": 3863,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3841,
											"end": 3863,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3841,
											"end": 3863,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3841,
											"end": 3863,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3841,
											"end": 3863,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3841,
											"end": 3863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3841,
											"end": 3863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3841,
											"end": 3863,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3841,
											"end": 3863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3831,
											"end": 3864,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3831,
											"end": 3864,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3785,
											"end": 3828,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3785,
											"end": 3828,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 527,
											"end": 555,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 61,
											"end": 5635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 61,
											"end": 5635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 915,
											"end": 997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 937,
											"end": 969,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 923,
											"end": 933,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 923,
											"end": 969,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 915,
											"end": 997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 915,
											"end": 997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 915,
											"end": 997,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 915,
											"end": 997,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2054,
											"end": 2114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2088,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2088,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2054,
											"end": 2114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2054,
											"end": 2114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2054,
											"end": 2114,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2054,
											"end": 2114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2133,
											"end": 2174,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2125,
											"end": 2203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2203,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2125,
											"end": 2203,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2307,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2307,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2307,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2292,
											"end": 2307,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2307,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2364,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 2330,
											"end": 2346,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2330,
											"end": 2346,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2330,
											"end": 2346,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2446,
											"end": 2464,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2464,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2510,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2429,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2426,
											"end": 2429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2424,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2424,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2424,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2402,
											"end": 2424,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2483,
											"end": 2498,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2483,
											"end": 2498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2483,
											"end": 2498,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2483,
											"end": 2498,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2483,
											"end": 2498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2483,
											"end": 2498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2483,
											"end": 2498,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2483,
											"end": 2498,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2465,
											"end": 2479,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 2465,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2465,
											"end": 2479,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2465,
											"end": 2479,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 2465,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2465,
											"end": 2479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2465,
											"end": 2479,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2465,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2465,
											"end": 2479,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 61,
											"end": 5635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2390,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2390,
											"end": 2400,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2424,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2402,
											"end": 2424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2424,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2535,
											"end": 2571,
											"name": "PUSH",
											"source": 0,
											"value": "FEF1E979D0B74E703CE41335E4ADC7465BE6B6511CE6870D8D76B85A2CD987C"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2402,
											"end": 2424,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2535,
											"end": 2571,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 61,
											"end": 5635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 915,
											"end": 997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 937,
											"end": 969,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 937,
											"end": 969,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 923,
											"end": 933,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 923,
											"end": 969,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 915,
											"end": 997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 915,
											"end": 997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 915,
											"end": 997,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 915,
											"end": 997,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 937,
											"end": 969,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2783,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2783,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2749,
											"end": 2809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2809,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2749,
											"end": 2809,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2829,
											"end": 2875,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2829,
											"end": 2875,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2829,
											"end": 2875,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2939,
											"end": 2985,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 2985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 2985,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 2985,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3055,
											"name": "PUSH",
											"source": 0,
											"value": "3C3A9147A1FC73DD51A32F4D10C43D457E8CB826EB6F35CAC6349EB965BA82B4"
										},
										{
											"begin": 3019,
											"end": 3055,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3055,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "50726F766964657220616C726561647920617574686F72697A65640000000000"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 61,
											"end": 5635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 61,
											"end": 5635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1291,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1262,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1291,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1213,
											"end": 1291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1291,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1213,
											"end": 1291,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1462,
											"end": 1474,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1474,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1477,
											"end": 1487,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1498,
											"end": 1513,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1498,
											"end": 1513,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1498,
											"end": 1513,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1498,
											"end": 1513,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1555,
											"end": 1570,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 1536,
											"end": 1552,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1536,
											"end": 1552,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1536,
											"end": 1552,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1652,
											"end": 1670,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 1652,
											"end": 1670,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1591,
											"end": 1716,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 1632,
											"end": 1635,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1632,
											"end": 1635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1608,
											"end": 1630,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1608,
											"end": 1630,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1608,
											"end": 1630,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1608,
											"end": 1630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1608,
											"end": 1630,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1689,
											"end": 1704,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1689,
											"end": 1704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1689,
											"end": 1704,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1689,
											"end": 1704,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1689,
											"end": 1704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1689,
											"end": 1704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1689,
											"end": 1704,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1689,
											"end": 1704,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1671,
											"end": 1685,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 1671,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1671,
											"end": 1685,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1671,
											"end": 1685,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 1671,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1671,
											"end": 1685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1596,
											"end": 1606,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1596,
											"end": 1606,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1608,
											"end": 1630,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1608,
											"end": 1630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1608,
											"end": 1630,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1608,
											"end": 1630,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1767,
											"end": 1812,
											"name": "PUSH",
											"source": 0,
											"value": "BBF4486CE56A8BB18798D25A2EF88158D76AAC87BFB156491906D126855F4428"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1477,
											"end": 1487,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1477,
											"end": 1487,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1767,
											"end": 1812,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B71"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 61,
											"end": 5635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4633,
											"end": 4693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 4654,
											"end": 4667,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4641,
											"end": 4667,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4641,
											"end": 4667,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4633,
											"end": 4693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4633,
											"end": 4693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4633,
											"end": 4693,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 4633,
											"end": 4693,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4814,
											"end": 4836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4814,
											"end": 4836,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4814,
											"end": 4836,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4814,
											"end": 4836,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4814,
											"end": 4836,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4814,
											"end": 4836,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MCOPY",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4814,
											"end": 4836,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4814,
											"end": 4836,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5530,
											"end": 5559,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5530,
											"end": 5559,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 4814,
											"end": 4836,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4814,
											"end": 4836,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4814,
											"end": 4836,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4814,
											"end": 4836,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4814,
											"end": 4836,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4814,
											"end": 4836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4814,
											"end": 4836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4814,
											"end": 4836,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 4814,
											"end": 4836,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4804,
											"end": 4837,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4804,
											"end": 4837,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4841,
											"end": 4864,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4841,
											"end": 4864,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4841,
											"end": 4864,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4804,
											"end": 4864,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4941,
											"end": 4956,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4941,
											"end": 4956,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4941,
											"end": 4956,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "24B73B30B634B21032B6B2B933B2B731BC902824A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "59"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 61,
											"end": 5635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 61,
											"end": 5635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5181,
											"end": 5241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5189,
											"end": 5215,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5189,
											"end": 5215,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5181,
											"end": 5241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5181,
											"end": 5241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5181,
											"end": 5241,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 5181,
											"end": 5241,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5366,
											"end": 5378,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5366,
											"end": 5378,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5352,
											"end": 5362,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5352,
											"end": 5378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5352,
											"end": 5434,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5352,
											"end": 5434,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5352,
											"end": 5434,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 5352,
											"end": 5434,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5330,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 5330,
											"end": 5476,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5330,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 5330,
											"end": 5476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5330,
											"end": 5476,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 5330,
											"end": 5476,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5530,
											"end": 5559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 5530,
											"end": 5559,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5530,
											"end": 5559,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5530,
											"end": 5559,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5530,
											"end": 5559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5530,
											"end": 5559,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5530,
											"end": 5559,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MCOPY",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5530,
											"end": 5559,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5530,
											"end": 5559,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5530,
											"end": 5559,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5530,
											"end": 5559,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 5530,
											"end": 5559,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5530,
											"end": 5559,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5530,
											"end": 5559,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5530,
											"end": 5559,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5530,
											"end": 5559,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5530,
											"end": 5559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5530,
											"end": 5559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5530,
											"end": 5559,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 5530,
											"end": 5559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5520,
											"end": 5560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5520,
											"end": 5560,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5578,
											"end": 5596,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 5578,
											"end": 5596,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 61,
											"end": 5635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5578,
											"end": 5624,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5352,
											"end": 5434,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 5352,
											"end": 5434,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5352,
											"end": 5362,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5396,
											"end": 5422,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5396,
											"end": 5422,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5396,
											"end": 5422,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5352,
											"end": 5434,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 5352,
											"end": 5434,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5530,
											"end": 5559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5530,
											"end": 5559,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B71"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 5530,
											"end": 5559,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 5635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 61,
											"end": 5635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 5635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 5635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 5635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 5635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 61,
											"end": 5635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "149958DBDC9908191BD95CC81B9BDD08195E1A5CDD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "139BDD08185D5D1A1BDC9A5E9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MCOPY",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "4D69736D6174636820696E206669656C6420636F756E74730000000000000000"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B71"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "4F6E6C792070617469656E742063616E206D6F64696679000000000000000000"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5635,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"health.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addPatientRecord(bytes32,bytes32[],string[])": "63893e46",
							"emergencyAccess(uint256,string)": "3c2bc6a1",
							"getRecordReference(uint256)": "b39e07e4",
							"grantAccess(uint256,address)": "65dd152c",
							"nextPatientId()": "b1131795",
							"patientRecords(uint256)": "d3d188a1",
							"revokeAccess(uint256,address)": "d9a5ec1b",
							"setEmergencyPin(uint256,string)": "b38deff0",
							"updatePatientRecord(uint256,bytes32,bytes32[],string[])": "65e87a19",
							"verifyRecordField(uint256,string,string)": "1b424e7a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"patientId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"}],\"name\":\"AccessGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"patientId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"}],\"name\":\"AccessRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"patientId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"ipfsHash\",\"type\":\"bytes32\"}],\"name\":\"RecordAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"patientId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"ipfsHash\",\"type\":\"bytes32\"}],\"name\":\"RecordUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_ipfsHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"_fieldHashes\",\"type\":\"bytes32[]\"},{\"internalType\":\"string[]\",\"name\":\"_fieldNames\",\"type\":\"string[]\"}],\"name\":\"addPatientRecord\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_patientId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_pin\",\"type\":\"string\"}],\"name\":\"emergencyAccess\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"ipfsHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_patientId\",\"type\":\"uint256\"}],\"name\":\"getRecordReference\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"ipfsHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_patientId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_provider\",\"type\":\"address\"}],\"name\":\"grantAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextPatientId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"patientRecords\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"patientId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"ipfsHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"accessLevel\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"emergencyPinHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_patientId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_provider\",\"type\":\"address\"}],\"name\":\"revokeAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_patientId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_pin\",\"type\":\"string\"}],\"name\":\"setEmergencyPin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_patientId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_ipfsHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"_fieldHashes\",\"type\":\"bytes32[]\"},{\"internalType\":\"string[]\",\"name\":\"_fieldNames\",\"type\":\"string[]\"}],\"name\":\"updatePatientRecord\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_patientId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_fieldName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_fieldValue\",\"type\":\"string\"}],\"name\":\"verifyRecordField\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"health.sol\":\"Health\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"health.sol\":{\"keccak256\":\"0x6c60a489af407b2b2372a311a4c485966962aeac931d7f1f5554abb8f389a890\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13034ea8a2d7bc350a93cd239905923c7bb38a1886b12c5f6e76e6d294a3904c\",\"dweb:/ipfs/Qmaf7vAtsgKfccMoigcn7ugsRPzrTrMLwkdQa8xNnwVbHT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 27,
								"contract": "health.sol:Health",
								"label": "patientRecords",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_struct(PatientRecord)22_storage)"
							},
							{
								"astId": 29,
								"contract": "health.sol:Health",
								"label": "nextPatientId",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_string_memory_ptr,t_bytes32)": {
								"encoding": "mapping",
								"key": "t_string_memory_ptr",
								"label": "mapping(string => bytes32)",
								"numberOfBytes": "32",
								"value": "t_bytes32"
							},
							"t_mapping(t_uint256,t_struct(PatientRecord)22_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Health.PatientRecord)",
								"numberOfBytes": "32",
								"value": "t_struct(PatientRecord)22_storage"
							},
							"t_string_memory_ptr": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(PatientRecord)22_storage": {
								"encoding": "inplace",
								"label": "struct Health.PatientRecord",
								"members": [
									{
										"astId": 3,
										"contract": "health.sol:Health",
										"label": "patientId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 5,
										"contract": "health.sol:Health",
										"label": "owner",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 7,
										"contract": "health.sol:Health",
										"label": "ipfsHash",
										"offset": 0,
										"slot": "2",
										"type": "t_bytes32"
									},
									{
										"astId": 11,
										"contract": "health.sol:Health",
										"label": "authorizedProviders",
										"offset": 0,
										"slot": "3",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 15,
										"contract": "health.sol:Health",
										"label": "fieldHashes",
										"offset": 0,
										"slot": "4",
										"type": "t_mapping(t_string_memory_ptr,t_bytes32)"
									},
									{
										"astId": 17,
										"contract": "health.sol:Health",
										"label": "accessLevel",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 19,
										"contract": "health.sol:Health",
										"label": "timestamp",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 21,
										"contract": "health.sol:Health",
										"label": "emergencyPinHash",
										"offset": 0,
										"slot": "7",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"health.sol": {
				"ast": {
					"absolutePath": "health.sol",
					"exportedSymbols": {
						"Health": [
							506
						]
					},
					"id": 507,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Health",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 506,
							"linearizedBaseContracts": [
								506
							],
							"name": "Health",
							"nameLocation": "70:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Health.PatientRecord",
									"id": 22,
									"members": [
										{
											"constant": false,
											"id": 3,
											"mutability": "mutable",
											"name": "patientId",
											"nameLocation": "124:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 22,
											"src": "116:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "116:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5,
											"mutability": "mutable",
											"name": "owner",
											"nameLocation": "152:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 22,
											"src": "144:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 4,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "144:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 7,
											"mutability": "mutable",
											"name": "ipfsHash",
											"nameLocation": "176:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 22,
											"src": "168:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 6,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "168:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 11,
											"mutability": "mutable",
											"name": "authorizedProviders",
											"nameLocation": "260:19:0",
											"nodeType": "VariableDeclaration",
											"scope": 22,
											"src": "235:44:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 10,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "243:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "235:24:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 9,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "254:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 15,
											"mutability": "mutable",
											"name": "fieldHashes",
											"nameLocation": "317:11:0",
											"nodeType": "VariableDeclaration",
											"scope": 22,
											"src": "290:38:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bytes32_$",
												"typeString": "mapping(string => bytes32)"
											},
											"typeName": {
												"id": 14,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 12,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "298:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"nodeType": "Mapping",
												"src": "290:26:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bytes32_$",
													"typeString": "mapping(string => bytes32)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 13,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 17,
											"mutability": "mutable",
											"name": "accessLevel",
											"nameLocation": "375:11:0",
											"nodeType": "VariableDeclaration",
											"scope": 22,
											"src": "367:19:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 16,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "367:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 19,
											"mutability": "mutable",
											"name": "timestamp",
											"nameLocation": "405:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 22,
											"src": "397:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 18,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "397:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 21,
											"mutability": "mutable",
											"name": "emergencyPinHash",
											"nameLocation": "433:16:0",
											"nodeType": "VariableDeclaration",
											"scope": 22,
											"src": "425:24:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 20,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "425:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PatientRecord",
									"nameLocation": "91:13:0",
									"nodeType": "StructDefinition",
									"scope": 506,
									"src": "84:373:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d3d188a1",
									"id": 27,
									"mutability": "mutable",
									"name": "patientRecords",
									"nameLocation": "506:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 506,
									"src": "465:55:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PatientRecord_$22_storage_$",
										"typeString": "mapping(uint256 => struct Health.PatientRecord)"
									},
									"typeName": {
										"id": 26,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 23,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "473:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "465:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PatientRecord_$22_storage_$",
											"typeString": "mapping(uint256 => struct Health.PatientRecord)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 25,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 24,
												"name": "PatientRecord",
												"nameLocations": [
													"484:13:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 22,
												"src": "484:13:0"
											},
											"referencedDeclaration": 22,
											"src": "484:13:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_PatientRecord_$22_storage_ptr",
												"typeString": "struct Health.PatientRecord"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b1131795",
									"id": 29,
									"mutability": "mutable",
									"name": "nextPatientId",
									"nameLocation": "542:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 506,
									"src": "527:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 28,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "527:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "bbf4486ce56a8bb18798d25a2ef88158d76aac87bfb156491906d126855f4428",
									"id": 37,
									"name": "RecordAdded",
									"nameLocation": "570:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"indexed": true,
												"mutability": "mutable",
												"name": "patientId",
												"nameLocation": "598:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "582:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 30,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "582:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 33,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "617:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "609:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "609:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 35,
												"indexed": false,
												"mutability": "mutable",
												"name": "ipfsHash",
												"nameLocation": "632:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "624:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 34,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "581:60:0"
									},
									"src": "564:78:0"
								},
								{
									"anonymous": false,
									"eventSelector": "0fef1e979d0b74e703ce41335e4adc7465be6b6511ce6870d8d76b85a2cd987c",
									"id": 43,
									"name": "RecordUpdated",
									"nameLocation": "654:13:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"indexed": true,
												"mutability": "mutable",
												"name": "patientId",
												"nameLocation": "684:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "668:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 41,
												"indexed": false,
												"mutability": "mutable",
												"name": "ipfsHash",
												"nameLocation": "703:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "695:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 40,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "695:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "667:45:0"
									},
									"src": "648:65:0"
								},
								{
									"anonymous": false,
									"eventSelector": "3c3a9147a1fc73dd51a32f4d10c43d457e8cb826eb6f35cac6349eb965ba82b4",
									"id": 49,
									"name": "AccessGranted",
									"nameLocation": "725:13:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"indexed": true,
												"mutability": "mutable",
												"name": "patientId",
												"nameLocation": "755:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "739:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 44,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "739:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 47,
												"indexed": false,
												"mutability": "mutable",
												"name": "provider",
												"nameLocation": "774:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "766:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "766:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "738:45:0"
									},
									"src": "719:65:0"
								},
								{
									"anonymous": false,
									"eventSelector": "125883b94692baebecad9f111ed97ffa626523bbbadc6b0ef85ee1b56b9e52d5",
									"id": 55,
									"name": "AccessRevoked",
									"nameLocation": "796:13:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"indexed": true,
												"mutability": "mutable",
												"name": "patientId",
												"nameLocation": "826:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 55,
												"src": "810:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 50,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "810:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"indexed": false,
												"mutability": "mutable",
												"name": "provider",
												"nameLocation": "845:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 55,
												"src": "837:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "837:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "809:45:0"
									},
									"src": "790:65:0"
								},
								{
									"body": {
										"id": 71,
										"nodeType": "Block",
										"src": "904:113:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 66,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 60,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "923:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 61,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "927:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "923:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 62,
																		"name": "patientRecords",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 27,
																		"src": "937:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PatientRecord_$22_storage_$",
																			"typeString": "mapping(uint256 => struct Health.PatientRecord storage ref)"
																		}
																	},
																	"id": 64,
																	"indexExpression": {
																		"id": 63,
																		"name": "_patientId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 57,
																		"src": "952:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "937:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PatientRecord_$22_storage",
																		"typeString": "struct Health.PatientRecord storage ref"
																	}
																},
																"id": 65,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "964:5:0",
																"memberName": "owner",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 5,
																"src": "937:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "923:46:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c792070617469656e742063616e206d6f64696679",
															"id": 67,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "971:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1afbd0296ccb66d243bcb8262addfbaa02222b77a87e72941d249c71d381b08c",
																"typeString": "literal_string \"Only patient can modify\""
															},
															"value": "Only patient can modify"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1afbd0296ccb66d243bcb8262addfbaa02222b77a87e72941d249c71d381b08c",
																"typeString": "literal_string \"Only patient can modify\""
															}
														],
														"id": 59,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "915:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 68,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "915:82:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 69,
												"nodeType": "ExpressionStatement",
												"src": "915:82:0"
											},
											{
												"id": 70,
												"nodeType": "PlaceholderStatement",
												"src": "1008:1:0"
											}
										]
									},
									"id": 72,
									"name": "onlyPatient",
									"nameLocation": "872:11:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "_patientId",
												"nameLocation": "892:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "884:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:20:0"
									},
									"src": "863:154:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 164,
										"nodeType": "Block",
										"src": "1202:618:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 88,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 84,
																	"name": "_fieldHashes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 77,
																	"src": "1221:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																		"typeString": "bytes32[] memory"
																	}
																},
																"id": 85,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1234:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "1221:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 86,
																	"name": "_fieldNames",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 80,
																	"src": "1244:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																		"typeString": "string memory[] memory"
																	}
																},
																"id": 87,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1256:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "1244:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1221:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d69736d6174636820696e206669656c6420636f756e7473",
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1264:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e57ad95da8eb27cea009bd53dfef5f8127bdf8965c3972aed1f0cabe8425e6e5",
																"typeString": "literal_string \"Mismatch in field counts\""
															},
															"value": "Mismatch in field counts"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e57ad95da8eb27cea009bd53dfef5f8127bdf8965c3972aed1f0cabe8425e6e5",
																"typeString": "literal_string \"Mismatch in field counts\""
															}
														],
														"id": 83,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1213:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1213:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "1213:78:0"
											},
											{
												"assignments": [
													93
												],
												"declarations": [
													{
														"constant": false,
														"id": 93,
														"mutability": "mutable",
														"name": "patientId",
														"nameLocation": "1310:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 164,
														"src": "1302:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 92,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1302:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 95,
												"initialValue": {
													"id": 94,
													"name": "nextPatientId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 29,
													"src": "1322:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1302:33:0"
											},
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "record",
														"nameLocation": "1378:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 164,
														"src": "1356:28:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PatientRecord_$22_storage_ptr",
															"typeString": "struct Health.PatientRecord"
														},
														"typeName": {
															"id": 97,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 96,
																"name": "PatientRecord",
																"nameLocations": [
																	"1356:13:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 22,
																"src": "1356:13:0"
															},
															"referencedDeclaration": 22,
															"src": "1356:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PatientRecord_$22_storage_ptr",
																"typeString": "struct Health.PatientRecord"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 102,
												"initialValue": {
													"baseExpression": {
														"id": 99,
														"name": "patientRecords",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1387:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PatientRecord_$22_storage_$",
															"typeString": "mapping(uint256 => struct Health.PatientRecord storage ref)"
														}
													},
													"id": 101,
													"indexExpression": {
														"id": 100,
														"name": "patientId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 93,
														"src": "1402:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1387:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PatientRecord_$22_storage",
														"typeString": "struct Health.PatientRecord storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1356:56:0"
											},
											{
												"expression": {
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 103,
															"name": "record",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "1423:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PatientRecord_$22_storage_ptr",
																"typeString": "struct Health.PatientRecord storage pointer"
															}
														},
														"id": 105,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1430:9:0",
														"memberName": "patientId",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "1423:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 106,
														"name": "patientId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 93,
														"src": "1442:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1423:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 108,
												"nodeType": "ExpressionStatement",
												"src": "1423:28:0"
											},
											{
												"expression": {
													"id": 114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 109,
															"name": "record",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "1462:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PatientRecord_$22_storage_ptr",
																"typeString": "struct Health.PatientRecord storage pointer"
															}
														},
														"id": 111,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1469:5:0",
														"memberName": "owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "1462:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 112,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1477:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 113,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1481:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1477:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1462:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 115,
												"nodeType": "ExpressionStatement",
												"src": "1462:25:0"
											},
											{
												"expression": {
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 116,
															"name": "record",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "1498:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PatientRecord_$22_storage_ptr",
																"typeString": "struct Health.PatientRecord storage pointer"
															}
														},
														"id": 118,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1505:8:0",
														"memberName": "ipfsHash",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 7,
														"src": "1498:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 119,
														"name": "_ipfsHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 74,
														"src": "1516:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "1498:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 121,
												"nodeType": "ExpressionStatement",
												"src": "1498:27:0"
											},
											{
												"expression": {
													"id": 127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 122,
															"name": "record",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "1536:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PatientRecord_$22_storage_ptr",
																"typeString": "struct Health.PatientRecord storage pointer"
															}
														},
														"id": 124,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1543:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 19,
														"src": "1536:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 125,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1555:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 126,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1561:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1555:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1536:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 128,
												"nodeType": "ExpressionStatement",
												"src": "1536:34:0"
											},
											{
												"body": {
													"id": 152,
													"nodeType": "Block",
													"src": "1637:79:0",
													"statements": [
														{
															"expression": {
																"id": 150,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"id": 140,
																			"name": "record",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 98,
																			"src": "1652:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PatientRecord_$22_storage_ptr",
																				"typeString": "struct Health.PatientRecord storage pointer"
																			}
																		},
																		"id": 145,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1659:11:0",
																		"memberName": "fieldHashes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 15,
																		"src": "1652:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bytes32_$",
																			"typeString": "mapping(string memory => bytes32)"
																		}
																	},
																	"id": 146,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 142,
																			"name": "_fieldNames",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 80,
																			"src": "1671:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																				"typeString": "string memory[] memory"
																			}
																		},
																		"id": 144,
																		"indexExpression": {
																			"id": 143,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 130,
																			"src": "1683:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1671:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1652:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 147,
																		"name": "_fieldHashes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 77,
																		"src": "1689:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																			"typeString": "bytes32[] memory"
																		}
																	},
																	"id": 149,
																	"indexExpression": {
																		"id": 148,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 130,
																		"src": "1702:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1689:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "1652:52:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 151,
															"nodeType": "ExpressionStatement",
															"src": "1652:52:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 133,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "1608:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 134,
															"name": "_fieldNames",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "1612:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																"typeString": "string memory[] memory"
															}
														},
														"id": 135,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1624:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1612:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1608:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 153,
												"initializationExpression": {
													"assignments": [
														130
													],
													"declarations": [
														{
															"constant": false,
															"id": 130,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1601:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 153,
															"src": "1596:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 129,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "1596:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 132,
													"initialValue": {
														"hexValue": "30",
														"id": 131,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1605:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1596:10:0"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 138,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1632:3:0",
														"subExpression": {
															"id": 137,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 130,
															"src": "1632:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 139,
													"nodeType": "ExpressionStatement",
													"src": "1632:3:0"
												},
												"nodeType": "ForStatement",
												"src": "1591:125:0"
											},
											{
												"expression": {
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "1736:15:0",
													"subExpression": {
														"id": 154,
														"name": "nextPatientId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "1736:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 156,
												"nodeType": "ExpressionStatement",
												"src": "1736:15:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 158,
															"name": "patientId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 93,
															"src": "1779:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 159,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1790:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1794:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1790:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 161,
															"name": "_ipfsHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 74,
															"src": "1802:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 157,
														"name": "RecordAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 37,
														"src": "1767:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_bytes32_$returns$__$",
															"typeString": "function (uint256,address,bytes32)"
														}
													},
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1767:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 163,
												"nodeType": "EmitStatement",
												"src": "1762:50:0"
											}
										]
									},
									"functionSelector": "63893e46",
									"id": 165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addPatientRecord",
									"nameLocation": "1083:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "_ipfsHash",
												"nameLocation": "1108:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "1100:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 73,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1100:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "_fieldHashes",
												"nameLocation": "1136:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "1119:29:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 75,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "1119:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 76,
													"nodeType": "ArrayTypeName",
													"src": "1119:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "_fieldNames",
												"nameLocation": "1166:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "1150:27:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
													"typeString": "string[]"
												},
												"typeName": {
													"baseType": {
														"id": 78,
														"name": "string",
														"nodeType": "ElementaryTypeName",
														"src": "1150:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage_ptr",
															"typeString": "string"
														}
													},
													"id": 79,
													"nodeType": "ArrayTypeName",
													"src": "1150:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
														"typeString": "string[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1099:79:0"
									},
									"returnParameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1202:0:0"
									},
									"scope": 506,
									"src": "1074:746:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 247,
										"nodeType": "Block",
										"src": "2043:536:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 182,
																"name": "_patientId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 167,
																"src": "2062:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 183,
																"name": "nextPatientId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "2075:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2062:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265636f726420646f6573206e6f74206578697374",
															"id": 185,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2090:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_752d09c2eab74c4a5f1bd63acead0a9ceb7b9a35d294a71b52bc967447850096",
																"typeString": "literal_string \"Record does not exist\""
															},
															"value": "Record does not exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_752d09c2eab74c4a5f1bd63acead0a9ceb7b9a35d294a71b52bc967447850096",
																"typeString": "literal_string \"Record does not exist\""
															}
														],
														"id": 181,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2054:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2054:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "2054:60:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 193,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 189,
																	"name": "_fieldHashes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 172,
																	"src": "2133:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																		"typeString": "bytes32[] memory"
																	}
																},
																"id": 190,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2146:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2133:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 191,
																	"name": "_fieldNames",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 175,
																	"src": "2156:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																		"typeString": "string memory[] memory"
																	}
																},
																"id": 192,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2168:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2156:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2133:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d69736d6174636820696e206669656c6420636f756e7473",
															"id": 194,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2176:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e57ad95da8eb27cea009bd53dfef5f8127bdf8965c3972aed1f0cabe8425e6e5",
																"typeString": "literal_string \"Mismatch in field counts\""
															},
															"value": "Mismatch in field counts"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e57ad95da8eb27cea009bd53dfef5f8127bdf8965c3972aed1f0cabe8425e6e5",
																"typeString": "literal_string \"Mismatch in field counts\""
															}
														],
														"id": 188,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2125:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2125:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 196,
												"nodeType": "ExpressionStatement",
												"src": "2125:78:0"
											},
											{
												"assignments": [
													199
												],
												"declarations": [
													{
														"constant": false,
														"id": 199,
														"mutability": "mutable",
														"name": "record",
														"nameLocation": "2246:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 247,
														"src": "2224:28:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PatientRecord_$22_storage_ptr",
															"typeString": "struct Health.PatientRecord"
														},
														"typeName": {
															"id": 198,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 197,
																"name": "PatientRecord",
																"nameLocations": [
																	"2224:13:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 22,
																"src": "2224:13:0"
															},
															"referencedDeclaration": 22,
															"src": "2224:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PatientRecord_$22_storage_ptr",
																"typeString": "struct Health.PatientRecord"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 203,
												"initialValue": {
													"baseExpression": {
														"id": 200,
														"name": "patientRecords",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "2255:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PatientRecord_$22_storage_$",
															"typeString": "mapping(uint256 => struct Health.PatientRecord storage ref)"
														}
													},
													"id": 202,
													"indexExpression": {
														"id": 201,
														"name": "_patientId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "2270:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2255:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PatientRecord_$22_storage",
														"typeString": "struct Health.PatientRecord storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2224:57:0"
											},
											{
												"expression": {
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 204,
															"name": "record",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "2292:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PatientRecord_$22_storage_ptr",
																"typeString": "struct Health.PatientRecord storage pointer"
															}
														},
														"id": 206,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2299:8:0",
														"memberName": "ipfsHash",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 7,
														"src": "2292:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 207,
														"name": "_ipfsHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "2310:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2292:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "2292:27:0"
											},
											{
												"expression": {
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 210,
															"name": "record",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "2330:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PatientRecord_$22_storage_ptr",
																"typeString": "struct Health.PatientRecord storage pointer"
															}
														},
														"id": 212,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2337:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 19,
														"src": "2330:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 213,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2349:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 214,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2355:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2349:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2330:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 216,
												"nodeType": "ExpressionStatement",
												"src": "2330:34:0"
											},
											{
												"body": {
													"id": 240,
													"nodeType": "Block",
													"src": "2431:79:0",
													"statements": [
														{
															"expression": {
																"id": 238,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"id": 228,
																			"name": "record",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 199,
																			"src": "2446:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PatientRecord_$22_storage_ptr",
																				"typeString": "struct Health.PatientRecord storage pointer"
																			}
																		},
																		"id": 233,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2453:11:0",
																		"memberName": "fieldHashes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 15,
																		"src": "2446:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bytes32_$",
																			"typeString": "mapping(string memory => bytes32)"
																		}
																	},
																	"id": 234,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 230,
																			"name": "_fieldNames",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 175,
																			"src": "2465:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																				"typeString": "string memory[] memory"
																			}
																		},
																		"id": 232,
																		"indexExpression": {
																			"id": 231,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 218,
																			"src": "2477:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2465:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2446:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 235,
																		"name": "_fieldHashes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 172,
																		"src": "2483:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																			"typeString": "bytes32[] memory"
																		}
																	},
																	"id": 237,
																	"indexExpression": {
																		"id": 236,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 218,
																		"src": "2496:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2483:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "2446:52:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 239,
															"nodeType": "ExpressionStatement",
															"src": "2446:52:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 221,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 218,
														"src": "2402:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 222,
															"name": "_fieldNames",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "2406:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																"typeString": "string memory[] memory"
															}
														},
														"id": 223,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2418:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2406:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2402:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 241,
												"initializationExpression": {
													"assignments": [
														218
													],
													"declarations": [
														{
															"constant": false,
															"id": 218,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2395:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 241,
															"src": "2390:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 217,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "2390:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 220,
													"initialValue": {
														"hexValue": "30",
														"id": 219,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2399:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2390:10:0"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 226,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2426:3:0",
														"subExpression": {
															"id": 225,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "2426:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 227,
													"nodeType": "ExpressionStatement",
													"src": "2426:3:0"
												},
												"nodeType": "ForStatement",
												"src": "2385:125:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 243,
															"name": "_patientId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "2549:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 244,
															"name": "_ipfsHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "2561:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 242,
														"name": "RecordUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 43,
														"src": "2535:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_bytes32_$returns$__$",
															"typeString": "function (uint256,bytes32)"
														}
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2535:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 246,
												"nodeType": "EmitStatement",
												"src": "2530:41:0"
											}
										]
									},
									"functionSelector": "65e87a19",
									"id": 248,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 178,
													"name": "_patientId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "2025:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 179,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 177,
												"name": "onlyPatient",
												"nameLocations": [
													"2013:11:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 72,
												"src": "2013:11:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2013:23:0"
										}
									],
									"name": "updatePatientRecord",
									"nameLocation": "1867:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "_patientId",
												"nameLocation": "1895:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "1887:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1887:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "_ipfsHash",
												"nameLocation": "1915:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "1907:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 168,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1907:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "_fieldHashes",
												"nameLocation": "1943:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "1926:29:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 170,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "1926:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 171,
													"nodeType": "ArrayTypeName",
													"src": "1926:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "_fieldNames",
												"nameLocation": "1973:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "1957:27:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
													"typeString": "string[]"
												},
												"typeName": {
													"baseType": {
														"id": 173,
														"name": "string",
														"nodeType": "ElementaryTypeName",
														"src": "1957:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage_ptr",
															"typeString": "string"
														}
													},
													"id": 174,
													"nodeType": "ArrayTypeName",
													"src": "1957:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
														"typeString": "string[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1886:99:0"
									},
									"returnParameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2043:0:0"
									},
									"scope": 506,
									"src": "1858:721:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 290,
										"nodeType": "Block",
										"src": "2738:325:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 259,
																"name": "_patientId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 250,
																"src": "2757:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 260,
																"name": "nextPatientId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "2770:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2757:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265636f726420646f6573206e6f74206578697374",
															"id": 262,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2785:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_752d09c2eab74c4a5f1bd63acead0a9ceb7b9a35d294a71b52bc967447850096",
																"typeString": "literal_string \"Record does not exist\""
															},
															"value": "Record does not exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_752d09c2eab74c4a5f1bd63acead0a9ceb7b9a35d294a71b52bc967447850096",
																"typeString": "literal_string \"Record does not exist\""
															}
														],
														"id": 258,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2749:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2749:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 264,
												"nodeType": "ExpressionStatement",
												"src": "2749:60:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2828:58:0",
															"subExpression": {
																"baseExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 266,
																			"name": "patientRecords",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 27,
																			"src": "2829:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PatientRecord_$22_storage_$",
																				"typeString": "mapping(uint256 => struct Health.PatientRecord storage ref)"
																			}
																		},
																		"id": 268,
																		"indexExpression": {
																			"id": 267,
																			"name": "_patientId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 250,
																			"src": "2844:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2829:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PatientRecord_$22_storage",
																			"typeString": "struct Health.PatientRecord storage ref"
																		}
																	},
																	"id": 269,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2856:19:0",
																	"memberName": "authorizedProviders",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 11,
																	"src": "2829:46:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 271,
																"indexExpression": {
																	"id": 270,
																	"name": "_provider",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 252,
																	"src": "2876:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2829:57:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726f766964657220616c726561647920617574686f72697a6564",
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2888:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_18062ff471b9a33099a67084ab8e7f2145a1b46b4f565c3de108915bfd89f67a",
																"typeString": "literal_string \"Provider already authorized\""
															},
															"value": "Provider already authorized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_18062ff471b9a33099a67084ab8e7f2145a1b46b4f565c3de108915bfd89f67a",
																"typeString": "literal_string \"Provider already authorized\""
															}
														],
														"id": 265,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2820:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2820:98:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 275,
												"nodeType": "ExpressionStatement",
												"src": "2820:98:0"
											},
											{
												"expression": {
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"baseExpression": {
																	"id": 276,
																	"name": "patientRecords",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 27,
																	"src": "2939:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PatientRecord_$22_storage_$",
																		"typeString": "mapping(uint256 => struct Health.PatientRecord storage ref)"
																	}
																},
																"id": 278,
																"indexExpression": {
																	"id": 277,
																	"name": "_patientId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 250,
																	"src": "2954:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2939:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PatientRecord_$22_storage",
																	"typeString": "struct Health.PatientRecord storage ref"
																}
															},
															"id": 279,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2966:19:0",
															"memberName": "authorizedProviders",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 11,
															"src": "2939:46:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 281,
														"indexExpression": {
															"id": 280,
															"name": "_provider",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 252,
															"src": "2986:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2939:57:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 282,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2999:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2939:64:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 284,
												"nodeType": "ExpressionStatement",
												"src": "2939:64:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 286,
															"name": "_patientId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 250,
															"src": "3033:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 287,
															"name": "_provider",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 252,
															"src": "3045:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 285,
														"name": "AccessGranted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 49,
														"src": "3019:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (uint256,address)"
														}
													},
													"id": 288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3019:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 289,
												"nodeType": "EmitStatement",
												"src": "3014:41:0"
											}
										]
									},
									"functionSelector": "65dd152c",
									"id": 291,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 255,
													"name": "_patientId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 250,
													"src": "2720:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 256,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 254,
												"name": "onlyPatient",
												"nameLocations": [
													"2708:11:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 72,
												"src": "2708:11:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2708:23:0"
										}
									],
									"name": "grantAccess",
									"nameLocation": "2630:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "_patientId",
												"nameLocation": "2650:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "2642:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2642:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "_provider",
												"nameLocation": "2670:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "2662:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2662:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2641:39:0"
									},
									"returnParameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2738:0:0"
									},
									"scope": 506,
									"src": "2621:442:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 332,
										"nodeType": "Block",
										"src": "3226:321:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 302,
																"name": "_patientId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 293,
																"src": "3245:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 303,
																"name": "nextPatientId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "3258:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3245:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265636f726420646f6573206e6f74206578697374",
															"id": 305,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3273:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_752d09c2eab74c4a5f1bd63acead0a9ceb7b9a35d294a71b52bc967447850096",
																"typeString": "literal_string \"Record does not exist\""
															},
															"value": "Record does not exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_752d09c2eab74c4a5f1bd63acead0a9ceb7b9a35d294a71b52bc967447850096",
																"typeString": "literal_string \"Record does not exist\""
															}
														],
														"id": 301,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3237:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3237:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 307,
												"nodeType": "ExpressionStatement",
												"src": "3237:60:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 309,
																		"name": "patientRecords",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 27,
																		"src": "3316:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PatientRecord_$22_storage_$",
																			"typeString": "mapping(uint256 => struct Health.PatientRecord storage ref)"
																		}
																	},
																	"id": 311,
																	"indexExpression": {
																		"id": 310,
																		"name": "_patientId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 293,
																		"src": "3331:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3316:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PatientRecord_$22_storage",
																		"typeString": "struct Health.PatientRecord storage ref"
																	}
																},
																"id": 312,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3343:19:0",
																"memberName": "authorizedProviders",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 11,
																"src": "3316:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 314,
															"indexExpression": {
																"id": 313,
																"name": "_provider",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 295,
																"src": "3363:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3316:57:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726f7669646572206e6f7420617574686f72697a6564",
															"id": 315,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3375:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6ab62a68bfff85b4512ab9c27ef663ae4fca6c23e2fe8e3c1cd2ce9afe13db2c",
																"typeString": "literal_string \"Provider not authorized\""
															},
															"value": "Provider not authorized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6ab62a68bfff85b4512ab9c27ef663ae4fca6c23e2fe8e3c1cd2ce9afe13db2c",
																"typeString": "literal_string \"Provider not authorized\""
															}
														],
														"id": 308,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3308:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3308:93:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 317,
												"nodeType": "ExpressionStatement",
												"src": "3308:93:0"
											},
											{
												"expression": {
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"baseExpression": {
																	"id": 318,
																	"name": "patientRecords",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 27,
																	"src": "3422:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PatientRecord_$22_storage_$",
																		"typeString": "mapping(uint256 => struct Health.PatientRecord storage ref)"
																	}
																},
																"id": 320,
																"indexExpression": {
																	"id": 319,
																	"name": "_patientId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 293,
																	"src": "3437:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3422:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PatientRecord_$22_storage",
																	"typeString": "struct Health.PatientRecord storage ref"
																}
															},
															"id": 321,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3449:19:0",
															"memberName": "authorizedProviders",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 11,
															"src": "3422:46:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 323,
														"indexExpression": {
															"id": 322,
															"name": "_provider",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 295,
															"src": "3469:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3422:57:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 324,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3482:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "3422:65:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 326,
												"nodeType": "ExpressionStatement",
												"src": "3422:65:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 328,
															"name": "_patientId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 293,
															"src": "3517:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 329,
															"name": "_provider",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 295,
															"src": "3529:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 327,
														"name": "AccessRevoked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 55,
														"src": "3503:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (uint256,address)"
														}
													},
													"id": 330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3503:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 331,
												"nodeType": "EmitStatement",
												"src": "3498:41:0"
											}
										]
									},
									"functionSelector": "d9a5ec1b",
									"id": 333,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 298,
													"name": "_patientId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 293,
													"src": "3208:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 299,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 297,
												"name": "onlyPatient",
												"nameLocations": [
													"3196:11:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 72,
												"src": "3196:11:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3196:23:0"
										}
									],
									"name": "revokeAccess",
									"nameLocation": "3117:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "_patientId",
												"nameLocation": "3138:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "3130:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3130:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "_provider",
												"nameLocation": "3158:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "3150:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3150:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3129:39:0"
									},
									"returnParameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3226:0:0"
									},
									"scope": 506,
									"src": "3108:439:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "3703:169:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 344,
																"name": "_patientId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 335,
																"src": "3722:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 345,
																"name": "nextPatientId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "3735:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3722:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265636f726420646f6573206e6f74206578697374",
															"id": 347,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3750:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_752d09c2eab74c4a5f1bd63acead0a9ceb7b9a35d294a71b52bc967447850096",
																"typeString": "literal_string \"Record does not exist\""
															},
															"value": "Record does not exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_752d09c2eab74c4a5f1bd63acead0a9ceb7b9a35d294a71b52bc967447850096",
																"typeString": "literal_string \"Record does not exist\""
															}
														],
														"id": 343,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3714:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3714:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 349,
												"nodeType": "ExpressionStatement",
												"src": "3714:60:0"
											},
											{
												"expression": {
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 350,
																"name": "patientRecords",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "3785:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PatientRecord_$22_storage_$",
																	"typeString": "mapping(uint256 => struct Health.PatientRecord storage ref)"
																}
															},
															"id": 352,
															"indexExpression": {
																"id": 351,
																"name": "_patientId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 335,
																"src": "3800:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3785:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PatientRecord_$22_storage",
																"typeString": "struct Health.PatientRecord storage ref"
															}
														},
														"id": 353,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3812:16:0",
														"memberName": "emergencyPinHash",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 21,
														"src": "3785:43:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 357,
																		"name": "_pin",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 337,
																		"src": "3858:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 355,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "3841:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 356,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "3845:12:0",
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "3841:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 358,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3841:22:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 354,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "3831:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 359,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3831:33:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3785:79:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 361,
												"nodeType": "ExpressionStatement",
												"src": "3785:79:0"
											}
										]
									},
									"functionSelector": "b38deff0",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 340,
													"name": "_patientId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 335,
													"src": "3685:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 341,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 339,
												"name": "onlyPatient",
												"nameLocations": [
													"3673:11:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 72,
												"src": "3673:11:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3673:23:0"
										}
									],
									"name": "setEmergencyPin",
									"nameLocation": "3590:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "_patientId",
												"nameLocation": "3614:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "3606:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3606:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "_pin",
												"nameLocation": "3640:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "3626:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 336,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3626:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3605:40:0"
									},
									"returnParameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3703:0:0"
									},
									"scope": 506,
									"src": "3581:291:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 407,
										"nodeType": "Block",
										"src": "4072:377:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 373,
																"name": "_patientId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 365,
																"src": "4091:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 374,
																"name": "nextPatientId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "4104:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4091:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265636f726420646f6573206e6f74206578697374",
															"id": 376,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4119:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_752d09c2eab74c4a5f1bd63acead0a9ceb7b9a35d294a71b52bc967447850096",
																"typeString": "literal_string \"Record does not exist\""
															},
															"value": "Record does not exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_752d09c2eab74c4a5f1bd63acead0a9ceb7b9a35d294a71b52bc967447850096",
																"typeString": "literal_string \"Record does not exist\""
															}
														],
														"id": 372,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4083:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4083:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 378,
												"nodeType": "ExpressionStatement",
												"src": "4083:60:0"
											},
											{
												"assignments": [
													381
												],
												"declarations": [
													{
														"constant": false,
														"id": 381,
														"mutability": "mutable",
														"name": "record",
														"nameLocation": "4176:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 407,
														"src": "4154:28:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PatientRecord_$22_storage_ptr",
															"typeString": "struct Health.PatientRecord"
														},
														"typeName": {
															"id": 380,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 379,
																"name": "PatientRecord",
																"nameLocations": [
																	"4154:13:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 22,
																"src": "4154:13:0"
															},
															"referencedDeclaration": 22,
															"src": "4154:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PatientRecord_$22_storage_ptr",
																"typeString": "struct Health.PatientRecord"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 385,
												"initialValue": {
													"baseExpression": {
														"id": 382,
														"name": "patientRecords",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "4185:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PatientRecord_$22_storage_$",
															"typeString": "mapping(uint256 => struct Health.PatientRecord storage ref)"
														}
													},
													"id": 384,
													"indexExpression": {
														"id": 383,
														"name": "_patientId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 365,
														"src": "4200:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4185:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PatientRecord_$22_storage",
														"typeString": "struct Health.PatientRecord storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4154:57:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 391,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 387,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4254:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4258:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4254:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 389,
																		"name": "record",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 381,
																		"src": "4268:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PatientRecord_$22_storage_ptr",
																			"typeString": "struct Health.PatientRecord storage pointer"
																		}
																	},
																	"id": 390,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4275:5:0",
																	"memberName": "owner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 5,
																	"src": "4268:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4254:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"baseExpression": {
																	"expression": {
																		"id": 392,
																		"name": "record",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 381,
																		"src": "4298:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PatientRecord_$22_storage_ptr",
																			"typeString": "struct Health.PatientRecord storage pointer"
																		}
																	},
																	"id": 393,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4305:19:0",
																	"memberName": "authorizedProviders",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 11,
																	"src": "4298:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 396,
																"indexExpression": {
																	"expression": {
																		"id": 394,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4325:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 395,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4329:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4325:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4298:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4254:82:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420617574686f72697a6564",
															"id": 398,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4351:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
																"typeString": "literal_string \"Not authorized\""
															},
															"value": "Not authorized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
																"typeString": "literal_string \"Not authorized\""
															}
														],
														"id": 386,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4232:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4232:146:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 400,
												"nodeType": "ExpressionStatement",
												"src": "4232:146:0"
											},
											{
												"expression": {
													"components": [
														{
															"expression": {
																"id": 401,
																"name": "record",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 381,
																"src": "4407:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PatientRecord_$22_storage_ptr",
																	"typeString": "struct Health.PatientRecord storage pointer"
																}
															},
															"id": 402,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4414:8:0",
															"memberName": "ipfsHash",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 7,
															"src": "4407:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 403,
																"name": "record",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 381,
																"src": "4424:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PatientRecord_$22_storage_ptr",
																	"typeString": "struct Health.PatientRecord storage pointer"
																}
															},
															"id": 404,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4431:9:0",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 19,
															"src": "4424:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 405,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "4406:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bytes32_$_t_uint256_$",
														"typeString": "tuple(bytes32,uint256)"
													}
												},
												"functionReturnParameters": 371,
												"id": 406,
												"nodeType": "Return",
												"src": "4399:42:0"
											}
										]
									},
									"functionSelector": "b39e07e4",
									"id": 408,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRecordReference",
									"nameLocation": "3939:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "_patientId",
												"nameLocation": "3966:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "3958:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3958:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3957:20:0"
									},
									"returnParameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "ipfsHash",
												"nameLocation": "4037:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "4029:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 367,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4029:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "4055:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "4047:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4047:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4028:37:0"
									},
									"scope": 506,
									"src": "3930:519:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 447,
										"nodeType": "Block",
										"src": "4622:342:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 420,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 418,
																"name": "_patientId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 410,
																"src": "4641:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 419,
																"name": "nextPatientId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "4654:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4641:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265636f726420646f6573206e6f74206578697374",
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4669:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_752d09c2eab74c4a5f1bd63acead0a9ceb7b9a35d294a71b52bc967447850096",
																"typeString": "literal_string \"Record does not exist\""
															},
															"value": "Record does not exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_752d09c2eab74c4a5f1bd63acead0a9ceb7b9a35d294a71b52bc967447850096",
																"typeString": "literal_string \"Record does not exist\""
															}
														],
														"id": 417,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4633:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4633:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 423,
												"nodeType": "ExpressionStatement",
												"src": "4633:60:0"
											},
											{
												"assignments": [
													426
												],
												"declarations": [
													{
														"constant": false,
														"id": 426,
														"mutability": "mutable",
														"name": "record",
														"nameLocation": "4726:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 447,
														"src": "4704:28:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PatientRecord_$22_storage_ptr",
															"typeString": "struct Health.PatientRecord"
														},
														"typeName": {
															"id": 425,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 424,
																"name": "PatientRecord",
																"nameLocations": [
																	"4704:13:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 22,
																"src": "4704:13:0"
															},
															"referencedDeclaration": 22,
															"src": "4704:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PatientRecord_$22_storage_ptr",
																"typeString": "struct Health.PatientRecord"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 430,
												"initialValue": {
													"baseExpression": {
														"id": 427,
														"name": "patientRecords",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "4735:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PatientRecord_$22_storage_$",
															"typeString": "mapping(uint256 => struct Health.PatientRecord storage ref)"
														}
													},
													"id": 429,
													"indexExpression": {
														"id": 428,
														"name": "_patientId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 410,
														"src": "4750:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4735:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PatientRecord_$22_storage",
														"typeString": "struct Health.PatientRecord storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4704:57:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 435,
																				"name": "_pin",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 412,
																				"src": "4831:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			],
																			"expression": {
																				"id": 433,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4814:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 434,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4818:12:0",
																			"memberName": "encodePacked",
																			"nodeType": "MemberAccess",
																			"src": "4814:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 436,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4814:22:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 432,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967288,
																	"src": "4804:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (bytes memory) pure returns (bytes32)"
																	}
																},
																"id": 437,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4804:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 438,
																	"name": "record",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 426,
																	"src": "4841:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PatientRecord_$22_storage_ptr",
																		"typeString": "struct Health.PatientRecord storage pointer"
																	}
																},
																"id": 439,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4848:16:0",
																"memberName": "emergencyPinHash",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 21,
																"src": "4841:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "4804:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420656d657267656e63792050494e",
															"id": 441,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4879:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3952c6c3dff42b68e9b2bdc9cb3c10afb8deabb16ed413af9cf3b0fd10f1addd",
																"typeString": "literal_string \"Invalid emergency PIN\""
															},
															"value": "Invalid emergency PIN"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3952c6c3dff42b68e9b2bdc9cb3c10afb8deabb16ed413af9cf3b0fd10f1addd",
																"typeString": "literal_string \"Invalid emergency PIN\""
															}
														],
														"id": 431,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4782:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4782:131:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 443,
												"nodeType": "ExpressionStatement",
												"src": "4782:131:0"
											},
											{
												"expression": {
													"expression": {
														"id": 444,
														"name": "record",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "4941:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PatientRecord_$22_storage_ptr",
															"typeString": "struct Health.PatientRecord storage pointer"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4948:8:0",
													"memberName": "ipfsHash",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 7,
													"src": "4941:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 416,
												"id": 446,
												"nodeType": "Return",
												"src": "4934:22:0"
											}
										]
									},
									"functionSelector": "3c2bc6a1",
									"id": 448,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "emergencyAccess",
									"nameLocation": "4491:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "_patientId",
												"nameLocation": "4515:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "4507:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 409,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4507:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "_pin",
												"nameLocation": "4541:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "4527:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 411,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4527:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4506:40:0"
									},
									"returnParameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "ipfsHash",
												"nameLocation": "4606:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "4598:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 414,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4598:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4597:18:0"
									},
									"scope": 506,
									"src": "4482:482:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 504,
										"nodeType": "Block",
										"src": "5170:462:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 460,
																"name": "_patientId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 450,
																"src": "5189:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 461,
																"name": "nextPatientId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "5202:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5189:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265636f726420646f6573206e6f74206578697374",
															"id": 463,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5217:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_752d09c2eab74c4a5f1bd63acead0a9ceb7b9a35d294a71b52bc967447850096",
																"typeString": "literal_string \"Record does not exist\""
															},
															"value": "Record does not exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_752d09c2eab74c4a5f1bd63acead0a9ceb7b9a35d294a71b52bc967447850096",
																"typeString": "literal_string \"Record does not exist\""
															}
														],
														"id": 459,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5181:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5181:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 465,
												"nodeType": "ExpressionStatement",
												"src": "5181:60:0"
											},
											{
												"assignments": [
													468
												],
												"declarations": [
													{
														"constant": false,
														"id": 468,
														"mutability": "mutable",
														"name": "record",
														"nameLocation": "5274:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 504,
														"src": "5252:28:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PatientRecord_$22_storage_ptr",
															"typeString": "struct Health.PatientRecord"
														},
														"typeName": {
															"id": 467,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 466,
																"name": "PatientRecord",
																"nameLocations": [
																	"5252:13:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 22,
																"src": "5252:13:0"
															},
															"referencedDeclaration": 22,
															"src": "5252:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PatientRecord_$22_storage_ptr",
																"typeString": "struct Health.PatientRecord"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 472,
												"initialValue": {
													"baseExpression": {
														"id": 469,
														"name": "patientRecords",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "5283:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PatientRecord_$22_storage_$",
															"typeString": "mapping(uint256 => struct Health.PatientRecord storage ref)"
														}
													},
													"id": 471,
													"indexExpression": {
														"id": 470,
														"name": "_patientId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 450,
														"src": "5298:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5283:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PatientRecord_$22_storage",
														"typeString": "struct Health.PatientRecord storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5252:57:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 478,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 474,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "5352:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 475,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5356:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "5352:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 476,
																		"name": "record",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 468,
																		"src": "5366:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PatientRecord_$22_storage_ptr",
																			"typeString": "struct Health.PatientRecord storage pointer"
																		}
																	},
																	"id": 477,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5373:5:0",
																	"memberName": "owner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 5,
																	"src": "5366:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "5352:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"baseExpression": {
																	"expression": {
																		"id": 479,
																		"name": "record",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 468,
																		"src": "5396:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PatientRecord_$22_storage_ptr",
																			"typeString": "struct Health.PatientRecord storage pointer"
																		}
																	},
																	"id": 480,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5403:19:0",
																	"memberName": "authorizedProviders",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 11,
																	"src": "5396:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 483,
																"indexExpression": {
																	"expression": {
																		"id": 481,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "5423:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 482,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5427:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "5423:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5396:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5352:82:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420617574686f72697a6564",
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5449:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
																"typeString": "literal_string \"Not authorized\""
															},
															"value": "Not authorized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
																"typeString": "literal_string \"Not authorized\""
															}
														],
														"id": 473,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5330:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5330:146:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 487,
												"nodeType": "ExpressionStatement",
												"src": "5330:146:0"
											},
											{
												"assignments": [
													489
												],
												"declarations": [
													{
														"constant": false,
														"id": 489,
														"mutability": "mutable",
														"name": "expectedHash",
														"nameLocation": "5505:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 504,
														"src": "5497:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 488,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5497:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 496,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 493,
																	"name": "_fieldValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 454,
																	"src": "5547:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"id": 491,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "5530:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 492,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "5534:12:0",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "5530:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5530:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 490,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "5520:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5520:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5497:63:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"expression": {
																"id": 497,
																"name": "record",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 468,
																"src": "5578:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PatientRecord_$22_storage_ptr",
																	"typeString": "struct Health.PatientRecord storage pointer"
																}
															},
															"id": 498,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5585:11:0",
															"memberName": "fieldHashes",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 15,
															"src": "5578:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bytes32_$",
																"typeString": "mapping(string memory => bytes32)"
															}
														},
														"id": 500,
														"indexExpression": {
															"id": 499,
															"name": "_fieldName",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 452,
															"src": "5597:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5578:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 501,
														"name": "expectedHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 489,
														"src": "5612:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5578:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 458,
												"id": 503,
												"nodeType": "Return",
												"src": "5571:53:0"
											}
										]
									},
									"functionSelector": "1b424e7a",
									"id": 505,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyRecordField",
									"nameLocation": "5016:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "_patientId",
												"nameLocation": "5042:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "5034:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5034:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "_fieldName",
												"nameLocation": "5068:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "5054:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 451,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5054:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "_fieldValue",
												"nameLocation": "5094:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "5080:25:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 453,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5080:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5033:73:0"
									},
									"returnParameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "5158:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 456,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5158:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5157:6:0"
									},
									"scope": 506,
									"src": "5007:625:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 507,
							"src": "61:5574:0",
							"usedErrors": [],
							"usedEvents": [
								37,
								43,
								49,
								55
							]
						}
					],
					"src": "33:5602:0"
				},
				"id": 0
			}
		}
	}
}