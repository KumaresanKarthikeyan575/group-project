{
	"id": "beeac733a736fefc3564d5c6cb911391",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"viaIR": true,
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"jk.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ncontract jk {\r\n    address public owner;\r\n    bytes32 private emergencyPinHash;\r\n    \r\n    struct MedicalRecord {\r\n        bytes32 allergiesHash;\r\n        bytes32 medicalHistoryHash;\r\n        bytes32 medicationsHash;\r\n    }\r\n    \r\n    MedicalRecord private record;\r\n    \r\n    mapping(address => bool) private authorizedProviders;\r\n    \r\n    event RecordUpdated(string recordType, bytes32 recordHash);\r\n    event AccessGranted(address provider);\r\n    event AccessRevoked(address provider);\r\n    event EmergencyAccessUsed(address provider);\r\n    \r\n    modifier onlyPatient() {\r\n        require(msg.sender == owner, \"Only patient can perform this action\");\r\n        _;\r\n    }\r\n\r\n    modifier onlyAuthorized() {\r\n        require(msg.sender == owner || authorizedProviders[msg.sender], \"Unauthorized access\");\r\n        _;\r\n    }\r\n\r\n    constructor(bytes32 _emergencyPinHash) {\r\n        owner = msg.sender;\r\n        emergencyPinHash = _emergencyPinHash;\r\n    }\r\n\r\n    function grantAccess(address _provider) external onlyPatient {\r\n        authorizedProviders[_provider] = true;\r\n        emit AccessGranted(_provider);\r\n    }\r\n\r\n    function revokeAccess(address _provider) external onlyPatient {\r\n        require(authorizedProviders[_provider], \"Provider not found\");\r\n        authorizedProviders[_provider] = false;\r\n        emit AccessRevoked(_provider);\r\n    }\r\n\r\n    function updateRecord(bytes32 _allergiesHash, bytes32 _medicalHistoryHash, bytes32 _medicationsHash) external onlyPatient {\r\n        record = MedicalRecord(_allergiesHash, _medicalHistoryHash, _medicationsHash);\r\n        emit RecordUpdated(\"Allergies\", _allergiesHash);\r\n        emit RecordUpdated(\"Medical History\", _medicalHistoryHash);\r\n        emit RecordUpdated(\"Medications\", _medicationsHash);\r\n    }\r\n\r\n    function getRecord() external view onlyAuthorized returns (bytes32, bytes32, bytes32) {\r\n        return (record.allergiesHash, record.medicalHistoryHash, record.medicationsHash);\r\n    }\r\n\r\n    function verifyRecord(string memory recordType, bytes32 providedHash) external view onlyAuthorized returns (bool) {\r\n        bytes32 storedHash;\r\n        \r\n        if (keccak256(abi.encodePacked(recordType)) == keccak256(abi.encodePacked(\"Allergies\"))) {\r\n            storedHash = record.allergiesHash;\r\n        } else if (keccak256(abi.encodePacked(recordType)) == keccak256(abi.encodePacked(\"MedicalHistory\"))) {\r\n            storedHash = record.medicalHistoryHash;\r\n        } else if (keccak256(abi.encodePacked(recordType)) == keccak256(abi.encodePacked(\"Medications\"))) {\r\n            storedHash = record.medicationsHash;\r\n        } else {\r\n            revert(\"Invalid record type\");\r\n        }\r\n        \r\n        return providedHash == storedHash;\r\n    }\r\n\r\n    function setEmergencyPin(bytes32 _newPinHash) external onlyPatient {\r\n        emergencyPinHash = _newPinHash;\r\n    }\r\n\r\n    function emergencyAccess(bytes32 providedPinHash) external {\r\n        require(providedPinHash == emergencyPinHash, \"Invalid emergency PIN\");\r\n        emit EmergencyAccessUsed(msg.sender);\r\n    }\r\n}\r\n"
			}
		}
	},
	"output": {
		"contracts": {
			"jk.sol": {
				"jk": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_emergencyPinHash",
									"type": "bytes32"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "provider",
									"type": "address"
								}
							],
							"name": "AccessGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "provider",
									"type": "address"
								}
							],
							"name": "AccessRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "provider",
									"type": "address"
								}
							],
							"name": "EmergencyAccessUsed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "recordType",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "recordHash",
									"type": "bytes32"
								}
							],
							"name": "RecordUpdated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "providedPinHash",
									"type": "bytes32"
								}
							],
							"name": "emergencyAccess",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getRecord",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_provider",
									"type": "address"
								}
							],
							"name": "grantAccess",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_provider",
									"type": "address"
								}
							],
							"name": "revokeAccess",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_newPinHash",
									"type": "bytes32"
								}
							],
							"name": "setEmergencyPin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_allergiesHash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "_medicalHistoryHash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "_medicationsHash",
									"type": "bytes32"
								}
							],
							"name": "updateRecord",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "recordType",
									"type": "string"
								},
								{
									"internalType": "bytes32",
									"name": "providedHash",
									"type": "bytes32"
								}
							],
							"name": "verifyRecord",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"jk.sol\":60:3123  contract jk {... */\n  0x80\n  jumpi(tag_5, callvalue)\n  0x1f\n  bytecodeSize\n  codesize\n  dup2\n  swap1\n  sub\n  swap2\n  dup3\n  add\n  not(0x1f)\n  and\n  dup4\n  add\n  swap2\n  sub(shl(0x40, 0x01), 0x01)\n  dup4\n  gt\n  dup5\n  dup5\n  lt\n  or\n  tag_3\n  jumpi\n  dup1\n  dup5\n  swap3\n  0x20\n  swap5\n  0x40\n  mstore\n  dup4\n  codecopy\n  dup2\n  add\n  sub\n  slt\n  tag_5\n  jumpi\n  mload\n  0x00\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"jk.sol\":949:959  msg.sender */\n  caller\n    /* \"jk.sol\":60:3123  contract jk {... */\n  or\n  swap1\n  sstore\n  0x01\n  sstore\n  mload(0x40)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  return\ntag_5:\n  0x00\n  dup1\n  revert\ntag_3:\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x41)\n  revert(0x00, 0x24)\nstop\n\nsub_0: assembly {\n        /* \"jk.sol\":60:3123  contract jk {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_4, iszero(lt(calldatasize, 0x04)))\n      0x00\n      dup1\n      revert\n    tag_4:\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0ae5e739\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x122a183a\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x283d98af\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x36677f34\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x6823b4ea\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x85e68531\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_18\n      jumpi\n      0xf18ad6fb\n      eq\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      jumpi(tag_24, callvalue)\n      jumpi(tag_24, slt(add(not(0x03), calldatasize), 0x00))\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"jk.sol\":785:795  msg.sender */\n      caller\n        /* \"jk.sol\":785:804  msg.sender == owner */\n      eq\n        /* \"jk.sol\":785:839  msg.sender == owner || authorizedProviders[msg.sender] */\n      dup1\n      iszero\n      tag_26\n      jumpi\n        /* \"jk.sol\":60:3123  contract jk {... */\n    tag_27:\n        /* \"jk.sol\":777:863  require(msg.sender == owner || authorizedProviders[msg.sender], \"Unauthorized access\") */\n      tag_28\n      swap1\n      tag_3\n      jump\t// in\n    tag_28:\n        /* \"jk.sol\":60:3123  contract jk {... */\n      0x60\n        /* \"jk.sol\":1946:1952  record */\n      0x02\n        /* \"jk.sol\":60:3123  contract jk {... */\n      sload\n        /* \"jk.sol\":1968:1993  record.medicalHistoryHash */\n      0x03\n        /* \"jk.sol\":60:3123  contract jk {... */\n      sload\n      sload(0x04)\n      swap1\n      mload(0x40)\n      swap3\n      dup4\n      mstore\n      0x20\n      dup4\n      add\n      mstore\n      0x40\n      dup3\n      add\n      mstore\n      return\n        /* \"jk.sol\":785:839  msg.sender == owner || authorizedProviders[msg.sender] */\n    tag_26:\n      pop\n        /* \"jk.sol\":785:795  msg.sender */\n      caller\n        /* \"jk.sol\":60:3123  contract jk {... */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"jk.sol\":808:827  authorizedProviders */\n      0x05\n        /* \"jk.sol\":60:3123  contract jk {... */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"jk.sol\":785:839  msg.sender == owner || authorizedProviders[msg.sender] */\n      jump(tag_27)\n        /* \"jk.sol\":60:3123  contract jk {... */\n    tag_24:\n      0x00\n      dup1\n      revert\n    tag_18:\n      jumpi(tag_24, callvalue)\n      jumpi(tag_24, slt(add(not(0x03), calldatasize), 0x00))\n      sload(0x00)\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_16:\n      jumpi(tag_24, callvalue)\n      jumpi(tag_24, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      swap1\n      dup2\n      swap1\n      sub\n      tag_24\n      jumpi\n        /* \"jk.sol\":644:712  require(msg.sender == owner, \"Only patient can perform this action\") */\n      tag_39\n        /* \"jk.sol\":60:3123  contract jk {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      sload(0x00)\n      and\n        /* \"jk.sol\":652:662  msg.sender */\n      caller\n        /* \"jk.sol\":652:671  msg.sender == owner */\n      eq\n        /* \"jk.sol\":644:712  require(msg.sender == owner, \"Only patient can perform this action\") */\n      tag_2\n      jump\t// in\n    tag_39:\n        /* \"jk.sol\":60:3123  contract jk {... */\n      dup1\n      0x00\n      mstore\n        /* \"jk.sol\":1268:1287  authorizedProviders */\n      0x05\n        /* \"jk.sol\":60:3123  contract jk {... */\n      0x20\n      mstore\n      jumpi(tag_40, iszero(and(sload(keccak256(0x00, 0x40)), 0xff)))\n      0x20\n      dup2\n        /* \"jk.sol\":1386:1410  AccessRevoked(_provider) */\n      0x1b9b72fde9da721e70e6aca3b0cf4cbe73e82765ef1f280157740376531bfdd8\n        /* \"jk.sol\":60:3123  contract jk {... */\n      swap3\n      0x00\n      mstore\n        /* \"jk.sol\":1268:1287  authorizedProviders */\n      0x05\n        /* \"jk.sol\":60:3123  contract jk {... */\n      dup3\n      mstore\n      keccak256(0x00, 0x40)\n      not(0xff)\n      dup2\n      sload\n      and\n      swap1\n      sstore\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n        /* \"jk.sol\":1386:1410  AccessRevoked(_provider) */\n      log1\n        /* \"jk.sol\":60:3123  contract jk {... */\n      stop\n    tag_40:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x12\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x72, 0x141c9bdd9a59195c881b9bdd08199bdd5b99)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_14:\n      jumpi(tag_24, callvalue)\n      jumpi(tag_24, slt(add(not(0x03), calldatasize), 0x20))\n        /* \"jk.sol\":644:712  require(msg.sender == owner, \"Only patient can perform this action\") */\n      tag_46\n        /* \"jk.sol\":60:3123  contract jk {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      sload(0x00)\n      and\n        /* \"jk.sol\":652:662  msg.sender */\n      caller\n        /* \"jk.sol\":652:671  msg.sender == owner */\n      eq\n        /* \"jk.sol\":644:712  require(msg.sender == owner, \"Only patient can perform this action\") */\n      tag_2\n      jump\t// in\n    tag_46:\n        /* \"jk.sol\":60:3123  contract jk {... */\n      sstore(0x01, calldataload(0x04))\n      stop\n    tag_12:\n      jumpi(tag_24, callvalue)\n      jumpi(tag_24, slt(add(not(0x03), calldatasize), 0x20))\n      sload(0x01)\n      calldataload(0x04)\n        /* \"jk.sol\":3004:3039  providedPinHash == emergencyPinHash */\n      sub\n        /* \"jk.sol\":60:3123  contract jk {... */\n      tag_51\n      jumpi\n        /* \"jk.sol\":3081:3112  EmergencyAccessUsed(msg.sender) */\n      0x0a3c2c470ed60b3661c58daac42324a1aec25592b9f249e1042b5b923bf67579\n        /* \"jk.sol\":60:3123  contract jk {... */\n      0x20\n      mload(0x40)\n        /* \"jk.sol\":3101:3111  msg.sender */\n      caller\n        /* \"jk.sol\":60:3123  contract jk {... */\n      dup2\n      mstore\n        /* \"jk.sol\":3081:3112  EmergencyAccessUsed(msg.sender) */\n      log1\n        /* \"jk.sol\":60:3123  contract jk {... */\n      stop\n    tag_51:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x15\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x59, 0x24b73b30b634b21032b6b2b933b2b731bc902824a7)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_10:\n      jumpi(tag_24, callvalue)\n      jumpi(tag_24, slt(add(not(0x03), calldatasize), 0x60))\n      calldataload(0x04)\n      calldataload(0x24)\n      swap1\n      calldataload(0x44)\n        /* \"jk.sol\":644:712  require(msg.sender == owner, \"Only patient can perform this action\") */\n      tag_57\n        /* \"jk.sol\":60:3123  contract jk {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      sload(0x00)\n      and\n        /* \"jk.sol\":652:662  msg.sender */\n      caller\n        /* \"jk.sol\":652:671  msg.sender == owner */\n      eq\n        /* \"jk.sol\":644:712  require(msg.sender == owner, \"Only patient can perform this action\") */\n      tag_2\n      jump\t// in\n    tag_57:\n        /* \"jk.sol\":60:3123  contract jk {... */\n      mload(0x40)\n      swap2\n      0x60\n      dup4\n      add\n      swap1\n      dup4\n      dup3\n      lt\n      0xffffffffffffffff\n      dup4\n      gt\n      or\n      tag_58\n      jumpi\n        /* \"jk.sol\":1652:1694  RecordUpdated(\"Allergies\", _allergiesHash) */\n      0x68bc20e52b10ffc43a05dfe035d47bc00f739dcc31815fa1585438ad5e475d28\n        /* \"jk.sol\":60:3123  contract jk {... */\n      swap5\n      dup6\n        /* \"jk.sol\":1652:1694  RecordUpdated(\"Allergies\", _allergiesHash) */\n      0x80\n        /* \"jk.sol\":60:3123  contract jk {... */\n      dup1\n      swap7\n      swap4\n      dup7\n      0x40\n      dup4\n      swap7\n      dup6\n      swap9\n      dup3\n      mstore\n      dup4\n      dup2\n      mstore\n        /* \"jk.sol\":1568:1636  MedicalRecord(_allergiesHash, _medicalHistoryHash, _medicationsHash) */\n      dup7\n        /* \"jk.sol\":60:3123  contract jk {... */\n      0x20\n        /* \"jk.sol\":1568:1636  MedicalRecord(_allergiesHash, _medicalHistoryHash, _medicationsHash) */\n      dup3\n      add\n        /* \"jk.sol\":60:3123  contract jk {... */\n      mstore\n        /* \"jk.sol\":1568:1636  MedicalRecord(_allergiesHash, _medicalHistoryHash, _medicationsHash) */\n      add\n        /* \"jk.sol\":60:3123  contract jk {... */\n      mstore\n      dup1\n        /* \"jk.sol\":1559:1636  record = MedicalRecord(_allergiesHash, _medicalHistoryHash, _medicationsHash) */\n      0x02\n        /* \"jk.sol\":60:3123  contract jk {... */\n      sstore\n      dup4\n      0x03\n      sstore\n      dup7\n      0x04\n      sstore\n      mload(0x40)\n      swap1\n      0x40\n      dup3\n      mstore\n      0x09\n      0x40\n      dup4\n      add\n      mstore\n      shl(0xb8, 0x416c6c657267696573)\n      0x60\n      dup4\n      add\n      mstore\n      0x20\n      dup3\n      add\n      mstore\n        /* \"jk.sol\":1652:1694  RecordUpdated(\"Allergies\", _allergiesHash) */\n      log1\n        /* \"jk.sol\":60:3123  contract jk {... */\n      mload(0x40)\n      swap1\n      0x40\n      dup3\n      mstore\n      0x0f\n      0x40\n      dup4\n      add\n      mstore\n      shl(0x88, 0x4d65646963616c20486973746f7279)\n      0x60\n      dup4\n      add\n      mstore\n      0x20\n      dup3\n      add\n      mstore\n        /* \"jk.sol\":1710:1763  RecordUpdated(\"Medical History\", _medicalHistoryHash) */\n      log1\n        /* \"jk.sol\":60:3123  contract jk {... */\n      mload(0x40)\n      swap1\n      0x40\n      dup3\n      mstore\n      0x0b\n      0x40\n      dup4\n      add\n      mstore\n      shl(0xa8, 0x4d656469636174696f6e73)\n      0x60\n      dup4\n      add\n      mstore\n      0x20\n      dup3\n      add\n      mstore\n        /* \"jk.sol\":1779:1825  RecordUpdated(\"Medications\", _medicationsHash) */\n      log1\n        /* \"jk.sol\":60:3123  contract jk {... */\n      stop\n    tag_58:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_8:\n      jumpi(tag_24, callvalue)\n      jumpi(tag_24, slt(add(not(0x03), calldatasize), 0x40))\n      calldataload(0x04)\n      0xffffffffffffffff\n      dup2\n      gt\n      tag_24\n      jumpi\n      calldatasize\n      0x23\n      dup3\n      add\n      slt\n      iszero\n      tag_24\n      jumpi\n      dup1\n      0x04\n      add\n      calldataload\n      swap1\n      0xffffffffffffffff\n      dup3\n      gt\n      tag_58\n      jumpi\n      mload(0x40)\n      swap2\n      tag_70\n      0x1f\n      dup3\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup5\n      tag_1\n      jump\t// in\n    tag_70:\n      dup1\n      dup4\n      mstore\n      0x20\n      dup4\n      add\n      swap2\n      calldatasize\n      0x24\n      dup4\n      dup4\n      add\n      add\n      gt\n      tag_24\n      jumpi\n      dup2\n      0x00\n      swap3\n      0x24\n      0x20\n      swap4\n      add\n      dup6\n      calldatacopy\n      dup5\n      add\n      add\n      mstore\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"jk.sol\":785:795  msg.sender */\n      caller\n        /* \"jk.sol\":785:804  msg.sender == owner */\n      eq\n        /* \"jk.sol\":785:839  msg.sender == owner || authorizedProviders[msg.sender] */\n      dup1\n      iszero\n      tag_73\n      jumpi\n        /* \"jk.sol\":60:3123  contract jk {... */\n    tag_74:\n        /* \"jk.sol\":777:863  require(msg.sender == owner || authorizedProviders[msg.sender], \"Unauthorized access\") */\n      tag_75\n      swap1\n      tag_3\n      jump\t// in\n    tag_75:\n        /* \"jk.sol\":60:3123  contract jk {... */\n      mload(0x40)\n      0x20\n        /* \"jk.sol\":2212:2240  abi.encodePacked(recordType) */\n      dup2\n      add\n        /* \"jk.sol\":60:3123  contract jk {... */\n      swap1\n        /* \"jk.sol\":2212:2240  abi.encodePacked(recordType) */\n      tag_76\n        /* \"jk.sol\":60:3123  contract jk {... */\n      0x20\n      dup3\n      dup7\n      mload\n      dup1\n      dup8\n      dup8\n      mcopy\n      dup2\n      add\n      0x00\n      dup4\n      dup3\n      add\n      mstore\n        /* \"jk.sol\":2212:2240  abi.encodePacked(recordType) */\n      sub\n      add\n        /* \"jk.sol\":60:3123  contract jk {... */\n      not(0x1f)\n        /* \"jk.sol\":2212:2240  abi.encodePacked(recordType) */\n      dup2\n      add\n      dup4\n      mstore\n      dup3\n      tag_1\n      jump\t// in\n    tag_76:\n        /* \"jk.sol\":60:3123  contract jk {... */\n      mload\n        /* \"jk.sol\":2202:2241  keccak256(abi.encodePacked(recordType)) */\n      swap1\n      keccak256\n        /* \"jk.sol\":60:3123  contract jk {... */\n      mload(0x40)\n      0x20\n        /* \"jk.sol\":2255:2284  abi.encodePacked(\"Allergies\") */\n      dup2\n      add\n        /* \"jk.sol\":60:3123  contract jk {... */\n      swap1\n      shl(0xb8, 0x416c6c657267696573)\n      dup3\n      mstore\n        /* \"jk.sol\":2255:2284  abi.encodePacked(\"Allergies\") */\n      0x09\n      dup2\n      mstore\n      tag_77\n      0x29\n      dup3\n      tag_1\n      jump\t// in\n    tag_77:\n        /* \"jk.sol\":60:3123  contract jk {... */\n      mload\n        /* \"jk.sol\":2245:2285  keccak256(abi.encodePacked(\"Allergies\")) */\n      swap1\n      keccak256\n        /* \"jk.sol\":2202:2285  keccak256(abi.encodePacked(recordType)) == keccak256(abi.encodePacked(\"Allergies\")) */\n      sub\n        /* \"jk.sol\":2245:2285  keccak256(abi.encodePacked(\"Allergies\")) */\n      tag_78\n      jumpi\n        /* \"jk.sol\":60:3123  contract jk {... */\n      pop\n      pop\n      0x20\n        /* \"jk.sol\":2315:2321  record */\n      0x02\n        /* \"jk.sol\":60:3123  contract jk {... */\n      sload\n        /* \"jk.sol\":2198:2733  if (keccak256(abi.encodePacked(recordType)) == keccak256(abi.encodePacked(\"Allergies\"))) {... */\n    tag_80:\n        /* \"jk.sol\":60:3123  contract jk {... */\n      mload(0x40)\n      swap1\n      calldataload(0x24)\n        /* \"jk.sol\":2760:2786  providedHash == storedHash */\n      eq\n        /* \"jk.sol\":60:3123  contract jk {... */\n      dup2\n      mstore\n      return\n        /* \"jk.sol\":2198:2733  if (keccak256(abi.encodePacked(recordType)) == keccak256(abi.encodePacked(\"Allergies\"))) {... */\n    tag_78:\n        /* \"jk.sol\":60:3123  contract jk {... */\n      mload(0x40)\n      0x20\n        /* \"jk.sol\":2367:2395  abi.encodePacked(recordType) */\n      dup2\n      add\n        /* \"jk.sol\":60:3123  contract jk {... */\n      swap1\n        /* \"jk.sol\":2367:2395  abi.encodePacked(recordType) */\n      tag_81\n        /* \"jk.sol\":60:3123  contract jk {... */\n      0x20\n      dup3\n      dup7\n      mload\n      dup1\n      dup8\n      dup8\n      mcopy\n      dup2\n      add\n      0x00\n      dup4\n      dup3\n      add\n      mstore\n        /* \"jk.sol\":2367:2395  abi.encodePacked(recordType) */\n      sub\n      add\n        /* \"jk.sol\":60:3123  contract jk {... */\n      not(0x1f)\n        /* \"jk.sol\":2367:2395  abi.encodePacked(recordType) */\n      dup2\n      add\n      dup4\n      mstore\n      dup3\n      tag_1\n      jump\t// in\n    tag_81:\n        /* \"jk.sol\":60:3123  contract jk {... */\n      mload\n        /* \"jk.sol\":2357:2396  keccak256(abi.encodePacked(recordType)) */\n      swap1\n      keccak256\n        /* \"jk.sol\":60:3123  contract jk {... */\n      mload(0x40)\n      0x20\n        /* \"jk.sol\":2410:2444  abi.encodePacked(\"MedicalHistory\") */\n      dup2\n      add\n        /* \"jk.sol\":60:3123  contract jk {... */\n      swap1\n      shl(0x90, 0x4d65646963616c486973746f7279)\n      dup3\n      mstore\n        /* \"jk.sol\":2410:2444  abi.encodePacked(\"MedicalHistory\") */\n      0x0e\n      dup2\n      mstore\n      tag_82\n      0x2e\n      dup3\n      tag_1\n      jump\t// in\n    tag_82:\n        /* \"jk.sol\":60:3123  contract jk {... */\n      mload\n        /* \"jk.sol\":2400:2445  keccak256(abi.encodePacked(\"MedicalHistory\")) */\n      swap1\n      keccak256\n        /* \"jk.sol\":2357:2445  keccak256(abi.encodePacked(recordType)) == keccak256(abi.encodePacked(\"MedicalHistory\")) */\n      sub\n        /* \"jk.sol\":2400:2445  keccak256(abi.encodePacked(\"MedicalHistory\")) */\n      tag_83\n      jumpi\n        /* \"jk.sol\":60:3123  contract jk {... */\n      pop\n      pop\n      0x20\n        /* \"jk.sol\":2475:2500  record.medicalHistoryHash */\n      0x03\n        /* \"jk.sol\":60:3123  contract jk {... */\n      sload\n        /* \"jk.sol\":2198:2733  if (keccak256(abi.encodePacked(recordType)) == keccak256(abi.encodePacked(\"Allergies\"))) {... */\n      jump(tag_80)\n        /* \"jk.sol\":2353:2733  if (keccak256(abi.encodePacked(recordType)) == keccak256(abi.encodePacked(\"MedicalHistory\"))) {... */\n    tag_83:\n        /* \"jk.sol\":2532:2560  abi.encodePacked(recordType) */\n      tag_86\n        /* \"jk.sol\":60:3123  contract jk {... */\n      0x20\n      mload(0x40)\n        /* \"jk.sol\":2532:2560  abi.encodePacked(recordType) */\n      dup1\n      swap4\n      dup3\n      dup3\n      add\n        /* \"jk.sol\":60:3123  contract jk {... */\n      swap6\n      mload\n      dup1\n      swap2\n      dup8\n      mcopy\n      dup2\n      add\n      0x00\n      dup4\n      dup3\n      add\n      mstore\n        /* \"jk.sol\":2532:2560  abi.encodePacked(recordType) */\n      sub\n      add\n        /* \"jk.sol\":60:3123  contract jk {... */\n      not(0x1f)\n        /* \"jk.sol\":2532:2560  abi.encodePacked(recordType) */\n      dup2\n      add\n      dup4\n      mstore\n      dup3\n      tag_1\n      jump\t// in\n    tag_86:\n        /* \"jk.sol\":60:3123  contract jk {... */\n      mload\n        /* \"jk.sol\":2522:2561  keccak256(abi.encodePacked(recordType)) */\n      swap1\n      keccak256\n        /* \"jk.sol\":60:3123  contract jk {... */\n      mload(0x40)\n      0x20\n        /* \"jk.sol\":2575:2606  abi.encodePacked(\"Medications\") */\n      dup2\n      add\n        /* \"jk.sol\":60:3123  contract jk {... */\n      swap1\n      shl(0xa8, 0x4d656469636174696f6e73)\n      dup3\n      mstore\n        /* \"jk.sol\":2575:2606  abi.encodePacked(\"Medications\") */\n      0x0b\n      dup2\n      mstore\n      tag_87\n      0x2b\n      dup3\n      tag_1\n      jump\t// in\n    tag_87:\n        /* \"jk.sol\":60:3123  contract jk {... */\n      mload\n        /* \"jk.sol\":2565:2607  keccak256(abi.encodePacked(\"Medications\")) */\n      swap1\n      keccak256\n        /* \"jk.sol\":2522:2607  keccak256(abi.encodePacked(recordType)) == keccak256(abi.encodePacked(\"Medications\")) */\n      sub\n        /* \"jk.sol\":2565:2607  keccak256(abi.encodePacked(\"Medications\")) */\n      tag_88\n      jumpi\n        /* \"jk.sol\":60:3123  contract jk {... */\n      0x20\n      sload(0x04)\n        /* \"jk.sol\":2198:2733  if (keccak256(abi.encodePacked(recordType)) == keccak256(abi.encodePacked(\"Allergies\"))) {... */\n      jump(tag_80)\n        /* \"jk.sol\":2518:2733  if (keccak256(abi.encodePacked(recordType)) == keccak256(abi.encodePacked(\"Medications\"))) {... */\n    tag_88:\n        /* \"jk.sol\":60:3123  contract jk {... */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n        /* \"jk.sol\":2692:2721  revert(\"Invalid record type\") */\n      dup2\n      mstore\n        /* \"jk.sol\":60:3123  contract jk {... */\n      0x20\n      0x04\n        /* \"jk.sol\":2692:2721  revert(\"Invalid record type\") */\n      dup3\n      add\n        /* \"jk.sol\":60:3123  contract jk {... */\n      mstore\n      0x13\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x68, 0x496e76616c6964207265636f72642074797065)\n      0x44\n      dup3\n      add\n      mstore\n        /* \"jk.sol\":2692:2721  revert(\"Invalid record type\") */\n      0x64\n      swap1\n      revert\n        /* \"jk.sol\":785:839  msg.sender == owner || authorizedProviders[msg.sender] */\n    tag_73:\n      pop\n        /* \"jk.sol\":785:795  msg.sender */\n      caller\n        /* \"jk.sol\":60:3123  contract jk {... */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"jk.sol\":808:827  authorizedProviders */\n      0x05\n        /* \"jk.sol\":60:3123  contract jk {... */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"jk.sol\":785:839  msg.sender == owner || authorizedProviders[msg.sender] */\n      jump(tag_74)\n        /* \"jk.sol\":60:3123  contract jk {... */\n    tag_6:\n      jumpi(tag_24, callvalue)\n      jumpi(tag_24, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      swap1\n      dup2\n      swap1\n      sub\n      tag_24\n      jumpi\n      0x20\n        /* \"jk.sol\":1147:1171  AccessGranted(_provider) */\n      0xdeb5c31899474fe8c086c95ff9344480d19365676a6a1d22d37bb8e3e7c0ef18\n        /* \"jk.sol\":60:3123  contract jk {... */\n      swap2\n        /* \"jk.sol\":644:712  require(msg.sender == owner, \"Only patient can perform this action\") */\n      tag_96\n        /* \"jk.sol\":60:3123  contract jk {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      sload(0x00)\n      and\n        /* \"jk.sol\":652:662  msg.sender */\n      caller\n        /* \"jk.sol\":652:671  msg.sender == owner */\n      eq\n        /* \"jk.sol\":644:712  require(msg.sender == owner, \"Only patient can perform this action\") */\n      tag_2\n      jump\t// in\n    tag_96:\n        /* \"jk.sol\":60:3123  contract jk {... */\n      dup1\n      0x00\n      mstore\n        /* \"jk.sol\":1094:1113  authorizedProviders */\n      0x05\n        /* \"jk.sol\":60:3123  contract jk {... */\n      dup3\n      mstore\n      keccak256(0x00, 0x40)\n        /* \"jk.sol\":1127:1131  true */\n      0x01\n        /* \"jk.sol\":60:3123  contract jk {... */\n      not(0xff)\n      dup3\n      sload\n      and\n      or\n      swap1\n      sstore\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n        /* \"jk.sol\":1147:1171  AccessGranted(_provider) */\n      log1\n        /* \"jk.sol\":60:3123  contract jk {... */\n      stop\n    tag_1:\n      swap1\n      0x1f\n      dup1\n      not\n      swap2\n      add\n      and\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_58\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_2:\n      iszero\n      tag_99\n      jumpi\n      jump\t// out\n    tag_99:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x24\n      dup1\n      dup3\n      add\n      mstore\n      0x4f6e6c792070617469656e742063616e20706572666f726d2074686973206163\n      0x44\n      dup3\n      add\n      mstore\n      shl(0xe1, 0x3a34b7b7)\n      0x64\n      dup3\n      add\n      mstore\n      0x84\n      swap1\n      revert\n    tag_3:\n      iszero\n      tag_101\n      jumpi\n      jump\t// out\n    tag_101:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x13\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x68, 0x556e617574686f72697a656420616363657373)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n\n    auxdata: 0xa264697066735822122022e4a8d0312e627734e0bdcb56a8e41034cefc249c2162399b8beb79819a106264736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608034605f57601f6107b638819003918201601f19168301916001600160401b03831184841017606357808492602094604052833981010312605f57515f80546001600160a01b0319163317905560015560405161073e90816100788239f35b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe60806040526004361015610011575f80fd5b5f3560e01c80630ae5e739146105cf578063122a183a146103a0578063283d98af1461027a57806336677f34146101f55780636823b4ea146101c857806385e68531146100ff5780638da5cb5b146100d85763f18ad6fb14610071575f80fd5b346100d4575f3660031901126100d4575f546001600160a01b0316331480156100bc575b61009e906106c6565b60606002546003546004549060405192835260208301526040820152f35b50335f9081526005602052604090205460ff16610095565b5f80fd5b346100d4575f3660031901126100d4575f546040516001600160a01b039091168152602090f35b346100d45760203660031901126100d4576004356001600160a01b038116908190036100d45761013960018060a01b035f5416331461066e565b805f52600560205260ff60405f2054161561018e576020817f1b9b72fde9da721e70e6aca3b0cf4cbe73e82765ef1f280157740376531bfdd8925f526005825260405f2060ff198154169055604051908152a1005b60405162461bcd60e51b8152602060048201526012602482015271141c9bdd9a59195c881b9bdd08199bdd5b9960721b6044820152606490fd5b346100d45760203660031901126100d4576101ed60018060a01b035f5416331461066e565b600435600155005b346100d45760203660031901126100d4576001546004350361023d577f0a3c2c470ed60b3661c58daac42324a1aec25592b9f249e1042b5b923bf675796020604051338152a1005b60405162461bcd60e51b815260206004820152601560248201527424b73b30b634b21032b6b2b933b2b731bc902824a760591b6044820152606490fd5b346100d45760603660031901126100d457600435602435906044356102a960018060a01b035f5416331461066e565b60405191606083019083821067ffffffffffffffff83111761038c577f68bc20e52b10ffc43a05dfe035d47bc00f739dcc31815fa1585438ad5e475d2894856080809693866040839685988252838152866020820152015280600255836003558660045560405190604082526009604083015268416c6c65726769657360b81b60608301526020820152a16040519060408252600f60408301526e4d65646963616c20486973746f727960881b60608301526020820152a16040519060408252600b60408301526a4d656469636174696f6e7360a81b60608301526020820152a1005b634e487b7160e01b5f52604160045260245ffd5b346100d45760403660031901126100d45760043567ffffffffffffffff81116100d457366023820112156100d45780600401359067ffffffffffffffff821161038c57604051916103fb601f8201601f19166020018461064c565b808352602083019136602483830101116100d457815f926024602093018537840101525f546001600160a01b0316331480156105b7575b61043b906106c6565b604051602081019061046560208286518087875e81015f838201520301601f19810183528261064c565b519020604051602081019068416c6c65726769657360b81b82526009815261048e60298261064c565b519020036104aa57505060206002545b60405190602435148152f35b60405160208101906104d460208286518087875e81015f838201520301601f19810183528261064c565b51902060405160208101906d4d65646963616c486973746f727960901b8252600e8152610502602e8261064c565b51902003610516575050602060035461049e565b61053f6020604051809382820195518091875e81015f838201520301601f19810183528261064c565b51902060405160208101906a4d656469636174696f6e7360a81b8252600b815261056a602b8261064c565b5190200361057c57602060045461049e565b60405162461bcd60e51b8152602060048201526013602482015272496e76616c6964207265636f7264207479706560681b6044820152606490fd5b50335f9081526005602052604090205460ff16610432565b346100d45760203660031901126100d4576004356001600160a01b038116908190036100d45760207fdeb5c31899474fe8c086c95ff9344480d19365676a6a1d22d37bb8e3e7c0ef189161062d60018060a01b035f5416331461066e565b805f526005825260405f20600160ff19825416179055604051908152a1005b90601f8019910116810190811067ffffffffffffffff82111761038c57604052565b1561067557565b60405162461bcd60e51b8152602060048201526024808201527f4f6e6c792070617469656e742063616e20706572666f726d20746869732061636044820152633a34b7b760e11b6064820152608490fd5b156106cd57565b60405162461bcd60e51b8152602060048201526013602482015272556e617574686f72697a65642061636365737360681b6044820152606490fdfea264697066735822122022e4a8d0312e627734e0bdcb56a8e41034cefc249c2162399b8beb79819a106264736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 CALLVALUE PUSH1 0x5F JUMPI PUSH1 0x1F PUSH2 0x7B6 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH1 0x63 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH1 0x5F JUMPI MLOAD PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH1 0x1 SSTORE PUSH1 0x40 MLOAD PUSH2 0x73E SWAP1 DUP2 PUSH2 0x78 DUP3 CODECOPY RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x11 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAE5E739 EQ PUSH2 0x5CF JUMPI DUP1 PUSH4 0x122A183A EQ PUSH2 0x3A0 JUMPI DUP1 PUSH4 0x283D98AF EQ PUSH2 0x27A JUMPI DUP1 PUSH4 0x36677F34 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x6823B4EA EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0x85E68531 EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xD8 JUMPI PUSH4 0xF18AD6FB EQ PUSH2 0x71 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xD4 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD4 JUMPI PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO PUSH2 0xBC JUMPI JUMPDEST PUSH2 0x9E SWAP1 PUSH2 0x6C6 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD SWAP1 PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x95 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xD4 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD4 JUMPI PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0xD4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD4 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0xD4 JUMPI PUSH2 0x139 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH0 SLOAD AND CALLER EQ PUSH2 0x66E JUMP JUMPDEST DUP1 PUSH0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND ISZERO PUSH2 0x18E JUMPI PUSH1 0x20 DUP2 PUSH32 0x1B9B72FDE9DA721E70E6ACA3B0CF4CBE73E82765EF1F280157740376531BFDD8 SWAP3 PUSH0 MSTORE PUSH1 0x5 DUP3 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x141C9BDD9A59195C881B9BDD08199BDD5B99 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0xD4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD4 JUMPI PUSH2 0x1ED PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH0 SLOAD AND CALLER EQ PUSH2 0x66E JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x1 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0xD4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD4 JUMPI PUSH1 0x1 SLOAD PUSH1 0x4 CALLDATALOAD SUB PUSH2 0x23D JUMPI PUSH32 0xA3C2C470ED60B3661C58DAAC42324A1AEC25592B9F249E1042B5B923BF67579 PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x24B73B30B634B21032B6B2B933B2B731BC902824A7 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0xD4 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD4 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x44 CALLDATALOAD PUSH2 0x2A9 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH0 SLOAD AND CALLER EQ PUSH2 0x66E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 PUSH1 0x60 DUP4 ADD SWAP1 DUP4 DUP3 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT OR PUSH2 0x38C JUMPI PUSH32 0x68BC20E52B10FFC43A05DFE035D47BC00F739DCC31815FA1585438AD5E475D28 SWAP5 DUP6 PUSH1 0x80 DUP1 SWAP7 SWAP4 DUP7 PUSH1 0x40 DUP4 SWAP7 DUP6 SWAP9 DUP3 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE DUP1 PUSH1 0x2 SSTORE DUP4 PUSH1 0x3 SSTORE DUP7 PUSH1 0x4 SSTORE PUSH1 0x40 MLOAD SWAP1 PUSH1 0x40 DUP3 MSTORE PUSH1 0x9 PUSH1 0x40 DUP4 ADD MSTORE PUSH9 0x416C6C657267696573 PUSH1 0xB8 SHL PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 PUSH1 0x40 MLOAD SWAP1 PUSH1 0x40 DUP3 MSTORE PUSH1 0xF PUSH1 0x40 DUP4 ADD MSTORE PUSH15 0x4D65646963616C20486973746F7279 PUSH1 0x88 SHL PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 PUSH1 0x40 MLOAD SWAP1 PUSH1 0x40 DUP3 MSTORE PUSH1 0xB PUSH1 0x40 DUP4 ADD MSTORE PUSH11 0x4D656469636174696F6E73 PUSH1 0xA8 SHL PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0xD4 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD4 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xD4 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0xD4 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x38C JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x3FB PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP5 PUSH2 0x64C JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 CALLDATASIZE PUSH1 0x24 DUP4 DUP4 ADD ADD GT PUSH2 0xD4 JUMPI DUP2 PUSH0 SWAP3 PUSH1 0x24 PUSH1 0x20 SWAP4 ADD DUP6 CALLDATACOPY DUP5 ADD ADD MSTORE PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO PUSH2 0x5B7 JUMPI JUMPDEST PUSH2 0x43B SWAP1 PUSH2 0x6C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x465 PUSH1 0x20 DUP3 DUP7 MLOAD DUP1 DUP8 DUP8 MCOPY DUP2 ADD PUSH0 DUP4 DUP3 ADD MSTORE SUB ADD PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x64C JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 PUSH9 0x416C6C657267696573 PUSH1 0xB8 SHL DUP3 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH2 0x48E PUSH1 0x29 DUP3 PUSH2 0x64C JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SUB PUSH2 0x4AA JUMPI POP POP PUSH1 0x20 PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x24 CALLDATALOAD EQ DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x4D4 PUSH1 0x20 DUP3 DUP7 MLOAD DUP1 DUP8 DUP8 MCOPY DUP2 ADD PUSH0 DUP4 DUP3 ADD MSTORE SUB ADD PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x64C JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 PUSH14 0x4D65646963616C486973746F7279 PUSH1 0x90 SHL DUP3 MSTORE PUSH1 0xE DUP2 MSTORE PUSH2 0x502 PUSH1 0x2E DUP3 PUSH2 0x64C JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SUB PUSH2 0x516 JUMPI POP POP PUSH1 0x20 PUSH1 0x3 SLOAD PUSH2 0x49E JUMP JUMPDEST PUSH2 0x53F PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 SWAP4 DUP3 DUP3 ADD SWAP6 MLOAD DUP1 SWAP2 DUP8 MCOPY DUP2 ADD PUSH0 DUP4 DUP3 ADD MSTORE SUB ADD PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x64C JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 PUSH11 0x4D656469636174696F6E73 PUSH1 0xA8 SHL DUP3 MSTORE PUSH1 0xB DUP2 MSTORE PUSH2 0x56A PUSH1 0x2B DUP3 PUSH2 0x64C JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SUB PUSH2 0x57C JUMPI PUSH1 0x20 PUSH1 0x4 SLOAD PUSH2 0x49E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x496E76616C6964207265636F72642074797065 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x432 JUMP JUMPDEST CALLVALUE PUSH2 0xD4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD4 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0xD4 JUMPI PUSH1 0x20 PUSH32 0xDEB5C31899474FE8C086C95FF9344480D19365676A6A1D22D37BB8E3E7C0EF18 SWAP2 PUSH2 0x62D PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH0 SLOAD AND CALLER EQ PUSH2 0x66E JUMP JUMPDEST DUP1 PUSH0 MSTORE PUSH1 0x5 DUP3 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 STOP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x38C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST ISZERO PUSH2 0x675 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C792070617469656E742063616E20706572666F726D2074686973206163 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x3A34B7B7 PUSH1 0xE1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x6CD JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x556E617574686F72697A656420616363657373 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 0xE4 0xA8 0xD0 BALANCE 0x2E PUSH3 0x7734E0 0xBD 0xCB JUMP 0xA8 0xE4 LT CALLVALUE 0xCE 0xFC 0x24 SWAP13 0x21 PUSH3 0x399B8B 0xEB PUSH26 0x819A106264736F6C634300081A00330000000000000000000000 ",
							"sourceMap": "60:3063:0:-:0;;;;;;;;;;;;;-1:-1:-1;;60:3063:0;;;;-1:-1:-1;;;;;60:3063:0;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;60:3063:0;;-1:-1:-1;;;;;;60:3063:0;949:10;60:3063;;;;;;;;;;;;;;;-1:-1:-1;60:3063:0;;;;;;-1:-1:-1;60:3063:0;;;;;-1:-1:-1;60:3063:0"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"finalize_allocation": {
									"entryPoint": 1612,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"require_helper_stringliteral_8a00": {
									"entryPoint": 1646,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"require_helper_stringliteral_b89e": {
									"entryPoint": 1734,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361015610011575f80fd5b5f3560e01c80630ae5e739146105cf578063122a183a146103a0578063283d98af1461027a57806336677f34146101f55780636823b4ea146101c857806385e68531146100ff5780638da5cb5b146100d85763f18ad6fb14610071575f80fd5b346100d4575f3660031901126100d4575f546001600160a01b0316331480156100bc575b61009e906106c6565b60606002546003546004549060405192835260208301526040820152f35b50335f9081526005602052604090205460ff16610095565b5f80fd5b346100d4575f3660031901126100d4575f546040516001600160a01b039091168152602090f35b346100d45760203660031901126100d4576004356001600160a01b038116908190036100d45761013960018060a01b035f5416331461066e565b805f52600560205260ff60405f2054161561018e576020817f1b9b72fde9da721e70e6aca3b0cf4cbe73e82765ef1f280157740376531bfdd8925f526005825260405f2060ff198154169055604051908152a1005b60405162461bcd60e51b8152602060048201526012602482015271141c9bdd9a59195c881b9bdd08199bdd5b9960721b6044820152606490fd5b346100d45760203660031901126100d4576101ed60018060a01b035f5416331461066e565b600435600155005b346100d45760203660031901126100d4576001546004350361023d577f0a3c2c470ed60b3661c58daac42324a1aec25592b9f249e1042b5b923bf675796020604051338152a1005b60405162461bcd60e51b815260206004820152601560248201527424b73b30b634b21032b6b2b933b2b731bc902824a760591b6044820152606490fd5b346100d45760603660031901126100d457600435602435906044356102a960018060a01b035f5416331461066e565b60405191606083019083821067ffffffffffffffff83111761038c577f68bc20e52b10ffc43a05dfe035d47bc00f739dcc31815fa1585438ad5e475d2894856080809693866040839685988252838152866020820152015280600255836003558660045560405190604082526009604083015268416c6c65726769657360b81b60608301526020820152a16040519060408252600f60408301526e4d65646963616c20486973746f727960881b60608301526020820152a16040519060408252600b60408301526a4d656469636174696f6e7360a81b60608301526020820152a1005b634e487b7160e01b5f52604160045260245ffd5b346100d45760403660031901126100d45760043567ffffffffffffffff81116100d457366023820112156100d45780600401359067ffffffffffffffff821161038c57604051916103fb601f8201601f19166020018461064c565b808352602083019136602483830101116100d457815f926024602093018537840101525f546001600160a01b0316331480156105b7575b61043b906106c6565b604051602081019061046560208286518087875e81015f838201520301601f19810183528261064c565b519020604051602081019068416c6c65726769657360b81b82526009815261048e60298261064c565b519020036104aa57505060206002545b60405190602435148152f35b60405160208101906104d460208286518087875e81015f838201520301601f19810183528261064c565b51902060405160208101906d4d65646963616c486973746f727960901b8252600e8152610502602e8261064c565b51902003610516575050602060035461049e565b61053f6020604051809382820195518091875e81015f838201520301601f19810183528261064c565b51902060405160208101906a4d656469636174696f6e7360a81b8252600b815261056a602b8261064c565b5190200361057c57602060045461049e565b60405162461bcd60e51b8152602060048201526013602482015272496e76616c6964207265636f7264207479706560681b6044820152606490fd5b50335f9081526005602052604090205460ff16610432565b346100d45760203660031901126100d4576004356001600160a01b038116908190036100d45760207fdeb5c31899474fe8c086c95ff9344480d19365676a6a1d22d37bb8e3e7c0ef189161062d60018060a01b035f5416331461066e565b805f526005825260405f20600160ff19825416179055604051908152a1005b90601f8019910116810190811067ffffffffffffffff82111761038c57604052565b1561067557565b60405162461bcd60e51b8152602060048201526024808201527f4f6e6c792070617469656e742063616e20706572666f726d20746869732061636044820152633a34b7b760e11b6064820152608490fd5b156106cd57565b60405162461bcd60e51b8152602060048201526013602482015272556e617574686f72697a65642061636365737360681b6044820152606490fdfea264697066735822122022e4a8d0312e627734e0bdcb56a8e41034cefc249c2162399b8beb79819a106264736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x11 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAE5E739 EQ PUSH2 0x5CF JUMPI DUP1 PUSH4 0x122A183A EQ PUSH2 0x3A0 JUMPI DUP1 PUSH4 0x283D98AF EQ PUSH2 0x27A JUMPI DUP1 PUSH4 0x36677F34 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x6823B4EA EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0x85E68531 EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xD8 JUMPI PUSH4 0xF18AD6FB EQ PUSH2 0x71 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xD4 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD4 JUMPI PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO PUSH2 0xBC JUMPI JUMPDEST PUSH2 0x9E SWAP1 PUSH2 0x6C6 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD SWAP1 PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x95 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xD4 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD4 JUMPI PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0xD4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD4 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0xD4 JUMPI PUSH2 0x139 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH0 SLOAD AND CALLER EQ PUSH2 0x66E JUMP JUMPDEST DUP1 PUSH0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND ISZERO PUSH2 0x18E JUMPI PUSH1 0x20 DUP2 PUSH32 0x1B9B72FDE9DA721E70E6ACA3B0CF4CBE73E82765EF1F280157740376531BFDD8 SWAP3 PUSH0 MSTORE PUSH1 0x5 DUP3 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x141C9BDD9A59195C881B9BDD08199BDD5B99 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0xD4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD4 JUMPI PUSH2 0x1ED PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH0 SLOAD AND CALLER EQ PUSH2 0x66E JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x1 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0xD4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD4 JUMPI PUSH1 0x1 SLOAD PUSH1 0x4 CALLDATALOAD SUB PUSH2 0x23D JUMPI PUSH32 0xA3C2C470ED60B3661C58DAAC42324A1AEC25592B9F249E1042B5B923BF67579 PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x24B73B30B634B21032B6B2B933B2B731BC902824A7 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0xD4 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD4 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x44 CALLDATALOAD PUSH2 0x2A9 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH0 SLOAD AND CALLER EQ PUSH2 0x66E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 PUSH1 0x60 DUP4 ADD SWAP1 DUP4 DUP3 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT OR PUSH2 0x38C JUMPI PUSH32 0x68BC20E52B10FFC43A05DFE035D47BC00F739DCC31815FA1585438AD5E475D28 SWAP5 DUP6 PUSH1 0x80 DUP1 SWAP7 SWAP4 DUP7 PUSH1 0x40 DUP4 SWAP7 DUP6 SWAP9 DUP3 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE DUP1 PUSH1 0x2 SSTORE DUP4 PUSH1 0x3 SSTORE DUP7 PUSH1 0x4 SSTORE PUSH1 0x40 MLOAD SWAP1 PUSH1 0x40 DUP3 MSTORE PUSH1 0x9 PUSH1 0x40 DUP4 ADD MSTORE PUSH9 0x416C6C657267696573 PUSH1 0xB8 SHL PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 PUSH1 0x40 MLOAD SWAP1 PUSH1 0x40 DUP3 MSTORE PUSH1 0xF PUSH1 0x40 DUP4 ADD MSTORE PUSH15 0x4D65646963616C20486973746F7279 PUSH1 0x88 SHL PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 PUSH1 0x40 MLOAD SWAP1 PUSH1 0x40 DUP3 MSTORE PUSH1 0xB PUSH1 0x40 DUP4 ADD MSTORE PUSH11 0x4D656469636174696F6E73 PUSH1 0xA8 SHL PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0xD4 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD4 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xD4 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0xD4 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x38C JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x3FB PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP5 PUSH2 0x64C JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 CALLDATASIZE PUSH1 0x24 DUP4 DUP4 ADD ADD GT PUSH2 0xD4 JUMPI DUP2 PUSH0 SWAP3 PUSH1 0x24 PUSH1 0x20 SWAP4 ADD DUP6 CALLDATACOPY DUP5 ADD ADD MSTORE PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO PUSH2 0x5B7 JUMPI JUMPDEST PUSH2 0x43B SWAP1 PUSH2 0x6C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x465 PUSH1 0x20 DUP3 DUP7 MLOAD DUP1 DUP8 DUP8 MCOPY DUP2 ADD PUSH0 DUP4 DUP3 ADD MSTORE SUB ADD PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x64C JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 PUSH9 0x416C6C657267696573 PUSH1 0xB8 SHL DUP3 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH2 0x48E PUSH1 0x29 DUP3 PUSH2 0x64C JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SUB PUSH2 0x4AA JUMPI POP POP PUSH1 0x20 PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x24 CALLDATALOAD EQ DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x4D4 PUSH1 0x20 DUP3 DUP7 MLOAD DUP1 DUP8 DUP8 MCOPY DUP2 ADD PUSH0 DUP4 DUP3 ADD MSTORE SUB ADD PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x64C JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 PUSH14 0x4D65646963616C486973746F7279 PUSH1 0x90 SHL DUP3 MSTORE PUSH1 0xE DUP2 MSTORE PUSH2 0x502 PUSH1 0x2E DUP3 PUSH2 0x64C JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SUB PUSH2 0x516 JUMPI POP POP PUSH1 0x20 PUSH1 0x3 SLOAD PUSH2 0x49E JUMP JUMPDEST PUSH2 0x53F PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 SWAP4 DUP3 DUP3 ADD SWAP6 MLOAD DUP1 SWAP2 DUP8 MCOPY DUP2 ADD PUSH0 DUP4 DUP3 ADD MSTORE SUB ADD PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x64C JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 PUSH11 0x4D656469636174696F6E73 PUSH1 0xA8 SHL DUP3 MSTORE PUSH1 0xB DUP2 MSTORE PUSH2 0x56A PUSH1 0x2B DUP3 PUSH2 0x64C JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SUB PUSH2 0x57C JUMPI PUSH1 0x20 PUSH1 0x4 SLOAD PUSH2 0x49E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x496E76616C6964207265636F72642074797065 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x432 JUMP JUMPDEST CALLVALUE PUSH2 0xD4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD4 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0xD4 JUMPI PUSH1 0x20 PUSH32 0xDEB5C31899474FE8C086C95FF9344480D19365676A6A1D22D37BB8E3E7C0EF18 SWAP2 PUSH2 0x62D PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH0 SLOAD AND CALLER EQ PUSH2 0x66E JUMP JUMPDEST DUP1 PUSH0 MSTORE PUSH1 0x5 DUP3 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 STOP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x38C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST ISZERO PUSH2 0x675 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C792070617469656E742063616E20706572666F726D2074686973206163 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x3A34B7B7 PUSH1 0xE1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x6CD JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x556E617574686F72697A656420616363657373 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 0xE4 0xA8 0xD0 BALANCE 0x2E PUSH3 0x7734E0 0xBD 0xCB JUMP 0xA8 0xE4 LT CALLVALUE 0xCE 0xFC 0x24 SWAP13 0x21 PUSH3 0x399B8B 0xEB PUSH26 0x819A106264736F6C634300081A00330000000000000000000000 ",
							"sourceMap": "60:3063:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;60:3063:0;;;;;;-1:-1:-1;;;;;60:3063:0;785:10;:19;:54;;;;60:3063;777:86;;;:::i;:::-;60:3063;1946:6;60:3063;1968:25;60:3063;;;;;;;;;;;;;;;;;;785:54;-1:-1:-1;785:10:0;60:3063;;;;808:19;60:3063;;;;;;;;785:54;;60:3063;;;;;;;;;;-1:-1:-1;;60:3063:0;;;;;;;;-1:-1:-1;;;;;60:3063:0;;;;;;;;;;;;;;-1:-1:-1;;60:3063:0;;;;;;-1:-1:-1;;;;;60:3063:0;;;;;;;;644:68;60:3063;;;;;;;;652:10;:19;644:68;:::i;:::-;60:3063;;;1268:19;60:3063;;;;;;;;;;;;;1386:24;60:3063;;;1268:19;60:3063;;;;;;;;;;;;;;;;;1386:24;60:3063;;;;-1:-1:-1;;;60:3063:0;;;;;;;;;;;;-1:-1:-1;;;60:3063:0;;;;;;;;;;;;;-1:-1:-1;;60:3063:0;;;;644:68;60:3063;;;;;;;;652:10;:19;644:68;:::i;:::-;60:3063;;;;;;;;;;;-1:-1:-1;;60:3063:0;;;;;;;;3004:35;60:3063;;3081:31;60:3063;;;3101:10;60:3063;;3081:31;60:3063;;;;-1:-1:-1;;;60:3063:0;;;;;;;;;;;;-1:-1:-1;;;60:3063:0;;;;;;;;;;;;;-1:-1:-1;;60:3063:0;;;;;;;;;;;644:68;60:3063;;;;;;;;652:10;:19;644:68;:::i;:::-;60:3063;;;;;;;;;;;;;;;;1652:42;60:3063;;1652:42;60:3063;;;;;;;;;;;;;;1568:68;60:3063;1568:68;;60:3063;1568:68;60:3063;;1559:77;60:3063;;;;;;;;;;;;;;;;;;-1:-1:-1;;;60:3063:0;;;;;;;;1652:42;60:3063;;;;;;;;;;;-1:-1:-1;;;60:3063:0;;;;;;;;1710:53;60:3063;;;;;;;;;;;-1:-1:-1;;;60:3063:0;;;;;;;;1779:46;60:3063;;;;;;;;;;;;;;;;;;;-1:-1:-1;;60:3063:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;60:3063:0;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;60:3063:0;785:10;:19;:54;;;;60:3063;777:86;;;:::i;:::-;60:3063;;;2212:28;;60:3063;2212:28;60:3063;;;;;;;;;;;;;;;2212:28;;60:3063;;2212:28;;;;;;:::i;:::-;60:3063;2202:39;;60:3063;;;2255:29;;60:3063;-1:-1:-1;;;60:3063:0;;2255:29;;;;;;;:::i;:::-;60:3063;2245:40;;2202:83;2245:40;;60:3063;;;2315:6;60:3063;2198:535;60:3063;;;;;2760:26;60:3063;;;2198:535;60:3063;;;2367:28;;60:3063;2367:28;60:3063;;;;;;;;;;;;;;;2367:28;;60:3063;;2367:28;;;;;;:::i;:::-;60:3063;2357:39;;60:3063;;;2410:34;;60:3063;-1:-1:-1;;;60:3063:0;;2410:34;;;;;;;:::i;:::-;60:3063;2400:45;;2357:88;2400:45;;60:3063;;;2475:25;60:3063;2198:535;;2353:380;2532:28;60:3063;;;2532:28;;;;;60:3063;;;;;;;;;;;;;2532:28;;60:3063;;2532:28;;;;;;:::i;:::-;60:3063;2522:39;;60:3063;;;2575:31;;60:3063;-1:-1:-1;;;60:3063:0;;2575:31;;;;;;;:::i;:::-;60:3063;2565:42;;2522:85;2565:42;;60:3063;;;2198:535;;2518:215;60:3063;;-1:-1:-1;;;2692:29:0;;60:3063;;2692:29;;60:3063;;;;;;-1:-1:-1;;;60:3063:0;;;;2692:29;;;785:54;-1:-1:-1;785:10:0;60:3063;;;;808:19;60:3063;;;;;;;;785:54;;60:3063;;;;;;-1:-1:-1;;60:3063:0;;;;;;-1:-1:-1;;;;;60:3063:0;;;;;;;;;1147:24;60:3063;644:68;60:3063;;;;;;;;652:10;:19;644:68;:::i;:::-;60:3063;;;1094:19;60:3063;;;;;1127:4;60:3063;;;;;;;;;;;;;1147:24;60:3063;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;60:3063:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;60:3063:0;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;60:3063:0;;;;;;;;;;;;-1:-1:-1;;;60:3063:0;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "370800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"emergencyAccess(bytes32)": "3345",
								"getRecord()": "11016",
								"grantAccess(address)": "27660",
								"owner()": "2403",
								"revokeAccess(address)": "29950",
								"setEmergencyPin(bytes32)": "24484",
								"updateRecord(bytes32,bytes32,bytes32)": "74344",
								"verifyRecord(string,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 60,
									"end": 3123,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 60,
									"end": 3123,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 3123,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 60,
									"end": 3123,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 60,
									"end": 3123,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 60,
									"end": 3123,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 3123,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 3123,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 60,
									"end": 3123,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 3123,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 60,
									"end": 3123,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 60,
									"end": 3123,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 60,
									"end": 3123,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 60,
									"end": 3123,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 60,
									"end": 3123,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 60,
									"end": 3123,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 60,
									"end": 3123,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 60,
									"end": 3123,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 60,
									"end": 3123,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 60,
									"end": 3123,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 60,
									"end": 3123,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 60,
									"end": 3123,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 60,
									"end": 3123,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 60,
									"end": 3123,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 60,
									"end": 3123,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 60,
									"end": 3123,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 3123,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 60,
									"end": 3123,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 60,
									"end": 3123,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 60,
									"end": 3123,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 60,
									"end": 3123,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 60,
									"end": 3123,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 3123,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 60,
									"end": 3123,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 60,
									"end": 3123,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 60,
									"end": 3123,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 60,
									"end": 3123,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 60,
									"end": 3123,
									"name": "SLT",
									"source": 0
								},
								{
									"begin": 60,
									"end": 3123,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 60,
									"end": 3123,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 60,
									"end": 3123,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 3123,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 3123,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 60,
									"end": 3123,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 949,
									"end": 959,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 60,
									"end": 3123,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 60,
									"end": 3123,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 3123,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 3123,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 60,
									"end": 3123,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 3123,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 60,
									"end": 3123,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 60,
									"end": 3123,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 3123,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 3123,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 60,
									"end": 3123,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 3123,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 60,
									"end": 3123,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 60,
									"end": 3123,
									"name": "RETURN",
									"source": 0
								},
								{
									"begin": 60,
									"end": 3123,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 60,
									"end": 3123,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 3123,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 3123,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 60,
									"end": 3123,
									"name": "tag",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 60,
									"end": 3123,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 60,
									"end": 3123,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B71"
								},
								{
									"begin": 60,
									"end": 3123,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 60,
									"end": 3123,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 3123,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 3123,
									"name": "PUSH",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 60,
									"end": 3123,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 60,
									"end": 3123,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 3123,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 3123,
									"name": "REVERT",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122022e4a8d0312e627734e0bdcb56a8e41034cefc249c2162399b8beb79819a106264736f6c634300081a0033",
									".code": [
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "AE5E739"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "122A183A"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "283D98AF"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "36677F34"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "6823B4EA"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "85E68531"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "F18AD6FB"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 785,
											"end": 795,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 785,
											"end": 804,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 785,
											"end": 839,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 785,
											"end": 839,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 785,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 785,
											"end": 839,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 777,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 777,
											"end": 863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 777,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 777,
											"end": 863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 777,
											"end": 863,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 777,
											"end": 863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1946,
											"end": 1952,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1968,
											"end": 1993,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 785,
											"end": 839,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 785,
											"end": 839,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 785,
											"end": 795,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 808,
											"end": 827,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 785,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 785,
											"end": 839,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 644,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 652,
											"end": 662,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 652,
											"end": 671,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 644,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 644,
											"end": 712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 644,
											"end": 712,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 644,
											"end": 712,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1268,
											"end": 1287,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1386,
											"end": 1410,
											"name": "PUSH",
											"source": 0,
											"value": "1B9B72FDE9DA721E70E6ACA3B0CF4CBE73E82765EF1F280157740376531BFDD8"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1268,
											"end": 1287,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1386,
											"end": 1410,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "141C9BDD9A59195C881B9BDD08199BDD5B99"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 644,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 652,
											"end": 662,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 652,
											"end": 671,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 644,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 644,
											"end": 712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 644,
											"end": 712,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 644,
											"end": 712,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3039,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3081,
											"end": 3112,
											"name": "PUSH",
											"source": 0,
											"value": "A3C2C470ED60B3661C58DAAC42324A1AEC25592B9F249E1042B5B923BF67579"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3101,
											"end": 3111,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3081,
											"end": 3112,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "24B73B30B634B21032B6B2B933B2B731BC902824A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "59"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 644,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 652,
											"end": 662,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 652,
											"end": 671,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 644,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 644,
											"end": 712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 644,
											"end": 712,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 644,
											"end": 712,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1652,
											"end": 1694,
											"name": "PUSH",
											"source": 0,
											"value": "68BC20E52B10FFC43A05DFE035D47BC00F739DCC31815FA1585438AD5E475D28"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1652,
											"end": 1694,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SWAP9",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1568,
											"end": 1636,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1568,
											"end": 1636,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1568,
											"end": 1636,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1568,
											"end": 1636,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1559,
											"end": 1636,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "416C6C657267696573"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1652,
											"end": 1694,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4D65646963616C20486973746F7279"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "88"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1763,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4D656469636174696F6E73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1779,
											"end": 1825,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B71"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 3123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 785,
											"end": 795,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 785,
											"end": 804,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 785,
											"end": 839,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 785,
											"end": 839,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 785,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 785,
											"end": 839,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 777,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 777,
											"end": 863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 777,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 777,
											"end": 863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 777,
											"end": 863,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 777,
											"end": 863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MCOPY",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2212,
											"end": 2240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2202,
											"end": 2241,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2202,
											"end": 2241,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2255,
											"end": 2284,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2255,
											"end": 2284,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "416C6C657267696573"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2255,
											"end": 2284,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2255,
											"end": 2284,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2255,
											"end": 2284,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2255,
											"end": 2284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2255,
											"end": 2284,
											"name": "PUSH",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2255,
											"end": 2284,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2255,
											"end": 2284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2255,
											"end": 2284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2255,
											"end": 2284,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2255,
											"end": 2284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2285,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2285,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2202,
											"end": 2285,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2245,
											"end": 2285,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2315,
											"end": 2321,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2198,
											"end": 2733,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2198,
											"end": 2733,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2786,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2198,
											"end": 2733,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2198,
											"end": 2733,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2367,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2395,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MCOPY",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2395,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2395,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2395,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2395,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2395,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2367,
											"end": 2395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2395,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2367,
											"end": 2395,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2396,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2396,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2410,
											"end": 2444,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2444,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4D65646963616C486973746F7279"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "90"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2444,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 2410,
											"end": 2444,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2444,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2410,
											"end": 2444,
											"name": "PUSH",
											"source": 0,
											"value": "2E"
										},
										{
											"begin": 2410,
											"end": 2444,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2410,
											"end": 2444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2444,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2410,
											"end": 2444,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2400,
											"end": 2445,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2400,
											"end": 2445,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2445,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2400,
											"end": 2445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2400,
											"end": 2445,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2475,
											"end": 2500,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2198,
											"end": 2733,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2198,
											"end": 2733,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2353,
											"end": 2733,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2353,
											"end": 2733,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2532,
											"end": 2560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2532,
											"end": 2560,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2532,
											"end": 2560,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2532,
											"end": 2560,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2532,
											"end": 2560,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2532,
											"end": 2560,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MCOPY",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2532,
											"end": 2560,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2532,
											"end": 2560,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2532,
											"end": 2560,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2532,
											"end": 2560,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2532,
											"end": 2560,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2532,
											"end": 2560,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2532,
											"end": 2560,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2532,
											"end": 2560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2532,
											"end": 2560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2532,
											"end": 2560,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2532,
											"end": 2560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2522,
											"end": 2561,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2522,
											"end": 2561,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2575,
											"end": 2606,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2575,
											"end": 2606,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4D656469636174696F6E73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2575,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 2575,
											"end": 2606,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2575,
											"end": 2606,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2575,
											"end": 2606,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2575,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "2B"
										},
										{
											"begin": 2575,
											"end": 2606,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2575,
											"end": 2606,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2575,
											"end": 2606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2575,
											"end": 2606,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2575,
											"end": 2606,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2607,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2522,
											"end": 2607,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2565,
											"end": 2607,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2198,
											"end": 2733,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2198,
											"end": 2733,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2733,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2518,
											"end": 2733,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2692,
											"end": 2721,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2692,
											"end": 2721,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2692,
											"end": 2721,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2692,
											"end": 2721,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C6964207265636F72642074797065"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2692,
											"end": 2721,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2692,
											"end": 2721,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2692,
											"end": 2721,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 785,
											"end": 839,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 785,
											"end": 839,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 785,
											"end": 795,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 808,
											"end": 827,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 785,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 785,
											"end": 839,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1147,
											"end": 1171,
											"name": "PUSH",
											"source": 0,
											"value": "DEB5C31899474FE8C086C95FF9344480D19365676A6A1D22D37BB8E3E7C0EF18"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 644,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 652,
											"end": 662,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 652,
											"end": 671,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 644,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 644,
											"end": 712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 644,
											"end": 712,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 644,
											"end": 712,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1113,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1131,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1147,
											"end": 1171,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "4F6E6C792070617469656E742063616E20706572666F726D2074686973206163"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A34B7B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "556E617574686F72697A656420616363657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 3123,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"jk.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"emergencyAccess(bytes32)": "36677f34",
							"getRecord()": "f18ad6fb",
							"grantAccess(address)": "0ae5e739",
							"owner()": "8da5cb5b",
							"revokeAccess(address)": "85e68531",
							"setEmergencyPin(bytes32)": "6823b4ea",
							"updateRecord(bytes32,bytes32,bytes32)": "283d98af",
							"verifyRecord(string,bytes32)": "122a183a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_emergencyPinHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"}],\"name\":\"AccessGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"}],\"name\":\"AccessRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"}],\"name\":\"EmergencyAccessUsed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"recordType\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"recordHash\",\"type\":\"bytes32\"}],\"name\":\"RecordUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"providedPinHash\",\"type\":\"bytes32\"}],\"name\":\"emergencyAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRecord\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_provider\",\"type\":\"address\"}],\"name\":\"grantAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_provider\",\"type\":\"address\"}],\"name\":\"revokeAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_newPinHash\",\"type\":\"bytes32\"}],\"name\":\"setEmergencyPin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_allergiesHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_medicalHistoryHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_medicationsHash\",\"type\":\"bytes32\"}],\"name\":\"updateRecord\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"recordType\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"providedHash\",\"type\":\"bytes32\"}],\"name\":\"verifyRecord\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"jk.sol\":\"jk\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"jk.sol\":{\"keccak256\":\"0x3a9f84904c9f168716bfae671d3f77bda2db6e50a57fc143edcc8d5762ee04d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c95164bb2e12d8be08f90b77229b6d9a6eca017361c3bbfd142870dd59d9b142\",\"dweb:/ipfs/QmedwVBEGNAXMageTJBM5ZDL74GKV9rtpKUNi5WLn7t77Z\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "jk.sol:jk",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 5,
								"contract": "jk.sol:jk",
								"label": "emergencyPinHash",
								"offset": 0,
								"slot": "1",
								"type": "t_bytes32"
							},
							{
								"astId": 15,
								"contract": "jk.sol:jk",
								"label": "record",
								"offset": 0,
								"slot": "2",
								"type": "t_struct(MedicalRecord)12_storage"
							},
							{
								"astId": 19,
								"contract": "jk.sol:jk",
								"label": "authorizedProviders",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_struct(MedicalRecord)12_storage": {
								"encoding": "inplace",
								"label": "struct jk.MedicalRecord",
								"members": [
									{
										"astId": 7,
										"contract": "jk.sol:jk",
										"label": "allergiesHash",
										"offset": 0,
										"slot": "0",
										"type": "t_bytes32"
									},
									{
										"astId": 9,
										"contract": "jk.sol:jk",
										"label": "medicalHistoryHash",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									},
									{
										"astId": 11,
										"contract": "jk.sol:jk",
										"label": "medicationsHash",
										"offset": 0,
										"slot": "2",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "96"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"jk.sol": {
				"ast": {
					"absolutePath": "jk.sol",
					"exportedSymbols": {
						"jk": [
							294
						]
					},
					"id": 295,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "jk",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 294,
							"linearizedBaseContracts": [
								294
							],
							"name": "jk",
							"nameLocation": "69:2:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 3,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "94:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 294,
									"src": "79:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "79:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 5,
									"mutability": "mutable",
									"name": "emergencyPinHash",
									"nameLocation": "122:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 294,
									"src": "106:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 4,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "106:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"canonicalName": "jk.MedicalRecord",
									"id": 12,
									"members": [
										{
											"constant": false,
											"id": 7,
											"mutability": "mutable",
											"name": "allergiesHash",
											"nameLocation": "191:13:0",
											"nodeType": "VariableDeclaration",
											"scope": 12,
											"src": "183:21:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 6,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "183:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 9,
											"mutability": "mutable",
											"name": "medicalHistoryHash",
											"nameLocation": "223:18:0",
											"nodeType": "VariableDeclaration",
											"scope": 12,
											"src": "215:26:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 8,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "215:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 11,
											"mutability": "mutable",
											"name": "medicationsHash",
											"nameLocation": "260:15:0",
											"nodeType": "VariableDeclaration",
											"scope": 12,
											"src": "252:23:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 10,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "252:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "MedicalRecord",
									"nameLocation": "158:13:0",
									"nodeType": "StructDefinition",
									"scope": 294,
									"src": "151:132:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 15,
									"mutability": "mutable",
									"name": "record",
									"nameLocation": "317:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 294,
									"src": "295:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_MedicalRecord_$12_storage",
										"typeString": "struct jk.MedicalRecord"
									},
									"typeName": {
										"id": 14,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 13,
											"name": "MedicalRecord",
											"nameLocations": [
												"295:13:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 12,
											"src": "295:13:0"
										},
										"referencedDeclaration": 12,
										"src": "295:13:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_MedicalRecord_$12_storage_ptr",
											"typeString": "struct jk.MedicalRecord"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 19,
									"mutability": "mutable",
									"name": "authorizedProviders",
									"nameLocation": "369:19:0",
									"nodeType": "VariableDeclaration",
									"scope": 294,
									"src": "336:52:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 18,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 16,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "344:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "336:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 17,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "355:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "68bc20e52b10ffc43a05dfe035d47bc00f739dcc31815fa1585438ad5e475d28",
									"id": 25,
									"name": "RecordUpdated",
									"nameLocation": "407:13:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"indexed": false,
												"mutability": "mutable",
												"name": "recordType",
												"nameLocation": "428:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "421:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 20,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "421:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"indexed": false,
												"mutability": "mutable",
												"name": "recordHash",
												"nameLocation": "448:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "440:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 22,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "440:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "420:39:0"
									},
									"src": "401:59:0"
								},
								{
									"anonymous": false,
									"eventSelector": "deb5c31899474fe8c086c95ff9344480d19365676a6a1d22d37bb8e3e7c0ef18",
									"id": 29,
									"name": "AccessGranted",
									"nameLocation": "472:13:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"indexed": false,
												"mutability": "mutable",
												"name": "provider",
												"nameLocation": "494:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "486:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "486:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "485:18:0"
									},
									"src": "466:38:0"
								},
								{
									"anonymous": false,
									"eventSelector": "1b9b72fde9da721e70e6aca3b0cf4cbe73e82765ef1f280157740376531bfdd8",
									"id": 33,
									"name": "AccessRevoked",
									"nameLocation": "516:13:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"indexed": false,
												"mutability": "mutable",
												"name": "provider",
												"nameLocation": "538:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "530:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 30,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "530:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "529:18:0"
									},
									"src": "510:38:0"
								},
								{
									"anonymous": false,
									"eventSelector": "0a3c2c470ed60b3661c58daac42324a1aec25592b9f249e1042b5b923bf67579",
									"id": 37,
									"name": "EmergencyAccessUsed",
									"nameLocation": "560:19:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"indexed": false,
												"mutability": "mutable",
												"name": "provider",
												"nameLocation": "588:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "580:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "579:18:0"
									},
									"src": "554:44:0"
								},
								{
									"body": {
										"id": 48,
										"nodeType": "Block",
										"src": "633:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 43,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 40,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "652:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "656:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "652:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 42,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "666:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "652:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c792070617469656e742063616e20706572666f726d207468697320616374696f6e",
															"id": 44,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "673:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8a006409fab88a8123843b0859f646f68b0e7cd659eb3cf6d7f397d08ca9a525",
																"typeString": "literal_string \"Only patient can perform this action\""
															},
															"value": "Only patient can perform this action"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8a006409fab88a8123843b0859f646f68b0e7cd659eb3cf6d7f397d08ca9a525",
																"typeString": "literal_string \"Only patient can perform this action\""
															}
														],
														"id": 39,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "644:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 45,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "644:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 46,
												"nodeType": "ExpressionStatement",
												"src": "644:68:0"
											},
											{
												"id": 47,
												"nodeType": "PlaceholderStatement",
												"src": "723:1:0"
											}
										]
									},
									"id": 49,
									"name": "onlyPatient",
									"nameLocation": "619:11:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "630:2:0"
									},
									"src": "610:122:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 65,
										"nodeType": "Block",
										"src": "766:117:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 60,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 55,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 52,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "785:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 53,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "789:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "785:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 54,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "799:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "785:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"baseExpression": {
																	"id": 56,
																	"name": "authorizedProviders",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 19,
																	"src": "808:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 59,
																"indexExpression": {
																	"expression": {
																		"id": 57,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "828:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 58,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "832:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "828:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "808:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "785:54:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e617574686f72697a656420616363657373",
															"id": 61,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "841:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b89edf027d3d1129b9f2c8dcd2ba89ffc6487f04ca050032214e13175a19a74a",
																"typeString": "literal_string \"Unauthorized access\""
															},
															"value": "Unauthorized access"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b89edf027d3d1129b9f2c8dcd2ba89ffc6487f04ca050032214e13175a19a74a",
																"typeString": "literal_string \"Unauthorized access\""
															}
														],
														"id": 51,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "777:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "777:86:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 63,
												"nodeType": "ExpressionStatement",
												"src": "777:86:0"
											},
											{
												"id": 64,
												"nodeType": "PlaceholderStatement",
												"src": "874:1:0"
											}
										]
									},
									"id": 66,
									"name": "onlyAuthorized",
									"nameLocation": "749:14:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "763:2:0"
									},
									"src": "740:143:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "930:84:0",
										"statements": [
											{
												"expression": {
													"id": 74,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 71,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "941:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 72,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "949:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 73,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "953:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "949:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "941:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 75,
												"nodeType": "ExpressionStatement",
												"src": "941:18:0"
											},
											{
												"expression": {
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 76,
														"name": "emergencyPinHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "970:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 77,
														"name": "_emergencyPinHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 68,
														"src": "989:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "970:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 79,
												"nodeType": "ExpressionStatement",
												"src": "970:36:0"
											}
										]
									},
									"id": 81,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "_emergencyPinHash",
												"nameLocation": "911:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "903:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 67,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "903:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "902:27:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "930:0:0"
									},
									"scope": 294,
									"src": "891:123:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 98,
										"nodeType": "Block",
										"src": "1083:96:0",
										"statements": [
											{
												"expression": {
													"id": 92,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 88,
															"name": "authorizedProviders",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 19,
															"src": "1094:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 90,
														"indexExpression": {
															"id": 89,
															"name": "_provider",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "1114:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1094:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 91,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1127:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1094:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 93,
												"nodeType": "ExpressionStatement",
												"src": "1094:37:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 95,
															"name": "_provider",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "1161:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 94,
														"name": "AccessGranted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "1147:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 96,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1147:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 97,
												"nodeType": "EmitStatement",
												"src": "1142:29:0"
											}
										]
									},
									"functionSelector": "0ae5e739",
									"id": 99,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 86,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 85,
												"name": "onlyPatient",
												"nameLocations": [
													"1071:11:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 49,
												"src": "1071:11:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1071:11:0"
										}
									],
									"name": "grantAccess",
									"nameLocation": "1031:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "_provider",
												"nameLocation": "1051:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "1043:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1042:19:0"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1083:0:0"
									},
									"scope": 294,
									"src": "1022:157:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "1249:169:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 107,
																"name": "authorizedProviders",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "1268:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 109,
															"indexExpression": {
																"id": 108,
																"name": "_provider",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "1288:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1268:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726f7669646572206e6f7420666f756e64",
															"id": 110,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1300:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bbc72d74f454e65719ffd5316f68ee2fce41f13e3d460a3252ee3cd0673fbbcc",
																"typeString": "literal_string \"Provider not found\""
															},
															"value": "Provider not found"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bbc72d74f454e65719ffd5316f68ee2fce41f13e3d460a3252ee3cd0673fbbcc",
																"typeString": "literal_string \"Provider not found\""
															}
														],
														"id": 106,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1260:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1260:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 112,
												"nodeType": "ExpressionStatement",
												"src": "1260:61:0"
											},
											{
												"expression": {
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 113,
															"name": "authorizedProviders",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 19,
															"src": "1332:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 115,
														"indexExpression": {
															"id": 114,
															"name": "_provider",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "1352:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1332:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 116,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1365:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1332:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 118,
												"nodeType": "ExpressionStatement",
												"src": "1332:38:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 120,
															"name": "_provider",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "1400:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 119,
														"name": "AccessRevoked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "1386:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1386:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 122,
												"nodeType": "EmitStatement",
												"src": "1381:29:0"
											}
										]
									},
									"functionSelector": "85e68531",
									"id": 124,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyPatient",
												"nameLocations": [
													"1237:11:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 49,
												"src": "1237:11:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1237:11:0"
										}
									],
									"name": "revokeAccess",
									"nameLocation": "1196:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "_provider",
												"nameLocation": "1217:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "1209:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1209:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1208:19:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1249:0:0"
									},
									"scope": 294,
									"src": "1187:231:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "1548:285:0",
										"statements": [
											{
												"expression": {
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 135,
														"name": "record",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "1559:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_MedicalRecord_$12_storage",
															"typeString": "struct jk.MedicalRecord storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 137,
																"name": "_allergiesHash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 126,
																"src": "1582:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 138,
																"name": "_medicalHistoryHash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 128,
																"src": "1598:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 139,
																"name": "_medicationsHash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 130,
																"src": "1619:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 136,
															"name": "MedicalRecord",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "1568:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_MedicalRecord_$12_storage_ptr_$",
																"typeString": "type(struct jk.MedicalRecord storage pointer)"
															}
														},
														"id": 140,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1568:68:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_MedicalRecord_$12_memory_ptr",
															"typeString": "struct jk.MedicalRecord memory"
														}
													},
													"src": "1559:77:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MedicalRecord_$12_storage",
														"typeString": "struct jk.MedicalRecord storage ref"
													}
												},
												"id": 142,
												"nodeType": "ExpressionStatement",
												"src": "1559:77:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"hexValue": "416c6c657267696573",
															"id": 144,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1666:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6cf49b1836fb5b83156b2f76e4e6e0c6a67d6cea8703f0c748ca96c86a2e13f1",
																"typeString": "literal_string \"Allergies\""
															},
															"value": "Allergies"
														},
														{
															"id": 145,
															"name": "_allergiesHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 126,
															"src": "1679:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_6cf49b1836fb5b83156b2f76e4e6e0c6a67d6cea8703f0c748ca96c86a2e13f1",
																"typeString": "literal_string \"Allergies\""
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 143,
														"name": "RecordUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "1652:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_bytes32_$returns$__$",
															"typeString": "function (string memory,bytes32)"
														}
													},
													"id": 146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1652:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 147,
												"nodeType": "EmitStatement",
												"src": "1647:47:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"hexValue": "4d65646963616c20486973746f7279",
															"id": 149,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1724:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc0a309bf571e5aaccdb0eb02300034c17a516e436c4df31d0a48d3c706c256f",
																"typeString": "literal_string \"Medical History\""
															},
															"value": "Medical History"
														},
														{
															"id": 150,
															"name": "_medicalHistoryHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 128,
															"src": "1743:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_cc0a309bf571e5aaccdb0eb02300034c17a516e436c4df31d0a48d3c706c256f",
																"typeString": "literal_string \"Medical History\""
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 148,
														"name": "RecordUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "1710:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_bytes32_$returns$__$",
															"typeString": "function (string memory,bytes32)"
														}
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1710:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 152,
												"nodeType": "EmitStatement",
												"src": "1705:58:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"hexValue": "4d656469636174696f6e73",
															"id": 154,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1793:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dfcfb7004c61f2d59465c96b6f4e566d418d621a8b38de3c720165ca75fad186",
																"typeString": "literal_string \"Medications\""
															},
															"value": "Medications"
														},
														{
															"id": 155,
															"name": "_medicationsHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 130,
															"src": "1808:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_dfcfb7004c61f2d59465c96b6f4e566d418d621a8b38de3c720165ca75fad186",
																"typeString": "literal_string \"Medications\""
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 153,
														"name": "RecordUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "1779:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_bytes32_$returns$__$",
															"typeString": "function (string memory,bytes32)"
														}
													},
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1779:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 157,
												"nodeType": "EmitStatement",
												"src": "1774:51:0"
											}
										]
									},
									"functionSelector": "283d98af",
									"id": 159,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 133,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 132,
												"name": "onlyPatient",
												"nameLocations": [
													"1536:11:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 49,
												"src": "1536:11:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1536:11:0"
										}
									],
									"name": "updateRecord",
									"nameLocation": "1435:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "_allergiesHash",
												"nameLocation": "1456:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "1448:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 125,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1448:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "_medicalHistoryHash",
												"nameLocation": "1480:19:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "1472:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 127,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1472:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "_medicationsHash",
												"nameLocation": "1509:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "1501:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 129,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1501:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1447:79:0"
									},
									"returnParameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1548:0:0"
									},
									"scope": 294,
									"src": "1426:407:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 178,
										"nodeType": "Block",
										"src": "1927:99:0",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"expression": {
																"id": 170,
																"name": "record",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "1946:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MedicalRecord_$12_storage",
																	"typeString": "struct jk.MedicalRecord storage ref"
																}
															},
															"id": 171,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1953:13:0",
															"memberName": "allergiesHash",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 7,
															"src": "1946:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 172,
																"name": "record",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "1968:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MedicalRecord_$12_storage",
																	"typeString": "struct jk.MedicalRecord storage ref"
																}
															},
															"id": 173,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1975:18:0",
															"memberName": "medicalHistoryHash",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 9,
															"src": "1968:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 174,
																"name": "record",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "1995:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MedicalRecord_$12_storage",
																	"typeString": "struct jk.MedicalRecord storage ref"
																}
															},
															"id": 175,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2002:15:0",
															"memberName": "medicationsHash",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 11,
															"src": "1995:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"id": 176,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1945:73:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$_t_bytes32_$",
														"typeString": "tuple(bytes32,bytes32,bytes32)"
													}
												},
												"functionReturnParameters": 169,
												"id": 177,
												"nodeType": "Return",
												"src": "1938:80:0"
											}
										]
									},
									"functionSelector": "f18ad6fb",
									"id": 179,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 162,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 161,
												"name": "onlyAuthorized",
												"nameLocations": [
													"1876:14:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 66,
												"src": "1876:14:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1876:14:0"
										}
									],
									"name": "getRecord",
									"nameLocation": "1850:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1859:2:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "1900:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 163,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1900:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "1909:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 165,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1909:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "1918:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 167,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1918:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1899:27:0"
									},
									"scope": 294,
									"src": "1841:185:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 262,
										"nodeType": "Block",
										"src": "2148:646:0",
										"statements": [
											{
												"assignments": [
													191
												],
												"declarations": [
													{
														"constant": false,
														"id": 191,
														"mutability": "mutable",
														"name": "storedHash",
														"nameLocation": "2167:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 262,
														"src": "2159:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 190,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2159:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 192,
												"nodeType": "VariableDeclarationStatement",
												"src": "2159:18:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 196,
																		"name": "recordType",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 181,
																		"src": "2229:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 194,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "2212:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 195,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "2216:12:0",
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "2212:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 197,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2212:28:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 193,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2202:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2202:39:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"hexValue": "416c6c657267696573",
																		"id": 202,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2272:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_6cf49b1836fb5b83156b2f76e4e6e0c6a67d6cea8703f0c748ca96c86a2e13f1",
																			"typeString": "literal_string \"Allergies\""
																		},
																		"value": "Allergies"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_6cf49b1836fb5b83156b2f76e4e6e0c6a67d6cea8703f0c748ca96c86a2e13f1",
																			"typeString": "literal_string \"Allergies\""
																		}
																	],
																	"expression": {
																		"id": 200,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "2255:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 201,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "2259:12:0",
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "2255:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 203,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2255:29:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 199,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2245:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 204,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2245:40:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2202:83:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 224,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 215,
																			"name": "recordType",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 181,
																			"src": "2384:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"expression": {
																			"id": 213,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2367:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 214,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2371:12:0",
																		"memberName": "encodePacked",
																		"nodeType": "MemberAccess",
																		"src": "2367:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function () pure returns (bytes memory)"
																		}
																	},
																	"id": 216,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2367:28:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 212,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "2357:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2357:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"hexValue": "4d65646963616c486973746f7279",
																			"id": 221,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2427:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_c8225e65a10e5dc813ca5248b0e70c0745c3067488bfbf1896f760ac2fc8b173",
																				"typeString": "literal_string \"MedicalHistory\""
																			},
																			"value": "MedicalHistory"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_c8225e65a10e5dc813ca5248b0e70c0745c3067488bfbf1896f760ac2fc8b173",
																				"typeString": "literal_string \"MedicalHistory\""
																			}
																		],
																		"expression": {
																			"id": 219,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2410:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 220,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2414:12:0",
																		"memberName": "encodePacked",
																		"nodeType": "MemberAccess",
																		"src": "2410:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function () pure returns (bytes memory)"
																		}
																	},
																	"id": 222,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2410:34:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 218,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "2400:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 223,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2400:45:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "2357:88:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 234,
																				"name": "recordType",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 181,
																				"src": "2549:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			],
																			"expression": {
																				"id": 232,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "2532:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 233,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "2536:12:0",
																			"memberName": "encodePacked",
																			"nodeType": "MemberAccess",
																			"src": "2532:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 235,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2532:28:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 231,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967288,
																	"src": "2522:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (bytes memory) pure returns (bytes32)"
																	}
																},
																"id": 236,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2522:39:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "4d656469636174696f6e73",
																				"id": 240,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2592:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_dfcfb7004c61f2d59465c96b6f4e566d418d621a8b38de3c720165ca75fad186",
																					"typeString": "literal_string \"Medications\""
																				},
																				"value": "Medications"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_dfcfb7004c61f2d59465c96b6f4e566d418d621a8b38de3c720165ca75fad186",
																					"typeString": "literal_string \"Medications\""
																				}
																			],
																			"expression": {
																				"id": 238,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "2575:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 239,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "2579:12:0",
																			"memberName": "encodePacked",
																			"nodeType": "MemberAccess",
																			"src": "2575:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 241,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2575:31:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 237,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967288,
																	"src": "2565:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (bytes memory) pure returns (bytes32)"
																	}
																},
																"id": 242,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2565:42:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "2522:85:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 254,
															"nodeType": "Block",
															"src": "2677:56:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "496e76616c6964207265636f72642074797065",
																				"id": 251,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2699:21:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_f378fceb4eca1955c2afcbaf678bcbdc23f3d8589cedf1bf3a12cc809562cd7b",
																					"typeString": "literal_string \"Invalid record type\""
																				},
																				"value": "Invalid record type"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_f378fceb4eca1955c2afcbaf678bcbdc23f3d8589cedf1bf3a12cc809562cd7b",
																					"typeString": "literal_string \"Invalid record type\""
																				}
																			],
																			"id": 250,
																			"name": "revert",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				4294967277,
																				4294967277
																			],
																			"referencedDeclaration": 4294967277,
																			"src": "2692:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																				"typeString": "function (string memory) pure"
																			}
																		},
																		"id": 252,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:29:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 253,
																	"nodeType": "ExpressionStatement",
																	"src": "2692:29:0"
																}
															]
														},
														"id": 255,
														"nodeType": "IfStatement",
														"src": "2518:215:0",
														"trueBody": {
															"id": 249,
															"nodeType": "Block",
															"src": "2609:62:0",
															"statements": [
																{
																	"expression": {
																		"id": 247,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 244,
																			"name": "storedHash",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 191,
																			"src": "2624:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"expression": {
																				"id": 245,
																				"name": "record",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 15,
																				"src": "2637:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_MedicalRecord_$12_storage",
																					"typeString": "struct jk.MedicalRecord storage ref"
																				}
																			},
																			"id": 246,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2644:15:0",
																			"memberName": "medicationsHash",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 11,
																			"src": "2637:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"src": "2624:35:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"id": 248,
																	"nodeType": "ExpressionStatement",
																	"src": "2624:35:0"
																}
															]
														}
													},
													"id": 256,
													"nodeType": "IfStatement",
													"src": "2353:380:0",
													"trueBody": {
														"id": 230,
														"nodeType": "Block",
														"src": "2447:65:0",
														"statements": [
															{
																"expression": {
																	"id": 228,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 225,
																		"name": "storedHash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 191,
																		"src": "2462:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"expression": {
																			"id": 226,
																			"name": "record",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 15,
																			"src": "2475:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_MedicalRecord_$12_storage",
																				"typeString": "struct jk.MedicalRecord storage ref"
																			}
																		},
																		"id": 227,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2482:18:0",
																		"memberName": "medicalHistoryHash",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 9,
																		"src": "2475:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"src": "2462:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"id": 229,
																"nodeType": "ExpressionStatement",
																"src": "2462:38:0"
															}
														]
													}
												},
												"id": 257,
												"nodeType": "IfStatement",
												"src": "2198:535:0",
												"trueBody": {
													"id": 211,
													"nodeType": "Block",
													"src": "2287:60:0",
													"statements": [
														{
															"expression": {
																"id": 209,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 206,
																	"name": "storedHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 191,
																	"src": "2302:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 207,
																		"name": "record",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 15,
																		"src": "2315:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MedicalRecord_$12_storage",
																			"typeString": "struct jk.MedicalRecord storage ref"
																		}
																	},
																	"id": 208,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2322:13:0",
																	"memberName": "allergiesHash",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 7,
																	"src": "2315:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "2302:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 210,
															"nodeType": "ExpressionStatement",
															"src": "2302:33:0"
														}
													]
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 258,
														"name": "providedHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "2760:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 259,
														"name": "storedHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 191,
														"src": "2776:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2760:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 189,
												"id": 261,
												"nodeType": "Return",
												"src": "2753:33:0"
											}
										]
									},
									"functionSelector": "122a183a",
									"id": 263,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 186,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 185,
												"name": "onlyAuthorized",
												"nameLocations": [
													"2118:14:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 66,
												"src": "2118:14:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2118:14:0"
										}
									],
									"name": "verifyRecord",
									"nameLocation": "2043:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "recordType",
												"nameLocation": "2070:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "2056:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 180,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2056:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "providedHash",
												"nameLocation": "2090:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "2082:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 182,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2082:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2055:48:0"
									},
									"returnParameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "2142:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 187,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2142:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2141:6:0"
									},
									"scope": 294,
									"src": "2034:760:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 274,
										"nodeType": "Block",
										"src": "2869:49:0",
										"statements": [
											{
												"expression": {
													"id": 272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 270,
														"name": "emergencyPinHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "2880:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 271,
														"name": "_newPinHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 265,
														"src": "2899:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2880:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 273,
												"nodeType": "ExpressionStatement",
												"src": "2880:30:0"
											}
										]
									},
									"functionSelector": "6823b4ea",
									"id": 275,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 268,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 267,
												"name": "onlyPatient",
												"nameLocations": [
													"2857:11:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 49,
												"src": "2857:11:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2857:11:0"
										}
									],
									"name": "setEmergencyPin",
									"nameLocation": "2811:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "_newPinHash",
												"nameLocation": "2835:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "2827:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 264,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2827:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2826:21:0"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:0:0"
									},
									"scope": 294,
									"src": "2802:116:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 292,
										"nodeType": "Block",
										"src": "2985:135:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 283,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 281,
																"name": "providedPinHash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 277,
																"src": "3004:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 282,
																"name": "emergencyPinHash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "3023:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "3004:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420656d657267656e63792050494e",
															"id": 284,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3041:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3952c6c3dff42b68e9b2bdc9cb3c10afb8deabb16ed413af9cf3b0fd10f1addd",
																"typeString": "literal_string \"Invalid emergency PIN\""
															},
															"value": "Invalid emergency PIN"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3952c6c3dff42b68e9b2bdc9cb3c10afb8deabb16ed413af9cf3b0fd10f1addd",
																"typeString": "literal_string \"Invalid emergency PIN\""
															}
														],
														"id": 280,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2996:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2996:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 286,
												"nodeType": "ExpressionStatement",
												"src": "2996:69:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 288,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3101:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 289,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3105:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3101:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 287,
														"name": "EmergencyAccessUsed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 37,
														"src": "3081:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3081:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 291,
												"nodeType": "EmitStatement",
												"src": "3076:36:0"
											}
										]
									},
									"functionSelector": "36677f34",
									"id": 293,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "emergencyAccess",
									"nameLocation": "2935:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "providedPinHash",
												"nameLocation": "2959:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "2951:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 276,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2951:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2950:25:0"
									},
									"returnParameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2985:0:0"
									},
									"scope": 294,
									"src": "2926:194:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 295,
							"src": "60:3063:0",
							"usedErrors": [],
							"usedEvents": [
								25,
								29,
								33,
								37
							]
						}
					],
					"src": "33:3092:0"
				},
				"id": 0
			}
		}
	}
}